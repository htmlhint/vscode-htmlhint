{
  "version": 3,
  "sources": ["../../node_modules/vscode-jsonrpc/lib/is.js", "../../node_modules/vscode-jsonrpc/lib/messages.js", "../../node_modules/vscode-jsonrpc/lib/events.js", "../../node_modules/vscode-jsonrpc/lib/messageReader.js", "../../node_modules/vscode-jsonrpc/lib/messageWriter.js", "../../node_modules/vscode-jsonrpc/lib/cancellation.js", "../../node_modules/vscode-jsonrpc/lib/linkedMap.js", "../../node_modules/vscode-jsonrpc/lib/pipeSupport.js", "../../node_modules/vscode-jsonrpc/lib/socketSupport.js", "../../node_modules/vscode-jsonrpc/lib/main.js", "../../node_modules/vscode-languageserver-types/lib/main.js", "../../node_modules/vscode-languageserver-protocol/lib/utils/is.js", "../../node_modules/vscode-languageserver-protocol/lib/protocol.js", "../../node_modules/vscode-languageserver-protocol/lib/protocol.configuration.proposed.js", "../../node_modules/vscode-languageserver-protocol/lib/protocol.workspaceFolders.proposed.js", "../../node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.proposed.js", "../../node_modules/vscode-languageserver-protocol/lib/main.js", "../../node_modules/vscode-languageclient/lib/utils/is.js", "../../node_modules/vscode-languageclient/lib/protocolCompletionItem.js", "../../node_modules/vscode-languageclient/lib/protocolCodeLens.js", "../../node_modules/vscode-languageclient/lib/codeConverter.js", "../../node_modules/vscode-languageclient/lib/protocolConverter.js", "../../node_modules/vscode-languageclient/lib/utils/async.js", "../../node_modules/vscode-languageclient/lib/utils/uuid.js", "../../node_modules/vscode-languageclient/lib/client.js", "../../node_modules/vscode-languageclient/lib/utils/electron.js", "../../node_modules/vscode-languageclient/lib/utils/processes.js", "../../node_modules/vscode-languageclient/lib/configuration.proposed.js", "../../node_modules/vscode-languageclient/lib/workspaceFolders.proposed.js", "../../node_modules/vscode-languageclient/lib/main.js", "../extension.ts"],
  "sourcesContent": ["/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar toString = Object.prototype.toString;\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return toString.call(value) === '[object String]';\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return toString.call(value) === '[object Number]';\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return toString.call(value) === '[object Error]';\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return toString.call(value) === '[object Function]';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(function (elem) { return string(elem); });\r\n}\r\nexports.stringArray = stringArray;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar is = require(\"./is\");\r\n/**\r\n * Predefined error codes.\r\n */\r\nvar ErrorCodes;\r\n(function (ErrorCodes) {\r\n    // Defined by JSON RPC\r\n    ErrorCodes.ParseError = -32700;\r\n    ErrorCodes.InvalidRequest = -32600;\r\n    ErrorCodes.MethodNotFound = -32601;\r\n    ErrorCodes.InvalidParams = -32602;\r\n    ErrorCodes.InternalError = -32603;\r\n    ErrorCodes.serverErrorStart = -32099;\r\n    ErrorCodes.serverErrorEnd = -32000;\r\n    ErrorCodes.ServerNotInitialized = -32002;\r\n    ErrorCodes.UnknownErrorCode = -32001;\r\n    // Defined by the protocol.\r\n    ErrorCodes.RequestCancelled = -32800;\r\n    // Defined by VSCode library.\r\n    ErrorCodes.MessageWriteError = 1;\r\n    ErrorCodes.MessageReadError = 2;\r\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\r\n/**\r\n * A error object return in a response in case a request\r\n * has failed.\r\n */\r\nvar ResponseError = /** @class */ (function (_super) {\r\n    __extends(ResponseError, _super);\r\n    function ResponseError(code, message, data) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\r\n        if (data !== void 0) {\r\n            _this.data = data;\r\n        }\r\n        Object.setPrototypeOf(_this, ResponseError.prototype);\r\n        return _this;\r\n    }\r\n    ResponseError.prototype.toJson = function () {\r\n        var result = {\r\n            code: this.code,\r\n            message: this.message\r\n        };\r\n        if (this.data !== void 0) {\r\n            result.data = this.data;\r\n        }\r\n        ;\r\n        return result;\r\n    };\r\n    return ResponseError;\r\n}(Error));\r\nexports.ResponseError = ResponseError;\r\n/**\r\n * An abstract implementation of a MessageType.\r\n */\r\nvar AbstractMessageType = /** @class */ (function () {\r\n    function AbstractMessageType(_method, _numberOfParams) {\r\n        this._method = _method;\r\n        this._numberOfParams = _numberOfParams;\r\n    }\r\n    Object.defineProperty(AbstractMessageType.prototype, \"method\", {\r\n        get: function () {\r\n            return this._method;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AbstractMessageType.prototype, \"numberOfParams\", {\r\n        get: function () {\r\n            return this._numberOfParams;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AbstractMessageType;\r\n}());\r\nexports.AbstractMessageType = AbstractMessageType;\r\n/**\r\n * Classes to type request response pairs\r\n */\r\nvar RequestType0 = /** @class */ (function (_super) {\r\n    __extends(RequestType0, _super);\r\n    function RequestType0(method) {\r\n        var _this = _super.call(this, method, 0) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType0;\r\n}(AbstractMessageType));\r\nexports.RequestType0 = RequestType0;\r\nvar RequestType = /** @class */ (function (_super) {\r\n    __extends(RequestType, _super);\r\n    function RequestType(method) {\r\n        var _this = _super.call(this, method, 1) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType;\r\n}(AbstractMessageType));\r\nexports.RequestType = RequestType;\r\nvar RequestType1 = /** @class */ (function (_super) {\r\n    __extends(RequestType1, _super);\r\n    function RequestType1(method) {\r\n        var _this = _super.call(this, method, 1) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType1;\r\n}(AbstractMessageType));\r\nexports.RequestType1 = RequestType1;\r\nvar RequestType2 = /** @class */ (function (_super) {\r\n    __extends(RequestType2, _super);\r\n    function RequestType2(method) {\r\n        var _this = _super.call(this, method, 2) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType2;\r\n}(AbstractMessageType));\r\nexports.RequestType2 = RequestType2;\r\nvar RequestType3 = /** @class */ (function (_super) {\r\n    __extends(RequestType3, _super);\r\n    function RequestType3(method) {\r\n        var _this = _super.call(this, method, 3) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType3;\r\n}(AbstractMessageType));\r\nexports.RequestType3 = RequestType3;\r\nvar RequestType4 = /** @class */ (function (_super) {\r\n    __extends(RequestType4, _super);\r\n    function RequestType4(method) {\r\n        var _this = _super.call(this, method, 4) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType4;\r\n}(AbstractMessageType));\r\nexports.RequestType4 = RequestType4;\r\nvar RequestType5 = /** @class */ (function (_super) {\r\n    __extends(RequestType5, _super);\r\n    function RequestType5(method) {\r\n        var _this = _super.call(this, method, 5) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType5;\r\n}(AbstractMessageType));\r\nexports.RequestType5 = RequestType5;\r\nvar RequestType6 = /** @class */ (function (_super) {\r\n    __extends(RequestType6, _super);\r\n    function RequestType6(method) {\r\n        var _this = _super.call(this, method, 6) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType6;\r\n}(AbstractMessageType));\r\nexports.RequestType6 = RequestType6;\r\nvar RequestType7 = /** @class */ (function (_super) {\r\n    __extends(RequestType7, _super);\r\n    function RequestType7(method) {\r\n        var _this = _super.call(this, method, 7) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType7;\r\n}(AbstractMessageType));\r\nexports.RequestType7 = RequestType7;\r\nvar RequestType8 = /** @class */ (function (_super) {\r\n    __extends(RequestType8, _super);\r\n    function RequestType8(method) {\r\n        var _this = _super.call(this, method, 8) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType8;\r\n}(AbstractMessageType));\r\nexports.RequestType8 = RequestType8;\r\nvar RequestType9 = /** @class */ (function (_super) {\r\n    __extends(RequestType9, _super);\r\n    function RequestType9(method) {\r\n        var _this = _super.call(this, method, 9) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType9;\r\n}(AbstractMessageType));\r\nexports.RequestType9 = RequestType9;\r\nvar NotificationType = /** @class */ (function (_super) {\r\n    __extends(NotificationType, _super);\r\n    function NotificationType(method) {\r\n        var _this = _super.call(this, method, 1) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType;\r\n}(AbstractMessageType));\r\nexports.NotificationType = NotificationType;\r\nvar NotificationType0 = /** @class */ (function (_super) {\r\n    __extends(NotificationType0, _super);\r\n    function NotificationType0(method) {\r\n        var _this = _super.call(this, method, 0) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType0;\r\n}(AbstractMessageType));\r\nexports.NotificationType0 = NotificationType0;\r\nvar NotificationType1 = /** @class */ (function (_super) {\r\n    __extends(NotificationType1, _super);\r\n    function NotificationType1(method) {\r\n        var _this = _super.call(this, method, 1) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType1;\r\n}(AbstractMessageType));\r\nexports.NotificationType1 = NotificationType1;\r\nvar NotificationType2 = /** @class */ (function (_super) {\r\n    __extends(NotificationType2, _super);\r\n    function NotificationType2(method) {\r\n        var _this = _super.call(this, method, 2) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType2;\r\n}(AbstractMessageType));\r\nexports.NotificationType2 = NotificationType2;\r\nvar NotificationType3 = /** @class */ (function (_super) {\r\n    __extends(NotificationType3, _super);\r\n    function NotificationType3(method) {\r\n        var _this = _super.call(this, method, 3) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType3;\r\n}(AbstractMessageType));\r\nexports.NotificationType3 = NotificationType3;\r\nvar NotificationType4 = /** @class */ (function (_super) {\r\n    __extends(NotificationType4, _super);\r\n    function NotificationType4(method) {\r\n        var _this = _super.call(this, method, 4) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType4;\r\n}(AbstractMessageType));\r\nexports.NotificationType4 = NotificationType4;\r\nvar NotificationType5 = /** @class */ (function (_super) {\r\n    __extends(NotificationType5, _super);\r\n    function NotificationType5(method) {\r\n        var _this = _super.call(this, method, 5) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType5;\r\n}(AbstractMessageType));\r\nexports.NotificationType5 = NotificationType5;\r\nvar NotificationType6 = /** @class */ (function (_super) {\r\n    __extends(NotificationType6, _super);\r\n    function NotificationType6(method) {\r\n        var _this = _super.call(this, method, 6) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType6;\r\n}(AbstractMessageType));\r\nexports.NotificationType6 = NotificationType6;\r\nvar NotificationType7 = /** @class */ (function (_super) {\r\n    __extends(NotificationType7, _super);\r\n    function NotificationType7(method) {\r\n        var _this = _super.call(this, method, 7) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType7;\r\n}(AbstractMessageType));\r\nexports.NotificationType7 = NotificationType7;\r\nvar NotificationType8 = /** @class */ (function (_super) {\r\n    __extends(NotificationType8, _super);\r\n    function NotificationType8(method) {\r\n        var _this = _super.call(this, method, 8) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType8;\r\n}(AbstractMessageType));\r\nexports.NotificationType8 = NotificationType8;\r\nvar NotificationType9 = /** @class */ (function (_super) {\r\n    __extends(NotificationType9, _super);\r\n    function NotificationType9(method) {\r\n        var _this = _super.call(this, method, 9) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType9;\r\n}(AbstractMessageType));\r\nexports.NotificationType9 = NotificationType9;\r\n/**\r\n * Tests if the given message is a request message\r\n */\r\nfunction isRequestMessage(message) {\r\n    var candidate = message;\r\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\r\n}\r\nexports.isRequestMessage = isRequestMessage;\r\n/**\r\n * Tests if the given message is a notification message\r\n */\r\nfunction isNotificationMessage(message) {\r\n    var candidate = message;\r\n    return candidate && is.string(candidate.method) && message.id === void 0;\r\n}\r\nexports.isNotificationMessage = isNotificationMessage;\r\n/**\r\n * Tests if the given message is a response message\r\n */\r\nfunction isResponseMessage(message) {\r\n    var candidate = message;\r\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\r\n}\r\nexports.isResponseMessage = isResponseMessage;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Disposable;\r\n(function (Disposable) {\r\n    function create(func) {\r\n        return {\r\n            dispose: func\r\n        };\r\n    }\r\n    Disposable.create = create;\r\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\r\nvar Event;\r\n(function (Event) {\r\n    var _disposable = { dispose: function () { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event = exports.Event || (exports.Event = {}));\r\nvar CallbackList = /** @class */ (function () {\r\n    function CallbackList() {\r\n    }\r\n    CallbackList.prototype.add = function (callback, context, bucket) {\r\n        var _this = this;\r\n        if (context === void 0) { context = null; }\r\n        if (!this._callbacks) {\r\n            this._callbacks = [];\r\n            this._contexts = [];\r\n        }\r\n        this._callbacks.push(callback);\r\n        this._contexts.push(context);\r\n        if (Array.isArray(bucket)) {\r\n            bucket.push({ dispose: function () { return _this.remove(callback, context); } });\r\n        }\r\n    };\r\n    CallbackList.prototype.remove = function (callback, context) {\r\n        if (context === void 0) { context = null; }\r\n        if (!this._callbacks) {\r\n            return;\r\n        }\r\n        var foundCallbackWithDifferentContext = false;\r\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n            if (this._callbacks[i] === callback) {\r\n                if (this._contexts[i] === context) {\r\n                    // callback & context match => remove it\r\n                    this._callbacks.splice(i, 1);\r\n                    this._contexts.splice(i, 1);\r\n                    return;\r\n                }\r\n                else {\r\n                    foundCallbackWithDifferentContext = true;\r\n                }\r\n            }\r\n        }\r\n        if (foundCallbackWithDifferentContext) {\r\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n        }\r\n    };\r\n    CallbackList.prototype.invoke = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!this._callbacks) {\r\n            return [];\r\n        }\r\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n        for (var i = 0, len = callbacks.length; i < len; i++) {\r\n            try {\r\n                ret.push(callbacks[i].apply(contexts[i], args));\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    CallbackList.prototype.isEmpty = function () {\r\n        return !this._callbacks || this._callbacks.length === 0;\r\n    };\r\n    CallbackList.prototype.dispose = function () {\r\n        this._callbacks = undefined;\r\n        this._contexts = undefined;\r\n    };\r\n    return CallbackList;\r\n}());\r\nvar Emitter = /** @class */ (function () {\r\n    function Emitter(_options) {\r\n        this._options = _options;\r\n    }\r\n    Object.defineProperty(Emitter.prototype, \"event\", {\r\n        /**\r\n         * For the public to allow to subscribe\r\n         * to events from this Emitter\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._event) {\r\n                this._event = function (listener, thisArgs, disposables) {\r\n                    if (!_this._callbacks) {\r\n                        _this._callbacks = new CallbackList();\r\n                    }\r\n                    if (_this._options && _this._options.onFirstListenerAdd && _this._callbacks.isEmpty()) {\r\n                        _this._options.onFirstListenerAdd(_this);\r\n                    }\r\n                    _this._callbacks.add(listener, thisArgs);\r\n                    var result;\r\n                    result = {\r\n                        dispose: function () {\r\n                            _this._callbacks.remove(listener, thisArgs);\r\n                            result.dispose = Emitter._noop;\r\n                            if (_this._options && _this._options.onLastListenerRemove && _this._callbacks.isEmpty()) {\r\n                                _this._options.onLastListenerRemove(_this);\r\n                            }\r\n                        }\r\n                    };\r\n                    if (Array.isArray(disposables)) {\r\n                        disposables.push(result);\r\n                    }\r\n                    return result;\r\n                };\r\n            }\r\n            return this._event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    Emitter.prototype.fire = function (event) {\r\n        if (this._callbacks) {\r\n            this._callbacks.invoke.call(this._callbacks, event);\r\n        }\r\n    };\r\n    Emitter.prototype.dispose = function () {\r\n        if (this._callbacks) {\r\n            this._callbacks.dispose();\r\n            this._callbacks = undefined;\r\n        }\r\n    };\r\n    Emitter._noop = function () { };\r\n    return Emitter;\r\n}());\r\nexports.Emitter = Emitter;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar events_1 = require(\"./events\");\r\nvar Is = require(\"./is\");\r\nvar DefaultSize = 8192;\r\nvar CR = new Buffer('\\r', 'ascii')[0];\r\nvar LF = new Buffer('\\n', 'ascii')[0];\r\nvar CRLF = '\\r\\n';\r\nvar MessageBuffer = /** @class */ (function () {\r\n    function MessageBuffer(encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        this.encoding = encoding;\r\n        this.index = 0;\r\n        this.buffer = new Buffer(DefaultSize);\r\n    }\r\n    MessageBuffer.prototype.append = function (chunk) {\r\n        var toAppend = chunk;\r\n        if (typeof (chunk) == 'string') {\r\n            var str = chunk;\r\n            var bufferLen = Buffer.byteLength(str, this.encoding);\r\n            toAppend = new Buffer(bufferLen);\r\n            toAppend.write(str, 0, bufferLen, this.encoding);\r\n        }\r\n        if (this.buffer.length - this.index >= toAppend.length) {\r\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n        }\r\n        else {\r\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n            if (this.index === 0) {\r\n                this.buffer = new Buffer(newSize);\r\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n            }\r\n            else {\r\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n            }\r\n        }\r\n        this.index += toAppend.length;\r\n    };\r\n    MessageBuffer.prototype.tryReadHeaders = function () {\r\n        var result = undefined;\r\n        var current = 0;\r\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\r\n            current++;\r\n        }\r\n        // No header / body separator found (e.g CRLFCRLF)\r\n        if (current + 3 >= this.index) {\r\n            return result;\r\n        }\r\n        result = Object.create(null);\r\n        var headers = this.buffer.toString('ascii', 0, current).split(CRLF);\r\n        headers.forEach(function (header) {\r\n            var index = header.indexOf(':');\r\n            if (index === -1) {\r\n                throw new Error('Message header must separate key and value using :');\r\n            }\r\n            var key = header.substr(0, index);\r\n            var value = header.substr(index + 1).trim();\r\n            result[key] = value;\r\n        });\r\n        var nextStart = current + 4;\r\n        this.buffer = this.buffer.slice(nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    };\r\n    MessageBuffer.prototype.tryReadContent = function (length) {\r\n        if (this.index < length) {\r\n            return null;\r\n        }\r\n        var result = this.buffer.toString(this.encoding, 0, length);\r\n        var nextStart = length;\r\n        this.buffer.copy(this.buffer, 0, nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    };\r\n    Object.defineProperty(MessageBuffer.prototype, \"numberOfBytes\", {\r\n        get: function () {\r\n            return this.index;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return MessageBuffer;\r\n}());\r\nvar MessageReader;\r\n(function (MessageReader) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\r\n    }\r\n    MessageReader.is = is;\r\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\r\nvar AbstractMessageReader = /** @class */ (function () {\r\n    function AbstractMessageReader() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n        this.partialMessageEmitter = new events_1.Emitter();\r\n    }\r\n    AbstractMessageReader.prototype.dispose = function () {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    };\r\n    Object.defineProperty(AbstractMessageReader.prototype, \"onError\", {\r\n        get: function () {\r\n            return this.errorEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageReader.prototype.fireError = function (error) {\r\n        this.errorEmitter.fire(this.asError(error));\r\n    };\r\n    Object.defineProperty(AbstractMessageReader.prototype, \"onClose\", {\r\n        get: function () {\r\n            return this.closeEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageReader.prototype.fireClose = function () {\r\n        this.closeEmitter.fire(undefined);\r\n    };\r\n    Object.defineProperty(AbstractMessageReader.prototype, \"onPartialMessage\", {\r\n        get: function () {\r\n            return this.partialMessageEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageReader.prototype.firePartialMessage = function (info) {\r\n        this.partialMessageEmitter.fire(info);\r\n    };\r\n    AbstractMessageReader.prototype.asError = function (error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(\"Reader recevied error. Reason: \" + (Is.string(error.message) ? error.message : 'unknown'));\r\n        }\r\n    };\r\n    return AbstractMessageReader;\r\n}());\r\nexports.AbstractMessageReader = AbstractMessageReader;\r\nvar StreamMessageReader = /** @class */ (function (_super) {\r\n    __extends(StreamMessageReader, _super);\r\n    function StreamMessageReader(readable, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        var _this = _super.call(this) || this;\r\n        _this.readable = readable;\r\n        _this.buffer = new MessageBuffer(encoding);\r\n        _this._partialMessageTimeout = 10000;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(StreamMessageReader.prototype, \"partialMessageTimeout\", {\r\n        get: function () {\r\n            return this._partialMessageTimeout;\r\n        },\r\n        set: function (timeout) {\r\n            this._partialMessageTimeout = timeout;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    StreamMessageReader.prototype.listen = function (callback) {\r\n        var _this = this;\r\n        this.nextMessageLength = -1;\r\n        this.messageToken = 0;\r\n        this.partialMessageTimer = undefined;\r\n        this.callback = callback;\r\n        this.readable.on('data', function (data) {\r\n            _this.onData(data);\r\n        });\r\n        this.readable.on('error', function (error) { return _this.fireError(error); });\r\n        this.readable.on('close', function () { return _this.fireClose(); });\r\n    };\r\n    StreamMessageReader.prototype.onData = function (data) {\r\n        this.buffer.append(data);\r\n        while (true) {\r\n            if (this.nextMessageLength === -1) {\r\n                var headers = this.buffer.tryReadHeaders();\r\n                if (!headers) {\r\n                    return;\r\n                }\r\n                var contentLength = headers['Content-Length'];\r\n                if (!contentLength) {\r\n                    throw new Error('Header must provide a Content-Length property.');\r\n                }\r\n                var length = parseInt(contentLength);\r\n                if (isNaN(length)) {\r\n                    throw new Error('Content-Length value must be a number.');\r\n                }\r\n                this.nextMessageLength = length;\r\n                // Take the encoding form the header. For compatibility\r\n                // treat both utf-8 and utf8 as node utf8\r\n            }\r\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n            if (msg === null) {\r\n                /** We haven't recevied the full message yet. */\r\n                this.setPartialMessageTimer();\r\n                return;\r\n            }\r\n            this.clearPartialMessageTimer();\r\n            this.nextMessageLength = -1;\r\n            this.messageToken++;\r\n            var json = JSON.parse(msg);\r\n            this.callback(json);\r\n        }\r\n    };\r\n    StreamMessageReader.prototype.clearPartialMessageTimer = function () {\r\n        if (this.partialMessageTimer) {\r\n            clearTimeout(this.partialMessageTimer);\r\n            this.partialMessageTimer = undefined;\r\n        }\r\n    };\r\n    StreamMessageReader.prototype.setPartialMessageTimer = function () {\r\n        var _this = this;\r\n        this.clearPartialMessageTimer();\r\n        if (this._partialMessageTimeout <= 0) {\r\n            return;\r\n        }\r\n        this.partialMessageTimer = setTimeout(function (token, timeout) {\r\n            _this.partialMessageTimer = undefined;\r\n            if (token === _this.messageToken) {\r\n                _this.firePartialMessage({ messageToken: token, waitingTime: timeout });\r\n                _this.setPartialMessageTimer();\r\n            }\r\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\r\n    };\r\n    return StreamMessageReader;\r\n}(AbstractMessageReader));\r\nexports.StreamMessageReader = StreamMessageReader;\r\nvar IPCMessageReader = /** @class */ (function (_super) {\r\n    __extends(IPCMessageReader, _super);\r\n    function IPCMessageReader(process) {\r\n        var _this = _super.call(this) || this;\r\n        _this.process = process;\r\n        var eventEmitter = _this.process;\r\n        eventEmitter.on('error', function (error) { return _this.fireError(error); });\r\n        eventEmitter.on('close', function () { return _this.fireClose(); });\r\n        return _this;\r\n    }\r\n    IPCMessageReader.prototype.listen = function (callback) {\r\n        this.process.on('message', callback);\r\n    };\r\n    return IPCMessageReader;\r\n}(AbstractMessageReader));\r\nexports.IPCMessageReader = IPCMessageReader;\r\nvar SocketMessageReader = /** @class */ (function (_super) {\r\n    __extends(SocketMessageReader, _super);\r\n    function SocketMessageReader(socket, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf-8'; }\r\n        return _super.call(this, socket, encoding) || this;\r\n    }\r\n    return SocketMessageReader;\r\n}(StreamMessageReader));\r\nexports.SocketMessageReader = SocketMessageReader;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar events_1 = require(\"./events\");\r\nvar Is = require(\"./is\");\r\nvar ContentLength = 'Content-Length: ';\r\nvar CRLF = '\\r\\n';\r\nvar MessageWriter;\r\n(function (MessageWriter) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.write);\r\n    }\r\n    MessageWriter.is = is;\r\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\r\nvar AbstractMessageWriter = /** @class */ (function () {\r\n    function AbstractMessageWriter() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n    }\r\n    AbstractMessageWriter.prototype.dispose = function () {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    };\r\n    Object.defineProperty(AbstractMessageWriter.prototype, \"onError\", {\r\n        get: function () {\r\n            return this.errorEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageWriter.prototype.fireError = function (error, message, count) {\r\n        this.errorEmitter.fire([this.asError(error), message, count]);\r\n    };\r\n    Object.defineProperty(AbstractMessageWriter.prototype, \"onClose\", {\r\n        get: function () {\r\n            return this.closeEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageWriter.prototype.fireClose = function () {\r\n        this.closeEmitter.fire(undefined);\r\n    };\r\n    AbstractMessageWriter.prototype.asError = function (error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(\"Writer recevied error. Reason: \" + (Is.string(error.message) ? error.message : 'unknown'));\r\n        }\r\n    };\r\n    return AbstractMessageWriter;\r\n}());\r\nexports.AbstractMessageWriter = AbstractMessageWriter;\r\nvar StreamMessageWriter = /** @class */ (function (_super) {\r\n    __extends(StreamMessageWriter, _super);\r\n    function StreamMessageWriter(writable, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        var _this = _super.call(this) || this;\r\n        _this.writable = writable;\r\n        _this.encoding = encoding;\r\n        _this.errorCount = 0;\r\n        _this.writable.on('error', function (error) { return _this.fireError(error); });\r\n        _this.writable.on('close', function () { return _this.fireClose(); });\r\n        return _this;\r\n    }\r\n    StreamMessageWriter.prototype.write = function (msg) {\r\n        var json = JSON.stringify(msg);\r\n        var contentLength = Buffer.byteLength(json, this.encoding);\r\n        var headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.writable.write(headers.join(''), 'ascii');\r\n            // Now write the content. This can be written in any encoding\r\n            this.writable.write(json, this.encoding);\r\n            this.errorCount = 0;\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    };\r\n    return StreamMessageWriter;\r\n}(AbstractMessageWriter));\r\nexports.StreamMessageWriter = StreamMessageWriter;\r\nvar IPCMessageWriter = /** @class */ (function (_super) {\r\n    __extends(IPCMessageWriter, _super);\r\n    function IPCMessageWriter(process) {\r\n        var _this = _super.call(this) || this;\r\n        _this.process = process;\r\n        _this.errorCount = 0;\r\n        _this.queue = [];\r\n        _this.sending = false;\r\n        var eventEmitter = _this.process;\r\n        eventEmitter.on('error', function (error) { return _this.fireError(error); });\r\n        eventEmitter.on('close', function () { return _this.fireClose; });\r\n        return _this;\r\n    }\r\n    IPCMessageWriter.prototype.write = function (msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    };\r\n    IPCMessageWriter.prototype.doWriteMessage = function (msg) {\r\n        var _this = this;\r\n        try {\r\n            if (this.process.send) {\r\n                this.sending = true;\r\n                this.process.send(msg, undefined, undefined, function (error) {\r\n                    _this.sending = false;\r\n                    if (error) {\r\n                        _this.errorCount++;\r\n                        _this.fireError(error, msg, _this.errorCount);\r\n                    }\r\n                    else {\r\n                        _this.errorCount = 0;\r\n                    }\r\n                    if (_this.queue.length > 0) {\r\n                        _this.doWriteMessage(_this.queue.shift());\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    };\r\n    return IPCMessageWriter;\r\n}(AbstractMessageWriter));\r\nexports.IPCMessageWriter = IPCMessageWriter;\r\nvar SocketMessageWriter = /** @class */ (function (_super) {\r\n    __extends(SocketMessageWriter, _super);\r\n    function SocketMessageWriter(socket, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        var _this = _super.call(this) || this;\r\n        _this.socket = socket;\r\n        _this.queue = [];\r\n        _this.sending = false;\r\n        _this.encoding = encoding;\r\n        _this.errorCount = 0;\r\n        _this.socket.on('error', function (error) { return _this.fireError(error); });\r\n        _this.socket.on('close', function () { return _this.fireClose(); });\r\n        return _this;\r\n    }\r\n    SocketMessageWriter.prototype.write = function (msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    };\r\n    SocketMessageWriter.prototype.doWriteMessage = function (msg) {\r\n        var _this = this;\r\n        var json = JSON.stringify(msg);\r\n        var contentLength = Buffer.byteLength(json, this.encoding);\r\n        var headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.sending = true;\r\n            this.socket.write(headers.join(''), 'ascii', function (error) {\r\n                if (error) {\r\n                    _this.handleError(error, msg);\r\n                }\r\n                try {\r\n                    // Now write the content. This can be written in any encoding\r\n                    _this.socket.write(json, _this.encoding, function (error) {\r\n                        _this.sending = false;\r\n                        if (error) {\r\n                            _this.handleError(error, msg);\r\n                        }\r\n                        else {\r\n                            _this.errorCount = 0;\r\n                        }\r\n                        if (_this.queue.length > 0) {\r\n                            _this.doWriteMessage(_this.queue.shift());\r\n                        }\r\n                    });\r\n                }\r\n                catch (error) {\r\n                    _this.handleError(error, msg);\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.handleError(error, msg);\r\n        }\r\n    };\r\n    SocketMessageWriter.prototype.handleError = function (error, msg) {\r\n        this.errorCount++;\r\n        this.fireError(error, msg, this.errorCount);\r\n    };\r\n    return SocketMessageWriter;\r\n}(AbstractMessageWriter));\r\nexports.SocketMessageWriter = SocketMessageWriter;\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar events_1 = require(\"./events\");\r\nvar Is = require(\"./is\");\r\nvar CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && (candidate === CancellationToken.None\r\n            || candidate === CancellationToken.Cancelled\r\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\r\n    }\r\n    CancellationToken.is = is;\r\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\nvar shortcutEvent = Object.freeze(function (callback, context) {\r\n    var handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose: function () { clearTimeout(handle); } };\r\n});\r\nvar MutableToken = /** @class */ (function () {\r\n    function MutableToken() {\r\n        this._isCancelled = false;\r\n    }\r\n    MutableToken.prototype.cancel = function () {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this._emitter = undefined;\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\r\n        get: function () {\r\n            return this._isCancelled;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\r\n        get: function () {\r\n            if (this._isCancelled) {\r\n                return shortcutEvent;\r\n            }\r\n            if (!this._emitter) {\r\n                this._emitter = new events_1.Emitter();\r\n            }\r\n            return this._emitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return MutableToken;\r\n}());\r\nvar CancellationTokenSource = /** @class */ (function () {\r\n    function CancellationTokenSource() {\r\n    }\r\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\r\n        get: function () {\r\n            if (!this._token) {\r\n                // be lazy and create the token only when\r\n                // actually needed\r\n                this._token = new MutableToken();\r\n            }\r\n            return this._token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CancellationTokenSource.prototype.cancel = function () {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else {\r\n            this._token.cancel();\r\n        }\r\n    };\r\n    CancellationTokenSource.prototype.dispose = function () {\r\n        this.cancel();\r\n    };\r\n    return CancellationTokenSource;\r\n}());\r\nexports.CancellationTokenSource = CancellationTokenSource;\r\n", "\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Touch;\r\n(function (Touch) {\r\n    Touch.None = 0;\r\n    Touch.First = 1;\r\n    Touch.Last = 2;\r\n})(Touch = exports.Touch || (exports.Touch = {}));\r\nvar LinkedMap = /** @class */ (function () {\r\n    function LinkedMap() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    LinkedMap.prototype.clear = function () {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    };\r\n    LinkedMap.prototype.isEmpty = function () {\r\n        return !this._head && !this._tail;\r\n    };\r\n    Object.defineProperty(LinkedMap.prototype, \"size\", {\r\n        get: function () {\r\n            return this._size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LinkedMap.prototype.has = function (key) {\r\n        return this._map.has(key);\r\n    };\r\n    LinkedMap.prototype.get = function (key) {\r\n        var item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return item.value;\r\n    };\r\n    LinkedMap.prototype.set = function (key, value, touch) {\r\n        if (touch === void 0) { touch = Touch.None; }\r\n        var item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== Touch.None) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key: key, value: value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case Touch.None:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case Touch.First:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case Touch.Last:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    };\r\n    LinkedMap.prototype.delete = function (key) {\r\n        var item = this._map.get(key);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return true;\r\n    };\r\n    LinkedMap.prototype.shift = function () {\r\n        if (!this._head && !this._tail) {\r\n            return undefined;\r\n        }\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        var item = this._head;\r\n        this._map.delete(item.key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    };\r\n    LinkedMap.prototype.forEach = function (callbackfn, thisArg) {\r\n        var current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    };\r\n    LinkedMap.prototype.forEachReverse = function (callbackfn, thisArg) {\r\n        var current = this._tail;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.previous;\r\n        }\r\n    };\r\n    LinkedMap.prototype.values = function () {\r\n        var result = [];\r\n        var current = this._head;\r\n        while (current) {\r\n            result.push(current.value);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    };\r\n    LinkedMap.prototype.keys = function () {\r\n        var result = [];\r\n        var current = this._head;\r\n        while (current) {\r\n            result.push(current.key);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    };\r\n    /* JSON RPC run on es5 which has no Symbol.iterator\r\n    public keys(): IterableIterator<K> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    let result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    public values(): IterableIterator<V> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    let result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    LinkedMap.prototype.addItemFirst = function (item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    };\r\n    LinkedMap.prototype.addItemLast = function (item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    };\r\n    LinkedMap.prototype.removeItem = function (item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            var next = item.next;\r\n            var previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n    };\r\n    LinkedMap.prototype.touch = function (item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\r\n            return;\r\n        }\r\n        if (touch === Touch.First) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            var next = item.next;\r\n            var previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === Touch.Last) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            var next = item.next;\r\n            var previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    };\r\n    return LinkedMap;\r\n}());\r\nexports.LinkedMap = LinkedMap;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar path_1 = require(\"path\");\r\nvar os_1 = require(\"os\");\r\nvar crypto_1 = require(\"crypto\");\r\nvar net_1 = require(\"net\");\r\nvar messageReader_1 = require(\"./messageReader\");\r\nvar messageWriter_1 = require(\"./messageWriter\");\r\nfunction generateRandomPipeName() {\r\n    var randomSuffix = crypto_1.randomBytes(21).toString('hex');\r\n    if (process.platform === 'win32') {\r\n        return \"\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-\" + randomSuffix + \"-sock\";\r\n    }\r\n    else {\r\n        // Mac/Unix: use socket file\r\n        return path_1.join(os_1.tmpdir(), \"vscode-\" + randomSuffix + \".sock\");\r\n    }\r\n}\r\nexports.generateRandomPipeName = generateRandomPipeName;\r\nfunction createClientPipeTransport(pipeName, encoding) {\r\n    if (encoding === void 0) { encoding = 'utf-8'; }\r\n    var connectResolve;\r\n    var connected = new Promise(function (resolve, _reject) {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise(function (resolve, reject) {\r\n        var server = net_1.createServer(function (socket) {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(pipeName, function () {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: function () { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientPipeTransport = createClientPipeTransport;\r\nfunction createServerPipeTransport(pipeName, encoding) {\r\n    if (encoding === void 0) { encoding = 'utf-8'; }\r\n    var socket = net_1.createConnection(pipeName);\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerPipeTransport = createServerPipeTransport;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar net_1 = require(\"net\");\r\nvar messageReader_1 = require(\"./messageReader\");\r\nvar messageWriter_1 = require(\"./messageWriter\");\r\nfunction createClientSocketTransport(port, encoding) {\r\n    if (encoding === void 0) { encoding = 'utf-8'; }\r\n    var connectResolve;\r\n    var connected = new Promise(function (resolve, _reject) {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise(function (resolve, reject) {\r\n        var server = net_1.createServer(function (socket) {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(port, '127.0.0.1', function () {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: function () { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientSocketTransport = createClientSocketTransport;\r\nfunction createServerSocketTransport(port, encoding) {\r\n    if (encoding === void 0) { encoding = 'utf-8'; }\r\n    var socket = net_1.createConnection(port, '127.0.0.1');\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerSocketTransport = createServerSocketTransport;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"./thenable.ts\" />\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Is = require(\"./is\");\r\nvar messages_1 = require(\"./messages\");\r\nexports.RequestType = messages_1.RequestType;\r\nexports.RequestType0 = messages_1.RequestType0;\r\nexports.RequestType1 = messages_1.RequestType1;\r\nexports.RequestType2 = messages_1.RequestType2;\r\nexports.RequestType3 = messages_1.RequestType3;\r\nexports.RequestType4 = messages_1.RequestType4;\r\nexports.RequestType5 = messages_1.RequestType5;\r\nexports.RequestType6 = messages_1.RequestType6;\r\nexports.RequestType7 = messages_1.RequestType7;\r\nexports.RequestType8 = messages_1.RequestType8;\r\nexports.RequestType9 = messages_1.RequestType9;\r\nexports.ResponseError = messages_1.ResponseError;\r\nexports.ErrorCodes = messages_1.ErrorCodes;\r\nexports.NotificationType = messages_1.NotificationType;\r\nexports.NotificationType0 = messages_1.NotificationType0;\r\nexports.NotificationType1 = messages_1.NotificationType1;\r\nexports.NotificationType2 = messages_1.NotificationType2;\r\nexports.NotificationType3 = messages_1.NotificationType3;\r\nexports.NotificationType4 = messages_1.NotificationType4;\r\nexports.NotificationType5 = messages_1.NotificationType5;\r\nexports.NotificationType6 = messages_1.NotificationType6;\r\nexports.NotificationType7 = messages_1.NotificationType7;\r\nexports.NotificationType8 = messages_1.NotificationType8;\r\nexports.NotificationType9 = messages_1.NotificationType9;\r\nvar messageReader_1 = require(\"./messageReader\");\r\nexports.MessageReader = messageReader_1.MessageReader;\r\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\r\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\r\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\r\nvar messageWriter_1 = require(\"./messageWriter\");\r\nexports.MessageWriter = messageWriter_1.MessageWriter;\r\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\r\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\r\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\r\nvar events_1 = require(\"./events\");\r\nexports.Disposable = events_1.Disposable;\r\nexports.Event = events_1.Event;\r\nexports.Emitter = events_1.Emitter;\r\nvar cancellation_1 = require(\"./cancellation\");\r\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\nexports.CancellationToken = cancellation_1.CancellationToken;\r\nvar linkedMap_1 = require(\"./linkedMap\");\r\n__export(require(\"./pipeSupport\"));\r\n__export(require(\"./socketSupport\"));\r\nvar CancelNotification;\r\n(function (CancelNotification) {\r\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\r\n})(CancelNotification || (CancelNotification = {}));\r\nexports.NullLogger = Object.freeze({\r\n    error: function () { },\r\n    warn: function () { },\r\n    info: function () { },\r\n    log: function () { }\r\n});\r\nvar Trace;\r\n(function (Trace) {\r\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\r\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\r\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\n(function (Trace) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        switch (value) {\r\n            case 'off':\r\n                return Trace.Off;\r\n            case 'messages':\r\n                return Trace.Messages;\r\n            case 'verbose':\r\n                return Trace.Verbose;\r\n            default:\r\n                return Trace.Off;\r\n        }\r\n    }\r\n    Trace.fromString = fromString;\r\n    function toString(value) {\r\n        switch (value) {\r\n            case Trace.Off:\r\n                return 'off';\r\n            case Trace.Messages:\r\n                return 'messages';\r\n            case Trace.Verbose:\r\n                return 'verbose';\r\n            default:\r\n                return 'off';\r\n        }\r\n    }\r\n    Trace.toString = toString;\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\nvar SetTraceNotification;\r\n(function (SetTraceNotification) {\r\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\r\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\r\nvar LogTraceNotification;\r\n(function (LogTraceNotification) {\r\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\r\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\r\nvar ConnectionErrors;\r\n(function (ConnectionErrors) {\r\n    /**\r\n     * The connection is closed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\r\n    /**\r\n     * The connection got disposed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\r\n    /**\r\n     * The connection is already in listening mode.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\r\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\r\nvar ConnectionError = /** @class */ (function (_super) {\r\n    __extends(ConnectionError, _super);\r\n    function ConnectionError(code, message) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.code = code;\r\n        Object.setPrototypeOf(_this, ConnectionError.prototype);\r\n        return _this;\r\n    }\r\n    return ConnectionError;\r\n}(Error));\r\nexports.ConnectionError = ConnectionError;\r\nvar ConnectionStrategy;\r\n(function (ConnectionStrategy) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.func(candidate.cancelUndispatched);\r\n    }\r\n    ConnectionStrategy.is = is;\r\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\r\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\r\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\r\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\r\n    var sequenceNumber = 0;\r\n    var notificationSquenceNumber = 0;\r\n    var unknownResponseSquenceNumber = 0;\r\n    var version = '2.0';\r\n    var starRequestHandler = undefined;\r\n    var requestHandlers = Object.create(null);\r\n    var starNotificationHandler = undefined;\r\n    var notificationHandlers = Object.create(null);\r\n    var timer;\r\n    var messageQueue = new linkedMap_1.LinkedMap();\r\n    var responsePromises = Object.create(null);\r\n    var requestTokens = Object.create(null);\r\n    var trace = Trace.Off;\r\n    var tracer;\r\n    var state = ConnectionState.New;\r\n    var errorEmitter = new events_1.Emitter();\r\n    var closeEmitter = new events_1.Emitter();\r\n    var unhandledNotificationEmitter = new events_1.Emitter();\r\n    var disposeEmitter = new events_1.Emitter();\r\n    function createRequestQueueKey(id) {\r\n        return 'req-' + id.toString();\r\n    }\r\n    function createResponseQueueKey(id) {\r\n        if (id === null) {\r\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\r\n        }\r\n        else {\r\n            return 'res-' + id.toString();\r\n        }\r\n    }\r\n    function createNotificationQueueKey() {\r\n        return 'not-' + (++notificationSquenceNumber).toString();\r\n    }\r\n    function addMessageToQueue(queue, message) {\r\n        if (messages_1.isRequestMessage(message)) {\r\n            queue.set(createRequestQueueKey(message.id), message);\r\n        }\r\n        else if (messages_1.isResponseMessage(message)) {\r\n            queue.set(createResponseQueueKey(message.id), message);\r\n        }\r\n        else {\r\n            queue.set(createNotificationQueueKey(), message);\r\n        }\r\n    }\r\n    function cancelUndispatched(_message) {\r\n        return undefined;\r\n    }\r\n    function isListening() {\r\n        return state === ConnectionState.Listening;\r\n    }\r\n    function isClosed() {\r\n        return state === ConnectionState.Closed;\r\n    }\r\n    function isDisposed() {\r\n        return state === ConnectionState.Disposed;\r\n    }\r\n    function closeHandler() {\r\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\r\n            state = ConnectionState.Closed;\r\n            closeEmitter.fire(undefined);\r\n        }\r\n        // If the connection is disposed don't sent close events.\r\n    }\r\n    ;\r\n    function readErrorHandler(error) {\r\n        errorEmitter.fire([error, undefined, undefined]);\r\n    }\r\n    function writeErrorHandler(data) {\r\n        errorEmitter.fire(data);\r\n    }\r\n    messageReader.onClose(closeHandler);\r\n    messageReader.onError(readErrorHandler);\r\n    messageWriter.onClose(closeHandler);\r\n    messageWriter.onError(writeErrorHandler);\r\n    function triggerMessageQueue() {\r\n        if (timer || messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        timer = setImmediate(function () {\r\n            timer = undefined;\r\n            processMessageQueue();\r\n        });\r\n    }\r\n    function processMessageQueue() {\r\n        if (messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        var message = messageQueue.shift();\r\n        try {\r\n            if (messages_1.isRequestMessage(message)) {\r\n                handleRequest(message);\r\n            }\r\n            else if (messages_1.isNotificationMessage(message)) {\r\n                handleNotification(message);\r\n            }\r\n            else if (messages_1.isResponseMessage(message)) {\r\n                handleResponse(message);\r\n            }\r\n            else {\r\n                handleInvalidMessage(message);\r\n            }\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    }\r\n    var callback = function (message) {\r\n        try {\r\n            // We have recevied a cancellation message. Check if the message is still in the queue\r\n            // and cancel it if allowed to do so.\r\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\r\n                var key = createRequestQueueKey(message.params.id);\r\n                var toCancel = messageQueue.get(key);\r\n                if (messages_1.isRequestMessage(toCancel)) {\r\n                    var response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\r\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\r\n                        messageQueue.delete(key);\r\n                        response.id = toCancel.id;\r\n                        traceSendingResponse(response, message.method, Date.now());\r\n                        messageWriter.write(response);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            addMessageToQueue(messageQueue, message);\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    };\r\n    function handleRequest(requestMessage) {\r\n        if (isDisposed()) {\r\n            // we return here silently since we fired an event when the\r\n            // connection got disposed.\r\n            return;\r\n        }\r\n        function reply(resultOrError, method, startTime) {\r\n            var message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id\r\n            };\r\n            if (resultOrError instanceof messages_1.ResponseError) {\r\n                message.error = resultOrError.toJson();\r\n            }\r\n            else {\r\n                message.result = resultOrError === void 0 ? null : resultOrError;\r\n            }\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replyError(error, method, startTime) {\r\n            var message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                error: error.toJson()\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replySuccess(result, method, startTime) {\r\n            // The JSON RPC defines that a response must either have a result or an error\r\n            // So we can't treat undefined as a valid response result.\r\n            if (result === void 0) {\r\n                result = null;\r\n            }\r\n            var message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                result: result\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        traceReceivedRequest(requestMessage);\r\n        var element = requestHandlers[requestMessage.method];\r\n        var type;\r\n        var requestHandler;\r\n        if (element) {\r\n            type = element.type;\r\n            requestHandler = element.handler;\r\n        }\r\n        var startTime = Date.now();\r\n        if (requestHandler || starRequestHandler) {\r\n            var cancellationSource = new cancellation_1.CancellationTokenSource();\r\n            var tokenKey_1 = String(requestMessage.id);\r\n            requestTokens[tokenKey_1] = cancellationSource;\r\n            try {\r\n                var handlerResult = void 0;\r\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\r\n                }\r\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler.apply(void 0, requestMessage.params.concat([cancellationSource.token])) : starRequestHandler.apply(void 0, [requestMessage.method].concat(requestMessage.params, [cancellationSource.token]));\r\n                }\r\n                else {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\r\n                }\r\n                var promise = handlerResult;\r\n                if (!handlerResult) {\r\n                    delete requestTokens[tokenKey_1];\r\n                    replySuccess(handlerResult, requestMessage.method, startTime);\r\n                }\r\n                else if (promise.then) {\r\n                    promise.then(function (resultOrError) {\r\n                        delete requestTokens[tokenKey_1];\r\n                        reply(resultOrError, requestMessage.method, startTime);\r\n                    }, function (error) {\r\n                        delete requestTokens[tokenKey_1];\r\n                        if (error instanceof messages_1.ResponseError) {\r\n                            replyError(error, requestMessage.method, startTime);\r\n                        }\r\n                        else if (error && Is.string(error.message)) {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, \"Request \" + requestMessage.method + \" failed with message: \" + error.message), requestMessage.method, startTime);\r\n                        }\r\n                        else {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, \"Request \" + requestMessage.method + \" failed unexpectedly without providing any details.\"), requestMessage.method, startTime);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    delete requestTokens[tokenKey_1];\r\n                    reply(handlerResult, requestMessage.method, startTime);\r\n                }\r\n            }\r\n            catch (error) {\r\n                delete requestTokens[tokenKey_1];\r\n                if (error instanceof messages_1.ResponseError) {\r\n                    reply(error, requestMessage.method, startTime);\r\n                }\r\n                else if (error && Is.string(error.message)) {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, \"Request \" + requestMessage.method + \" failed with message: \" + error.message), requestMessage.method, startTime);\r\n                }\r\n                else {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, \"Request \" + requestMessage.method + \" failed unexpectedly without providing any details.\"), requestMessage.method, startTime);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, \"Unhandled method \" + requestMessage.method), requestMessage.method, startTime);\r\n        }\r\n    }\r\n    function handleResponse(responseMessage) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        if (responseMessage.id === null) {\r\n            if (responseMessage.error) {\r\n                logger.error(\"Received response message without id: Error is: \\n\" + JSON.stringify(responseMessage.error, undefined, 4));\r\n            }\r\n            else {\r\n                logger.error(\"Received response message without id. No further error information provided.\");\r\n            }\r\n        }\r\n        else {\r\n            var key = String(responseMessage.id);\r\n            var responsePromise = responsePromises[key];\r\n            traceReceivedResponse(responseMessage, responsePromise);\r\n            if (responsePromise) {\r\n                delete responsePromises[key];\r\n                try {\r\n                    if (responseMessage.error) {\r\n                        var error = responseMessage.error;\r\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\r\n                    }\r\n                    else if (responseMessage.result !== void 0) {\r\n                        responsePromise.resolve(responseMessage.result);\r\n                    }\r\n                    else {\r\n                        throw new Error('Should never happen.');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    if (error.message) {\r\n                        logger.error(\"Response handler '\" + responsePromise.method + \"' failed with message: \" + error.message);\r\n                    }\r\n                    else {\r\n                        logger.error(\"Response handler '\" + responsePromise.method + \"' failed unexpectedly.\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleNotification(message) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        var type = undefined;\r\n        var notificationHandler;\r\n        if (message.method === CancelNotification.type.method) {\r\n            notificationHandler = function (params) {\r\n                var id = params.id;\r\n                var source = requestTokens[String(id)];\r\n                if (source) {\r\n                    source.cancel();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            var element = notificationHandlers[message.method];\r\n            if (element) {\r\n                notificationHandler = element.handler;\r\n                type = element.type;\r\n            }\r\n        }\r\n        if (notificationHandler || starNotificationHandler) {\r\n            try {\r\n                traceReceivedNotification(message);\r\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\r\n                }\r\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    notificationHandler ? notificationHandler.apply(void 0, message.params) : starNotificationHandler.apply(void 0, [message.method].concat(message.params));\r\n                }\r\n                else {\r\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (error.message) {\r\n                    logger.error(\"Notification handler '\" + message.method + \"' failed with message: \" + error.message);\r\n                }\r\n                else {\r\n                    logger.error(\"Notification handler '\" + message.method + \"' failed unexpectedly.\");\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            unhandledNotificationEmitter.fire(message);\r\n        }\r\n    }\r\n    function handleInvalidMessage(message) {\r\n        if (!message) {\r\n            logger.error('Received empty message.');\r\n            return;\r\n        }\r\n        logger.error(\"Received message which is neither a response nor a notification message:\\n\" + JSON.stringify(message, null, 4));\r\n        // Test whether we find an id to reject the promise\r\n        var responseMessage = message;\r\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\r\n            var key = String(responseMessage.id);\r\n            var responseHandler = responsePromises[key];\r\n            if (responseHandler) {\r\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\r\n            }\r\n        }\r\n    }\r\n    function traceSendingRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose && message.params) {\r\n            data = \"Params: \" + JSON.stringify(message.params, null, 4) + \"\\n\\n\";\r\n        }\r\n        tracer.log(\"Sending request '\" + message.method + \" - (\" + message.id + \")'.\", data);\r\n    }\r\n    function traceSendNotification(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose) {\r\n            if (message.params) {\r\n                data = \"Params: \" + JSON.stringify(message.params, null, 4) + \"\\n\\n\";\r\n            }\r\n            else {\r\n                data = 'No parameters provided.\\n\\n';\r\n            }\r\n        }\r\n        tracer.log(\"Sending notification '\" + message.method + \"'.\", data);\r\n    }\r\n    function traceSendingResponse(message, method, startTime) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose) {\r\n            if (message.error && message.error.data) {\r\n                data = \"Error data: \" + JSON.stringify(message.error.data, null, 4) + \"\\n\\n\";\r\n            }\r\n            else {\r\n                if (message.result) {\r\n                    data = \"Result: \" + JSON.stringify(message.result, null, 4) + \"\\n\\n\";\r\n                }\r\n                else if (message.error === void 0) {\r\n                    data = 'No result returned.\\n\\n';\r\n                }\r\n            }\r\n        }\r\n        tracer.log(\"Sending response '\" + method + \" - (\" + message.id + \")'. Processing request took \" + (Date.now() - startTime) + \"ms\", data);\r\n    }\r\n    function traceReceivedRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose && message.params) {\r\n            data = \"Params: \" + JSON.stringify(message.params, null, 4) + \"\\n\\n\";\r\n        }\r\n        tracer.log(\"Received request '\" + message.method + \" - (\" + message.id + \")'.\", data);\r\n    }\r\n    function traceReceivedNotification(message) {\r\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose) {\r\n            if (message.params) {\r\n                data = \"Params: \" + JSON.stringify(message.params, null, 4) + \"\\n\\n\";\r\n            }\r\n            else {\r\n                data = 'No parameters provided.\\n\\n';\r\n            }\r\n        }\r\n        tracer.log(\"Received notification '\" + message.method + \"'.\", data);\r\n    }\r\n    function traceReceivedResponse(message, responsePromise) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose) {\r\n            if (message.error && message.error.data) {\r\n                data = \"Error data: \" + JSON.stringify(message.error.data, null, 4) + \"\\n\\n\";\r\n            }\r\n            else {\r\n                if (message.result) {\r\n                    data = \"Result: \" + JSON.stringify(message.result, null, 4) + \"\\n\\n\";\r\n                }\r\n                else if (message.error === void 0) {\r\n                    data = 'No result returned.\\n\\n';\r\n                }\r\n            }\r\n        }\r\n        if (responsePromise) {\r\n            var error = message.error ? \" Request failed: \" + message.error.message + \" (\" + message.error.code + \").\" : '';\r\n            tracer.log(\"Received response '\" + responsePromise.method + \" - (\" + message.id + \")' in \" + (Date.now() - responsePromise.timerStart) + \"ms.\" + error, data);\r\n        }\r\n        else {\r\n            tracer.log(\"Received response \" + message.id + \" without active response promise.\", data);\r\n        }\r\n    }\r\n    function throwIfClosedOrDisposed() {\r\n        if (isClosed()) {\r\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\r\n        }\r\n        if (isDisposed()) {\r\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\r\n        }\r\n    }\r\n    function throwIfListening() {\r\n        if (isListening()) {\r\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\r\n        }\r\n    }\r\n    function throwIfNotListening() {\r\n        if (!isListening()) {\r\n            throw new Error('Call listen() first.');\r\n        }\r\n    }\r\n    function undefinedToNull(param) {\r\n        if (param === void 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    function computeMessageParams(type, params) {\r\n        var result;\r\n        var numberOfParams = type.numberOfParams;\r\n        switch (numberOfParams) {\r\n            case 0:\r\n                result = null;\r\n                break;\r\n            case 1:\r\n                result = undefinedToNull(params[0]);\r\n                break;\r\n            default:\r\n                result = [];\r\n                for (var i = 0; i < params.length && i < numberOfParams; i++) {\r\n                    result.push(undefinedToNull(params[i]));\r\n                }\r\n                if (params.length < numberOfParams) {\r\n                    for (var i = params.length; i < numberOfParams; i++) {\r\n                        result.push(null);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    var connection = {\r\n        sendNotification: function (type) {\r\n            var params = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                params[_i - 1] = arguments[_i];\r\n            }\r\n            throwIfClosedOrDisposed();\r\n            var method;\r\n            var messageParams;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        messageParams = params[0];\r\n                        break;\r\n                    default:\r\n                        messageParams = params;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n            }\r\n            var notificationMessage = {\r\n                jsonrpc: version,\r\n                method: method,\r\n                params: messageParams\r\n            };\r\n            traceSendNotification(notificationMessage);\r\n            messageWriter.write(notificationMessage);\r\n        },\r\n        onNotification: function (type, handler) {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starNotificationHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    notificationHandlers[type] = { type: undefined, handler: handler };\r\n                }\r\n                else {\r\n                    notificationHandlers[type.method] = { type: type, handler: handler };\r\n                }\r\n            }\r\n        },\r\n        sendRequest: function (type) {\r\n            var params = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                params[_i - 1] = arguments[_i];\r\n            }\r\n            throwIfClosedOrDisposed();\r\n            throwIfNotListening();\r\n            var method;\r\n            var messageParams;\r\n            var token = undefined;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        // The cancellation token is optional so it can also be undefined.\r\n                        if (cancellation_1.CancellationToken.is(params[0])) {\r\n                            messageParams = null;\r\n                            token = params[0];\r\n                        }\r\n                        else {\r\n                            messageParams = undefinedToNull(params[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        var last = params.length - 1;\r\n                        if (cancellation_1.CancellationToken.is(params[last])) {\r\n                            token = params[last];\r\n                            if (params.length === 2) {\r\n                                messageParams = undefinedToNull(params[0]);\r\n                            }\r\n                            else {\r\n                                messageParams = params.slice(0, last).map(function (value) { return undefinedToNull(value); });\r\n                            }\r\n                        }\r\n                        else {\r\n                            messageParams = params.map(function (value) { return undefinedToNull(value); });\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n                var numberOfParams = type.numberOfParams;\r\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\r\n            }\r\n            var id = sequenceNumber++;\r\n            var result = new Promise(function (resolve, reject) {\r\n                var requestMessage = {\r\n                    jsonrpc: version,\r\n                    id: id,\r\n                    method: method,\r\n                    params: messageParams\r\n                };\r\n                var responsePromise = { method: method, timerStart: Date.now(), resolve: resolve, reject: reject };\r\n                traceSendingRequest(requestMessage);\r\n                try {\r\n                    messageWriter.write(requestMessage);\r\n                }\r\n                catch (e) {\r\n                    // Writing the message failed. So we need to reject the promise.\r\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\r\n                    responsePromise = null;\r\n                }\r\n                if (responsePromise) {\r\n                    responsePromises[String(id)] = responsePromise;\r\n                }\r\n            });\r\n            if (token) {\r\n                token.onCancellationRequested(function () {\r\n                    connection.sendNotification(CancelNotification.type, { id: id });\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        onRequest: function (type, handler) {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starRequestHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    requestHandlers[type] = { type: undefined, handler: handler };\r\n                }\r\n                else {\r\n                    requestHandlers[type.method] = { type: type, handler: handler };\r\n                }\r\n            }\r\n        },\r\n        trace: function (_value, _tracer, sendNotification) {\r\n            if (sendNotification === void 0) { sendNotification = false; }\r\n            trace = _value;\r\n            if (trace === Trace.Off) {\r\n                tracer = undefined;\r\n            }\r\n            else {\r\n                tracer = _tracer;\r\n            }\r\n            if (sendNotification && !isClosed() && !isDisposed()) {\r\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\r\n            }\r\n        },\r\n        onError: errorEmitter.event,\r\n        onClose: closeEmitter.event,\r\n        onUnhandledNotification: unhandledNotificationEmitter.event,\r\n        onDispose: disposeEmitter.event,\r\n        dispose: function () {\r\n            if (isDisposed()) {\r\n                return;\r\n            }\r\n            state = ConnectionState.Disposed;\r\n            disposeEmitter.fire(undefined);\r\n            var error = new Error('Connection got disposed.');\r\n            Object.keys(responsePromises).forEach(function (key) {\r\n                responsePromises[key].reject(error);\r\n            });\r\n            responsePromises = Object.create(null);\r\n            requestTokens = Object.create(null);\r\n            messageQueue = new linkedMap_1.LinkedMap();\r\n            // Test for backwards compatibility\r\n            if (Is.func(messageWriter.dispose)) {\r\n                messageWriter.dispose();\r\n            }\r\n            if (Is.func(messageReader.dispose)) {\r\n                messageReader.dispose();\r\n            }\r\n        },\r\n        listen: function () {\r\n            throwIfClosedOrDisposed();\r\n            throwIfListening();\r\n            state = ConnectionState.Listening;\r\n            messageReader.listen(callback);\r\n        },\r\n        inspect: function () {\r\n            console.log(\"inspect\");\r\n        }\r\n    };\r\n    connection.onNotification(LogTraceNotification.type, function (params) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\r\n    });\r\n    return connection;\r\n}\r\nfunction isMessageReader(value) {\r\n    return value.listen !== void 0 && value.read === void 0;\r\n}\r\nfunction isMessageWriter(value) {\r\n    return value.write !== void 0 && value.end === void 0;\r\n}\r\nfunction createMessageConnection(input, output, logger, strategy) {\r\n    if (!logger) {\r\n        logger = exports.NullLogger;\r\n    }\r\n    var reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\r\n    var writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\r\n    return _createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createMessageConnection = createMessageConnection;\r\n", "(function (factory) {\r\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        var v = factory(require, exports);\r\n        if (v !== undefined) module.exports = v;\r\n    }\r\n    else if (typeof define === \"function\" && define.amd) {\r\n        define([\"require\", \"exports\"], factory);\r\n    }\r\n})(function (require, exports) {\r\n    /* --------------------------------------------------------------------------------------------\r\n     * Copyright (c) Microsoft Corporation. All rights reserved.\r\n     * Licensed under the MIT License. See License.txt in the project root for license information.\r\n     * ------------------------------------------------------------------------------------------ */\r\n    'use strict';\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * The Position namespace provides helper functions to work with\r\n     * [Position](#Position) literals.\r\n     */\r\n    var Position;\r\n    (function (Position) {\r\n        /**\r\n         * Creates a new Position literal from the given line and character.\r\n         * @param line The position's line.\r\n         * @param character The position's character.\r\n         */\r\n        function create(line, character) {\r\n            return { line: line, character: character };\r\n        }\r\n        Position.create = create;\r\n        /**\r\n         * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n        }\r\n        Position.is = is;\r\n    })(Position = exports.Position || (exports.Position = {}));\r\n    /**\r\n     * The Range namespace provides helper functions to work with\r\n     * [Range](#Range) literals.\r\n     */\r\n    var Range;\r\n    (function (Range) {\r\n        function create(one, two, three, four) {\r\n            if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n                return { start: Position.create(one, two), end: Position.create(three, four) };\r\n            }\r\n            else if (Position.is(one) && Position.is(two)) {\r\n                return { start: one, end: two };\r\n            }\r\n            else {\r\n                throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n            }\r\n        }\r\n        Range.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n        }\r\n        Range.is = is;\r\n    })(Range = exports.Range || (exports.Range = {}));\r\n    /**\r\n     * The Location namespace provides helper functions to work with\r\n     * [Location](#Location) literals.\r\n     */\r\n    var Location;\r\n    (function (Location) {\r\n        /**\r\n         * Creates a Location literal.\r\n         * @param uri The location's uri.\r\n         * @param range The location's range.\r\n         */\r\n        function create(uri, range) {\r\n            return { uri: uri, range: range };\r\n        }\r\n        Location.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n        }\r\n        Location.is = is;\r\n    })(Location = exports.Location || (exports.Location = {}));\r\n    /**\r\n     * The diagnostic's serverity.\r\n     */\r\n    var DiagnosticSeverity;\r\n    (function (DiagnosticSeverity) {\r\n        /**\r\n         * Reports an error.\r\n         */\r\n        DiagnosticSeverity.Error = 1;\r\n        /**\r\n         * Reports a warning.\r\n         */\r\n        DiagnosticSeverity.Warning = 2;\r\n        /**\r\n         * Reports an information.\r\n         */\r\n        DiagnosticSeverity.Information = 3;\r\n        /**\r\n         * Reports a hint.\r\n         */\r\n        DiagnosticSeverity.Hint = 4;\r\n    })(DiagnosticSeverity = exports.DiagnosticSeverity || (exports.DiagnosticSeverity = {}));\r\n    /**\r\n     * The Diagnostic namespace provides helper functions to work with\r\n     * [Diagnostic](#Diagnostic) literals.\r\n     */\r\n    var Diagnostic;\r\n    (function (Diagnostic) {\r\n        /**\r\n         * Creates a new Diagnostic literal.\r\n         */\r\n        function create(range, message, severity, code, source) {\r\n            var result = { range: range, message: message };\r\n            if (Is.defined(severity)) {\r\n                result.severity = severity;\r\n            }\r\n            if (Is.defined(code)) {\r\n                result.code = code;\r\n            }\r\n            if (Is.defined(source)) {\r\n                result.source = source;\r\n            }\r\n            return result;\r\n        }\r\n        Diagnostic.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate)\r\n                && Range.is(candidate.range)\r\n                && Is.string(candidate.message)\r\n                && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n                && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n                && (Is.string(candidate.source) || Is.undefined(candidate.source));\r\n        }\r\n        Diagnostic.is = is;\r\n    })(Diagnostic = exports.Diagnostic || (exports.Diagnostic = {}));\r\n    /**\r\n     * The Command namespace provides helper functions to work with\r\n     * [Command](#Command) literals.\r\n     */\r\n    var Command;\r\n    (function (Command) {\r\n        /**\r\n         * Creates a new Command literal.\r\n         */\r\n        function create(title, command) {\r\n            var args = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                args[_i - 2] = arguments[_i];\r\n            }\r\n            var result = { title: title, command: command };\r\n            if (Is.defined(args) && args.length > 0) {\r\n                result.arguments = args;\r\n            }\r\n            return result;\r\n        }\r\n        Command.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\r\n        }\r\n        Command.is = is;\r\n    })(Command = exports.Command || (exports.Command = {}));\r\n    /**\r\n     * The TextEdit namespace provides helper function to create replace,\r\n     * insert and delete edits more easily.\r\n     */\r\n    var TextEdit;\r\n    (function (TextEdit) {\r\n        /**\r\n         * Creates a replace text edit.\r\n         * @param range The range of text to be replaced.\r\n         * @param newText The new text.\r\n         */\r\n        function replace(range, newText) {\r\n            return { range: range, newText: newText };\r\n        }\r\n        TextEdit.replace = replace;\r\n        /**\r\n         * Creates a insert text edit.\r\n         * @param psotion The position to insert the text at.\r\n         * @param newText The text to be inserted.\r\n         */\r\n        function insert(position, newText) {\r\n            return { range: { start: position, end: position }, newText: newText };\r\n        }\r\n        TextEdit.insert = insert;\r\n        /**\r\n         * Creates a delete text edit.\r\n         * @param range The range of text to be deleted.\r\n         */\r\n        function del(range) {\r\n            return { range: range, newText: '' };\r\n        }\r\n        TextEdit.del = del;\r\n    })(TextEdit = exports.TextEdit || (exports.TextEdit = {}));\r\n    /**\r\n     * The TextDocumentEdit namespace provides helper function to create\r\n     * an edit that manipulates a text document.\r\n     */\r\n    var TextDocumentEdit;\r\n    (function (TextDocumentEdit) {\r\n        /**\r\n         * Creates a new `TextDocumentEdit`\r\n         */\r\n        function create(textDocument, edits) {\r\n            return { textDocument: textDocument, edits: edits };\r\n        }\r\n        TextDocumentEdit.create = create;\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate)\r\n                && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n                && Array.isArray(candidate.edits);\r\n        }\r\n        TextDocumentEdit.is = is;\r\n    })(TextDocumentEdit = exports.TextDocumentEdit || (exports.TextDocumentEdit = {}));\r\n    var TextEditChangeImpl = /** @class */ (function () {\r\n        function TextEditChangeImpl(edits) {\r\n            this.edits = edits;\r\n        }\r\n        TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n            this.edits.push(TextEdit.insert(position, newText));\r\n        };\r\n        TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n            this.edits.push(TextEdit.replace(range, newText));\r\n        };\r\n        TextEditChangeImpl.prototype.delete = function (range) {\r\n            this.edits.push(TextEdit.del(range));\r\n        };\r\n        TextEditChangeImpl.prototype.add = function (edit) {\r\n            this.edits.push(edit);\r\n        };\r\n        TextEditChangeImpl.prototype.all = function () {\r\n            return this.edits;\r\n        };\r\n        TextEditChangeImpl.prototype.clear = function () {\r\n            this.edits.splice(0, this.edits.length);\r\n        };\r\n        return TextEditChangeImpl;\r\n    }());\r\n    /**\r\n     * A workspace change helps constructing changes to a workspace.\r\n     */\r\n    var WorkspaceChange = /** @class */ (function () {\r\n        function WorkspaceChange(workspaceEdit) {\r\n            var _this = this;\r\n            this._textEditChanges = Object.create(null);\r\n            if (workspaceEdit) {\r\n                this._workspaceEdit = workspaceEdit;\r\n                if (workspaceEdit.documentChanges) {\r\n                    workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\r\n                        var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\r\n                        _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\r\n                    });\r\n                }\r\n                else if (workspaceEdit.changes) {\r\n                    Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                        var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                        _this._textEditChanges[key] = textEditChange;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n            /**\r\n             * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n             * use to be returned from a workspace edit operation like rename.\r\n             */\r\n            get: function () {\r\n                return this._workspaceEdit;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n            if (VersionedTextDocumentIdentifier.is(key)) {\r\n                if (!this._workspaceEdit) {\r\n                    this._workspaceEdit = {\r\n                        documentChanges: []\r\n                    };\r\n                }\r\n                if (!this._workspaceEdit.documentChanges) {\r\n                    throw new Error('Workspace edit is not configured for versioned document changes.');\r\n                }\r\n                var textDocument = key;\r\n                var result = this._textEditChanges[textDocument.uri];\r\n                if (!result) {\r\n                    var edits = [];\r\n                    var textDocumentEdit = {\r\n                        textDocument: textDocument,\r\n                        edits: edits\r\n                    };\r\n                    this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                    result = new TextEditChangeImpl(edits);\r\n                    this._textEditChanges[textDocument.uri] = result;\r\n                }\r\n                return result;\r\n            }\r\n            else {\r\n                if (!this._workspaceEdit) {\r\n                    this._workspaceEdit = {\r\n                        changes: Object.create(null)\r\n                    };\r\n                }\r\n                if (!this._workspaceEdit.changes) {\r\n                    throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n                }\r\n                var result = this._textEditChanges[key];\r\n                if (!result) {\r\n                    var edits = [];\r\n                    this._workspaceEdit.changes[key] = edits;\r\n                    result = new TextEditChangeImpl(edits);\r\n                    this._textEditChanges[key] = result;\r\n                }\r\n                return result;\r\n            }\r\n        };\r\n        return WorkspaceChange;\r\n    }());\r\n    exports.WorkspaceChange = WorkspaceChange;\r\n    /**\r\n     * The TextDocumentIdentifier namespace provides helper functions to work with\r\n     * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n     */\r\n    var TextDocumentIdentifier;\r\n    (function (TextDocumentIdentifier) {\r\n        /**\r\n         * Creates a new TextDocumentIdentifier literal.\r\n         * @param uri The document's uri.\r\n         */\r\n        function create(uri) {\r\n            return { uri: uri };\r\n        }\r\n        TextDocumentIdentifier.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Is.string(candidate.uri);\r\n        }\r\n        TextDocumentIdentifier.is = is;\r\n    })(TextDocumentIdentifier = exports.TextDocumentIdentifier || (exports.TextDocumentIdentifier = {}));\r\n    /**\r\n     * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n     * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n     */\r\n    var VersionedTextDocumentIdentifier;\r\n    (function (VersionedTextDocumentIdentifier) {\r\n        /**\r\n         * Creates a new VersionedTextDocumentIdentifier literal.\r\n         * @param uri The document's uri.\r\n         * @param uri The document's text.\r\n         */\r\n        function create(uri, version) {\r\n            return { uri: uri, version: version };\r\n        }\r\n        VersionedTextDocumentIdentifier.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\r\n        }\r\n        VersionedTextDocumentIdentifier.is = is;\r\n    })(VersionedTextDocumentIdentifier = exports.VersionedTextDocumentIdentifier || (exports.VersionedTextDocumentIdentifier = {}));\r\n    /**\r\n     * The TextDocumentItem namespace provides helper functions to work with\r\n     * [TextDocumentItem](#TextDocumentItem) literals.\r\n     */\r\n    var TextDocumentItem;\r\n    (function (TextDocumentItem) {\r\n        /**\r\n         * Creates a new TextDocumentItem literal.\r\n         * @param uri The document's uri.\r\n         * @param uri The document's language identifier.\r\n         * @param uri The document's version number.\r\n         * @param uri The document's text.\r\n         */\r\n        function create(uri, languageId, version, text) {\r\n            return { uri: uri, languageId: languageId, version: version, text: text };\r\n        }\r\n        TextDocumentItem.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n        }\r\n        TextDocumentItem.is = is;\r\n    })(TextDocumentItem = exports.TextDocumentItem || (exports.TextDocumentItem = {}));\r\n    /**\r\n     * The kind of a completion entry.\r\n     */\r\n    var CompletionItemKind;\r\n    (function (CompletionItemKind) {\r\n        CompletionItemKind.Text = 1;\r\n        CompletionItemKind.Method = 2;\r\n        CompletionItemKind.Function = 3;\r\n        CompletionItemKind.Constructor = 4;\r\n        CompletionItemKind.Field = 5;\r\n        CompletionItemKind.Variable = 6;\r\n        CompletionItemKind.Class = 7;\r\n        CompletionItemKind.Interface = 8;\r\n        CompletionItemKind.Module = 9;\r\n        CompletionItemKind.Property = 10;\r\n        CompletionItemKind.Unit = 11;\r\n        CompletionItemKind.Value = 12;\r\n        CompletionItemKind.Enum = 13;\r\n        CompletionItemKind.Keyword = 14;\r\n        CompletionItemKind.Snippet = 15;\r\n        CompletionItemKind.Color = 16;\r\n        CompletionItemKind.File = 17;\r\n        CompletionItemKind.Reference = 18;\r\n    })(CompletionItemKind = exports.CompletionItemKind || (exports.CompletionItemKind = {}));\r\n    /**\r\n     * Defines whether the insert text in a completion item should be interpreted as\r\n     * plain text or a snippet.\r\n     */\r\n    var InsertTextFormat;\r\n    (function (InsertTextFormat) {\r\n        /**\r\n         * The primary text to be inserted is treated as a plain string.\r\n         */\r\n        InsertTextFormat.PlainText = 1;\r\n        /**\r\n         * The primary text to be inserted is treated as a snippet.\r\n         *\r\n         * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n         * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n         * the end of the snippet. Placeholders with equal identifiers are linked,\r\n         * that is typing in one will update others too.\r\n         *\r\n         * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n         */\r\n        InsertTextFormat.Snippet = 2;\r\n    })(InsertTextFormat = exports.InsertTextFormat || (exports.InsertTextFormat = {}));\r\n    /**\r\n     * The CompletionItem namespace provides functions to deal with\r\n     * completion items.\r\n     */\r\n    var CompletionItem;\r\n    (function (CompletionItem) {\r\n        /**\r\n         * Create a completion item and seed it with a label.\r\n         * @param label The completion item's label\r\n         */\r\n        function create(label) {\r\n            return { label: label };\r\n        }\r\n        CompletionItem.create = create;\r\n    })(CompletionItem = exports.CompletionItem || (exports.CompletionItem = {}));\r\n    /**\r\n     * The CompletionList namespace provides functions to deal with\r\n     * completion lists.\r\n     */\r\n    var CompletionList;\r\n    (function (CompletionList) {\r\n        /**\r\n         * Creates a new completion list.\r\n         *\r\n         * @param items The completion items.\r\n         * @param isIncomplete The list is not complete.\r\n         */\r\n        function create(items, isIncomplete) {\r\n            return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n        }\r\n        CompletionList.create = create;\r\n    })(CompletionList = exports.CompletionList || (exports.CompletionList = {}));\r\n    var MarkedString;\r\n    (function (MarkedString) {\r\n        /**\r\n         * Creates a marked string from plain text.\r\n         *\r\n         * @param plainText The plain text.\r\n         */\r\n        function fromPlainText(plainText) {\r\n            return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n        }\r\n        MarkedString.fromPlainText = fromPlainText;\r\n    })(MarkedString = exports.MarkedString || (exports.MarkedString = {}));\r\n    /**\r\n     * The ParameterInformation namespace provides helper functions to work with\r\n     * [ParameterInformation](#ParameterInformation) literals.\r\n     */\r\n    var ParameterInformation;\r\n    (function (ParameterInformation) {\r\n        /**\r\n         * Creates a new parameter information literal.\r\n         *\r\n         * @param label A label string.\r\n         * @param documentation A doc string.\r\n         */\r\n        function create(label, documentation) {\r\n            return documentation ? { label: label, documentation: documentation } : { label: label };\r\n        }\r\n        ParameterInformation.create = create;\r\n        ;\r\n    })(ParameterInformation = exports.ParameterInformation || (exports.ParameterInformation = {}));\r\n    /**\r\n     * The SignatureInformation namespace provides helper functions to work with\r\n     * [SignatureInformation](#SignatureInformation) literals.\r\n     */\r\n    var SignatureInformation;\r\n    (function (SignatureInformation) {\r\n        function create(label, documentation) {\r\n            var parameters = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                parameters[_i - 2] = arguments[_i];\r\n            }\r\n            var result = { label: label };\r\n            if (Is.defined(documentation)) {\r\n                result.documentation = documentation;\r\n            }\r\n            if (Is.defined(parameters)) {\r\n                result.parameters = parameters;\r\n            }\r\n            else {\r\n                result.parameters = [];\r\n            }\r\n            return result;\r\n        }\r\n        SignatureInformation.create = create;\r\n    })(SignatureInformation = exports.SignatureInformation || (exports.SignatureInformation = {}));\r\n    /**\r\n     * A document highlight kind.\r\n     */\r\n    var DocumentHighlightKind;\r\n    (function (DocumentHighlightKind) {\r\n        /**\r\n         * A textual occurrance.\r\n         */\r\n        DocumentHighlightKind.Text = 1;\r\n        /**\r\n         * Read-access of a symbol, like reading a variable.\r\n         */\r\n        DocumentHighlightKind.Read = 2;\r\n        /**\r\n         * Write-access of a symbol, like writing to a variable.\r\n         */\r\n        DocumentHighlightKind.Write = 3;\r\n    })(DocumentHighlightKind = exports.DocumentHighlightKind || (exports.DocumentHighlightKind = {}));\r\n    /**\r\n     * DocumentHighlight namespace to provide helper functions to work with\r\n     * [DocumentHighlight](#DocumentHighlight) literals.\r\n     */\r\n    var DocumentHighlight;\r\n    (function (DocumentHighlight) {\r\n        /**\r\n         * Create a DocumentHighlight object.\r\n         * @param range The range the highlight applies to.\r\n         */\r\n        function create(range, kind) {\r\n            var result = { range: range };\r\n            if (Is.number(kind)) {\r\n                result.kind = kind;\r\n            }\r\n            return result;\r\n        }\r\n        DocumentHighlight.create = create;\r\n    })(DocumentHighlight = exports.DocumentHighlight || (exports.DocumentHighlight = {}));\r\n    /**\r\n     * A symbol kind.\r\n     */\r\n    var SymbolKind;\r\n    (function (SymbolKind) {\r\n        SymbolKind.File = 1;\r\n        SymbolKind.Module = 2;\r\n        SymbolKind.Namespace = 3;\r\n        SymbolKind.Package = 4;\r\n        SymbolKind.Class = 5;\r\n        SymbolKind.Method = 6;\r\n        SymbolKind.Property = 7;\r\n        SymbolKind.Field = 8;\r\n        SymbolKind.Constructor = 9;\r\n        SymbolKind.Enum = 10;\r\n        SymbolKind.Interface = 11;\r\n        SymbolKind.Function = 12;\r\n        SymbolKind.Variable = 13;\r\n        SymbolKind.Constant = 14;\r\n        SymbolKind.String = 15;\r\n        SymbolKind.Number = 16;\r\n        SymbolKind.Boolean = 17;\r\n        SymbolKind.Array = 18;\r\n    })(SymbolKind = exports.SymbolKind || (exports.SymbolKind = {}));\r\n    var SymbolInformation;\r\n    (function (SymbolInformation) {\r\n        /**\r\n         * Creates a new symbol information literal.\r\n         *\r\n         * @param name The name of the symbol.\r\n         * @param kind The kind of the symbol.\r\n         * @param range The range of the location of the symbol.\r\n         * @param uri The resource of the location of symbol, defaults to the current document.\r\n         * @param containerName The name of the symbol containg the symbol.\r\n         */\r\n        function create(name, kind, range, uri, containerName) {\r\n            var result = {\r\n                name: name,\r\n                kind: kind,\r\n                location: { uri: uri, range: range }\r\n            };\r\n            if (containerName) {\r\n                result.containerName = containerName;\r\n            }\r\n            return result;\r\n        }\r\n        SymbolInformation.create = create;\r\n    })(SymbolInformation = exports.SymbolInformation || (exports.SymbolInformation = {}));\r\n    /**\r\n     * The CodeActionContext namespace provides helper functions to work with\r\n     * [CodeActionContext](#CodeActionContext) literals.\r\n     */\r\n    var CodeActionContext;\r\n    (function (CodeActionContext) {\r\n        /**\r\n         * Creates a new CodeActionContext literal.\r\n         */\r\n        function create(diagnostics) {\r\n            return { diagnostics: diagnostics };\r\n        }\r\n        CodeActionContext.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\r\n        }\r\n        CodeActionContext.is = is;\r\n    })(CodeActionContext = exports.CodeActionContext || (exports.CodeActionContext = {}));\r\n    /**\r\n     * The CodeLens namespace provides helper functions to work with\r\n     * [CodeLens](#CodeLens) literals.\r\n     */\r\n    var CodeLens;\r\n    (function (CodeLens) {\r\n        /**\r\n         * Creates a new CodeLens literal.\r\n         */\r\n        function create(range, data) {\r\n            var result = { range: range };\r\n            if (Is.defined(data))\r\n                result.data = data;\r\n            return result;\r\n        }\r\n        CodeLens.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n        }\r\n        CodeLens.is = is;\r\n    })(CodeLens = exports.CodeLens || (exports.CodeLens = {}));\r\n    /**\r\n     * The FormattingOptions namespace provides helper functions to work with\r\n     * [FormattingOptions](#FormattingOptions) literals.\r\n     */\r\n    var FormattingOptions;\r\n    (function (FormattingOptions) {\r\n        /**\r\n         * Creates a new FormattingOptions literal.\r\n         */\r\n        function create(tabSize, insertSpaces) {\r\n            return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n        }\r\n        FormattingOptions.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n        }\r\n        FormattingOptions.is = is;\r\n    })(FormattingOptions = exports.FormattingOptions || (exports.FormattingOptions = {}));\r\n    /**\r\n     * A document link is a range in a text document that links to an internal or external resource, like another\r\n     * text document or a web site.\r\n     */\r\n    var DocumentLink = /** @class */ (function () {\r\n        function DocumentLink() {\r\n        }\r\n        return DocumentLink;\r\n    }());\r\n    exports.DocumentLink = DocumentLink;\r\n    /**\r\n     * The DocumentLink namespace provides helper functions to work with\r\n     * [DocumentLink](#DocumentLink) literals.\r\n     */\r\n    (function (DocumentLink) {\r\n        /**\r\n         * Creates a new DocumentLink literal.\r\n         */\r\n        function create(range, target) {\r\n            return { range: range, target: target };\r\n        }\r\n        DocumentLink.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n        }\r\n        DocumentLink.is = is;\r\n    })(DocumentLink = exports.DocumentLink || (exports.DocumentLink = {}));\r\n    exports.DocumentLink = DocumentLink;\r\n    exports.EOL = ['\\n', '\\r\\n', '\\r'];\r\n    var TextDocument;\r\n    (function (TextDocument) {\r\n        /**\r\n         * Creates a new ITextDocument literal from the given uri and content.\r\n         * @param uri The document's uri.\r\n         * @param languageId  The document's language Id.\r\n         * @param content The document's content.\r\n         */\r\n        function create(uri, languageId, version, content) {\r\n            return new FullTextDocument(uri, languageId, version, content);\r\n        }\r\n        TextDocument.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n                && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n        }\r\n        TextDocument.is = is;\r\n    })(TextDocument = exports.TextDocument || (exports.TextDocument = {}));\r\n    /**\r\n     * Represents reasons why a text document is saved.\r\n     */\r\n    var TextDocumentSaveReason;\r\n    (function (TextDocumentSaveReason) {\r\n        /**\r\n         * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n         * or by an API call.\r\n         */\r\n        TextDocumentSaveReason.Manual = 1;\r\n        /**\r\n         * Automatic after a delay.\r\n         */\r\n        TextDocumentSaveReason.AfterDelay = 2;\r\n        /**\r\n         * When the editor lost focus.\r\n         */\r\n        TextDocumentSaveReason.FocusOut = 3;\r\n    })(TextDocumentSaveReason = exports.TextDocumentSaveReason || (exports.TextDocumentSaveReason = {}));\r\n    var FullTextDocument = /** @class */ (function () {\r\n        function FullTextDocument(uri, languageId, version, content) {\r\n            this._uri = uri;\r\n            this._languageId = languageId;\r\n            this._version = version;\r\n            this._content = content;\r\n            this._lineOffsets = null;\r\n        }\r\n        Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n            get: function () {\r\n                return this._uri;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n            get: function () {\r\n                return this._languageId;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n            get: function () {\r\n                return this._version;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        FullTextDocument.prototype.getText = function () {\r\n            return this._content;\r\n        };\r\n        FullTextDocument.prototype.update = function (event, version) {\r\n            this._content = event.text;\r\n            this._version = version;\r\n            this._lineOffsets = null;\r\n        };\r\n        FullTextDocument.prototype.getLineOffsets = function () {\r\n            if (this._lineOffsets === null) {\r\n                var lineOffsets = [];\r\n                var text = this._content;\r\n                var isLineStart = true;\r\n                for (var i = 0; i < text.length; i++) {\r\n                    if (isLineStart) {\r\n                        lineOffsets.push(i);\r\n                        isLineStart = false;\r\n                    }\r\n                    var ch = text.charAt(i);\r\n                    isLineStart = (ch === '\\r' || ch === '\\n');\r\n                    if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                        i++;\r\n                    }\r\n                }\r\n                if (isLineStart && text.length > 0) {\r\n                    lineOffsets.push(text.length);\r\n                }\r\n                this._lineOffsets = lineOffsets;\r\n            }\r\n            return this._lineOffsets;\r\n        };\r\n        FullTextDocument.prototype.positionAt = function (offset) {\r\n            offset = Math.max(Math.min(offset, this._content.length), 0);\r\n            var lineOffsets = this.getLineOffsets();\r\n            var low = 0, high = lineOffsets.length;\r\n            if (high === 0) {\r\n                return Position.create(0, offset);\r\n            }\r\n            while (low < high) {\r\n                var mid = Math.floor((low + high) / 2);\r\n                if (lineOffsets[mid] > offset) {\r\n                    high = mid;\r\n                }\r\n                else {\r\n                    low = mid + 1;\r\n                }\r\n            }\r\n            // low is the least x for which the line offset is larger than the current offset\r\n            // or array.length if no line offset is larger than the current offset\r\n            var line = low - 1;\r\n            return Position.create(line, offset - lineOffsets[line]);\r\n        };\r\n        FullTextDocument.prototype.offsetAt = function (position) {\r\n            var lineOffsets = this.getLineOffsets();\r\n            if (position.line >= lineOffsets.length) {\r\n                return this._content.length;\r\n            }\r\n            else if (position.line < 0) {\r\n                return 0;\r\n            }\r\n            var lineOffset = lineOffsets[position.line];\r\n            var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n            return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n        };\r\n        Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n            get: function () {\r\n                return this.getLineOffsets().length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return FullTextDocument;\r\n    }());\r\n    var Is;\r\n    (function (Is) {\r\n        var toString = Object.prototype.toString;\r\n        function defined(value) {\r\n            return typeof value !== 'undefined';\r\n        }\r\n        Is.defined = defined;\r\n        function undefined(value) {\r\n            return typeof value === 'undefined';\r\n        }\r\n        Is.undefined = undefined;\r\n        function boolean(value) {\r\n            return value === true || value === false;\r\n        }\r\n        Is.boolean = boolean;\r\n        function string(value) {\r\n            return toString.call(value) === '[object String]';\r\n        }\r\n        Is.string = string;\r\n        function number(value) {\r\n            return toString.call(value) === '[object Number]';\r\n        }\r\n        Is.number = number;\r\n        function func(value) {\r\n            return toString.call(value) === '[object Function]';\r\n        }\r\n        Is.func = func;\r\n        function typedArray(value, check) {\r\n            return Array.isArray(value) && value.every(check);\r\n        }\r\n        Is.typedArray = typedArray;\r\n    })(Is || (Is = {}));\r\n});\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst toString = Object.prototype.toString;\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return toString.call(value) === '[object String]';\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return toString.call(value) === '[object Number]';\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return toString.call(value) === '[object Error]';\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return toString.call(value) === '[object Function]';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction thenable(value) {\r\n    return value && func(value.then);\r\n}\r\nexports.thenable = thenable;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nvar DocumentFilter;\r\n(function (DocumentFilter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\r\n    }\r\n    DocumentFilter.is = is;\r\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\r\n/**\r\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\r\n * handler on the client side.\r\n */\r\nvar RegistrationRequest;\r\n(function (RegistrationRequest) {\r\n    RegistrationRequest.type = new vscode_jsonrpc_1.RequestType('client/registerCapability');\r\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\r\n/**\r\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\r\n * handler on the client side.\r\n */\r\nvar UnregistrationRequest;\r\n(function (UnregistrationRequest) {\r\n    UnregistrationRequest.type = new vscode_jsonrpc_1.RequestType('client/unregisterCapability');\r\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\r\n/**\r\n * Defines how the host (editor) should sync\r\n * document changes to the language server.\r\n */\r\nvar TextDocumentSyncKind;\r\n(function (TextDocumentSyncKind) {\r\n    /**\r\n     * Documents should not be synced at all.\r\n     */\r\n    TextDocumentSyncKind.None = 0;\r\n    /**\r\n     * Documents are synced by always sending the full content\r\n     * of the document.\r\n     */\r\n    TextDocumentSyncKind.Full = 1;\r\n    /**\r\n     * Documents are synced by sending the full content on open.\r\n     * After that only incremental updates to the document are\r\n     * send.\r\n     */\r\n    TextDocumentSyncKind.Incremental = 2;\r\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\r\n/**\r\n * The initialize request is sent from the client to the server.\r\n * It is sent once as the request after starting up the server.\r\n * The requests parameter is of type [InitializeParams](#InitializeParams)\r\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\r\n * resolves to such.\r\n */\r\nvar InitializeRequest;\r\n(function (InitializeRequest) {\r\n    InitializeRequest.type = new vscode_jsonrpc_1.RequestType('initialize');\r\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\r\n/**\r\n * Known error codes for an `InitializeError`;\r\n */\r\nvar InitializeError;\r\n(function (InitializeError) {\r\n    /**\r\n     * If the protocol version provided by the client can't be handled by the server.\r\n     * @deprecated This initialize error got replaced by client capabilities. There is\r\n     * no version handshake in version 3.0x\r\n     */\r\n    InitializeError.unknownProtocolVersion = 1;\r\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\r\n/**\r\n * The intialized notification is send from the client to the\r\n * server after the client is fully initialized and the server\r\n * is allowed to send requests from the server to the client.\r\n */\r\nvar InitializedNotification;\r\n(function (InitializedNotification) {\r\n    InitializedNotification.type = new vscode_jsonrpc_1.NotificationType('initialized');\r\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\r\n//---- Shutdown Method ----\r\n/**\r\n * A shutdown request is sent from the client to the server.\r\n * It is sent once when the client descides to shutdown the\r\n * server. The only notification that is sent after a shudown request\r\n * is the exit event.\r\n */\r\nvar ShutdownRequest;\r\n(function (ShutdownRequest) {\r\n    ShutdownRequest.type = new vscode_jsonrpc_1.RequestType0('shutdown');\r\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\r\n//---- Exit Notification ----\r\n/**\r\n * The exit event is sent from the client to the server to\r\n * ask the server to exit its process.\r\n */\r\nvar ExitNotification;\r\n(function (ExitNotification) {\r\n    ExitNotification.type = new vscode_jsonrpc_1.NotificationType0('exit');\r\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\r\n//---- Configuration notification ----\r\n/**\r\n * The configuration change notification is sent from the client to the server\r\n * when the client's configuration has changed. The notification contains\r\n * the changed configuration as defined by the language client.\r\n */\r\nvar DidChangeConfigurationNotification;\r\n(function (DidChangeConfigurationNotification) {\r\n    DidChangeConfigurationNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeConfiguration');\r\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\r\n//---- Message show and log notifications ----\r\n/**\r\n * The message type\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    /**\r\n     * An error message.\r\n     */\r\n    MessageType.Error = 1;\r\n    /**\r\n     * A warning message.\r\n     */\r\n    MessageType.Warning = 2;\r\n    /**\r\n     * An information message.\r\n     */\r\n    MessageType.Info = 3;\r\n    /**\r\n     * A log message.\r\n     */\r\n    MessageType.Log = 4;\r\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\r\n/**\r\n * The show message notification is sent from a server to a client to ask\r\n * the client to display a particular message in the user interface.\r\n */\r\nvar ShowMessageNotification;\r\n(function (ShowMessageNotification) {\r\n    ShowMessageNotification.type = new vscode_jsonrpc_1.NotificationType('window/showMessage');\r\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\r\n/**\r\n * The show message request is sent from the server to the clinet to show a message\r\n * and a set of options actions to the user.\r\n */\r\nvar ShowMessageRequest;\r\n(function (ShowMessageRequest) {\r\n    ShowMessageRequest.type = new vscode_jsonrpc_1.RequestType('window/showMessageRequest');\r\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\r\n/**\r\n * The log message notification is sent from the server to the client to ask\r\n * the client to log a particular message.\r\n */\r\nvar LogMessageNotification;\r\n(function (LogMessageNotification) {\r\n    LogMessageNotification.type = new vscode_jsonrpc_1.NotificationType('window/logMessage');\r\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\r\n//---- Telemetry notification\r\n/**\r\n * The telemetry event notification is sent from the server to the client to ask\r\n * the client to log telemetry data.\r\n */\r\nvar TelemetryEventNotification;\r\n(function (TelemetryEventNotification) {\r\n    TelemetryEventNotification.type = new vscode_jsonrpc_1.NotificationType('telemetry/event');\r\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\r\n/**\r\n * The document open notification is sent from the client to the server to signal\r\n * newly opened text documents. The document's truth is now managed by the client\r\n * and the server must not try to read the document's truth using the document's\r\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\r\n * mean that its content is presented in an editor. An open notification must not\r\n * be sent more than once without a corresponding close notification send before.\r\n * This means open and close notification must be balanced and the max open count\r\n * is one.\r\n */\r\nvar DidOpenTextDocumentNotification;\r\n(function (DidOpenTextDocumentNotification) {\r\n    DidOpenTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didOpen');\r\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\r\n/**\r\n * The document change notification is sent from the client to the server to signal\r\n * changes to a text document.\r\n */\r\nvar DidChangeTextDocumentNotification;\r\n(function (DidChangeTextDocumentNotification) {\r\n    DidChangeTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didChange');\r\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\r\n/**\r\n * The document close notification is sent from the client to the server when\r\n * the document got closed in the client. The document's truth now exists where\r\n * the document's uri points to (e.g. if the document's uri is a file uri the\r\n * truth now exists on disk). As with the open notification the close notification\r\n * is about managing the document's content. Receiving a close notification\r\n * doesn't mean that the document was open in an editor before. A close\r\n * notification requires a previous open notifaction to be sent.\r\n */\r\nvar DidCloseTextDocumentNotification;\r\n(function (DidCloseTextDocumentNotification) {\r\n    DidCloseTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didClose');\r\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\r\n/**\r\n * The document save notification is sent from the client to the server when\r\n * the document got saved in the client.\r\n */\r\nvar DidSaveTextDocumentNotification;\r\n(function (DidSaveTextDocumentNotification) {\r\n    DidSaveTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didSave');\r\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save notification is sent from the client to the server before\r\n * the document is actually saved.\r\n */\r\nvar WillSaveTextDocumentNotification;\r\n(function (WillSaveTextDocumentNotification) {\r\n    WillSaveTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/willSave');\r\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save request is sent from the client to the server before\r\n * the document is actually saved. The request can return an array of TextEdits\r\n * which will be applied to the text document before it is saved. Please note that\r\n * clients might drop results if computing the text edits took too long or if a\r\n * server constantly fails on this request. This is done to keep the save fast and\r\n * reliable.\r\n */\r\nvar WillSaveTextDocumentWaitUntilRequest;\r\n(function (WillSaveTextDocumentWaitUntilRequest) {\r\n    WillSaveTextDocumentWaitUntilRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/willSaveWaitUntil');\r\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\r\n//---- File eventing ----\r\n/**\r\n * The watched files notification is sent from the client to the server when\r\n * the client detects changes to file watched by the lanaguage client.\r\n */\r\nvar DidChangeWatchedFilesNotification;\r\n(function (DidChangeWatchedFilesNotification) {\r\n    DidChangeWatchedFilesNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeWatchedFiles');\r\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\r\n/**\r\n * The file event type\r\n */\r\nvar FileChangeType;\r\n(function (FileChangeType) {\r\n    /**\r\n     * The file got created.\r\n     */\r\n    FileChangeType.Created = 1;\r\n    /**\r\n     * The file got changed.\r\n     */\r\n    FileChangeType.Changed = 2;\r\n    /**\r\n     * The file got deleted.\r\n     */\r\n    FileChangeType.Deleted = 3;\r\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\r\nvar WatchKind;\r\n(function (WatchKind) {\r\n    /**\r\n     * Interested in create events.\r\n     */\r\n    WatchKind.Create = 1;\r\n    /**\r\n     * Interested in change events\r\n     */\r\n    WatchKind.Change = 2;\r\n    /**\r\n     * Interested in delete events\r\n     */\r\n    WatchKind.Delete = 4;\r\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\r\n//---- Diagnostic notification ----\r\n/**\r\n * Diagnostics notification are sent from the server to the client to signal\r\n * results of validation runs.\r\n */\r\nvar PublishDiagnosticsNotification;\r\n(function (PublishDiagnosticsNotification) {\r\n    PublishDiagnosticsNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/publishDiagnostics');\r\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\r\n/**\r\n * Request to request completion at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\r\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\r\n * or a Thenable that resolves to such.\r\n */\r\nvar CompletionRequest;\r\n(function (CompletionRequest) {\r\n    CompletionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/completion');\r\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given completion item.The request's\r\n * parameter is of type [CompletionItem](#CompletionItem) the response\r\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\r\n */\r\nvar CompletionResolveRequest;\r\n(function (CompletionResolveRequest) {\r\n    CompletionResolveRequest.type = new vscode_jsonrpc_1.RequestType('completionItem/resolve');\r\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\r\n//---- Hover Support -------------------------------\r\n/**\r\n * Request to request hover information at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\r\n * type [Hover](#Hover) or a Thenable that resolves to such.\r\n */\r\nvar HoverRequest;\r\n(function (HoverRequest) {\r\n    HoverRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/hover');\r\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\r\nvar SignatureHelpRequest;\r\n(function (SignatureHelpRequest) {\r\n    SignatureHelpRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/signatureHelp');\r\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\r\n//---- Goto Definition -------------------------------------\r\n/**\r\n * A request to resolve the defintion location of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar DefinitionRequest;\r\n(function (DefinitionRequest) {\r\n    DefinitionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/definition');\r\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\r\n/**\r\n * A request to resolve project-wide references for the symbol denoted\r\n * by the given text document position. The request's parameter is of\r\n * type [ReferenceParams](#ReferenceParams) the response is of type\r\n * [Location[]](#Location) or a Thenable that resolves to such.\r\n */\r\nvar ReferencesRequest;\r\n(function (ReferencesRequest) {\r\n    ReferencesRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/references');\r\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\r\n//---- Document Highlight ----------------------------------\r\n/**\r\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\r\n * text document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the request reponse is of type [DocumentHighlight[]]\r\n * (#DocumentHighlight) or a Thenable that resolves to such.\r\n */\r\nvar DocumentHighlightRequest;\r\n(function (DocumentHighlightRequest) {\r\n    DocumentHighlightRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentHighlight');\r\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\r\n//---- Document Symbol Provider ---------------------------\r\n/**\r\n * A request to list all symbols found in a given text document. The request's\r\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\r\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentSymbolRequest;\r\n(function (DocumentSymbolRequest) {\r\n    DocumentSymbolRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentSymbol');\r\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\r\n//---- Workspace Symbol Provider ---------------------------\r\n/**\r\n * A request to list project-wide symbols matching the query string given\r\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\r\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\r\n * resolves to such.\r\n */\r\nvar WorkspaceSymbolRequest;\r\n(function (WorkspaceSymbolRequest) {\r\n    WorkspaceSymbolRequest.type = new vscode_jsonrpc_1.RequestType('workspace/symbol');\r\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\r\n/**\r\n * A request to provide commands for the given text document and range.\r\n */\r\nvar CodeActionRequest;\r\n(function (CodeActionRequest) {\r\n    CodeActionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/codeAction');\r\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\r\n/**\r\n * A request to provide code lens for the given text document.\r\n */\r\nvar CodeLensRequest;\r\n(function (CodeLensRequest) {\r\n    CodeLensRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/codeLens');\r\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\r\n/**\r\n * A request to resolve a command for a given code lens.\r\n */\r\nvar CodeLensResolveRequest;\r\n(function (CodeLensResolveRequest) {\r\n    CodeLensResolveRequest.type = new vscode_jsonrpc_1.RequestType('codeLens/resolve');\r\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\r\n/**\r\n * A request to to format a whole document.\r\n */\r\nvar DocumentFormattingRequest;\r\n(function (DocumentFormattingRequest) {\r\n    DocumentFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/formatting');\r\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\r\n/**\r\n * A request to to format a range in a document.\r\n */\r\nvar DocumentRangeFormattingRequest;\r\n(function (DocumentRangeFormattingRequest) {\r\n    DocumentRangeFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/rangeFormatting');\r\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\r\n/**\r\n * A request to format a document on type.\r\n */\r\nvar DocumentOnTypeFormattingRequest;\r\n(function (DocumentOnTypeFormattingRequest) {\r\n    DocumentOnTypeFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/onTypeFormatting');\r\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\r\n/**\r\n * A request to rename a symbol.\r\n */\r\nvar RenameRequest;\r\n(function (RenameRequest) {\r\n    RenameRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/rename');\r\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\r\n/**\r\n * A request to provide document links\r\n */\r\nvar DocumentLinkRequest;\r\n(function (DocumentLinkRequest) {\r\n    DocumentLinkRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentLink');\r\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given document link. The request's\r\n * parameter is of type [DocumentLink](#DocumentLink) the response\r\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\r\n */\r\nvar DocumentLinkResolveRequest;\r\n(function (DocumentLinkResolveRequest) {\r\n    DocumentLinkResolveRequest.type = new vscode_jsonrpc_1.RequestType('documentLink/resolve');\r\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\r\n/**\r\n * A request send from the client to the server to execute a command. The request might return\r\n * a workspace edit which the client will apply to the workspace.\r\n */\r\nvar ExecuteCommandRequest;\r\n(function (ExecuteCommandRequest) {\r\n    ExecuteCommandRequest.type = new vscode_jsonrpc_1.RequestType('workspace/executeCommand');\r\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\r\n/**\r\n * A request sent from the server to the client to modified certain resources.\r\n */\r\nvar ApplyWorkspaceEditRequest;\r\n(function (ApplyWorkspaceEditRequest) {\r\n    ApplyWorkspaceEditRequest.type = new vscode_jsonrpc_1.RequestType('workspace/applyEdit');\r\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\r\n * configuration setting.\r\n */\r\nvar ConfigurationRequest;\r\n(function (ConfigurationRequest) {\r\n    ConfigurationRequest.type = new vscode_jsonrpc_1.RequestType('workspace/configuration');\r\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\r\n */\r\nvar WorkspaceFoldersRequest;\r\n(function (WorkspaceFoldersRequest) {\r\n    WorkspaceFoldersRequest.type = new vscode_jsonrpc_1.RequestType0('workspace/workspaceFolders');\r\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\r\n/**\r\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\r\n * folder configuration changes.\r\n */\r\nvar DidChangeWorkspaceFoldersNotification;\r\n(function (DidChangeWorkspaceFoldersNotification) {\r\n    DidChangeWorkspaceFoldersNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeWorkspaceFolders');\r\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * A request to list all color symbols found in a given text document. The request's\r\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentColorRequest;\r\n(function (DocumentColorRequest) {\r\n    DocumentColorRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentColor');\r\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\r\n/**\r\n * A request to list all presentation for a color. The request's\r\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar ColorPresentationRequest;\r\n(function (ColorPresentationRequest) {\r\n    ColorPresentationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/colorPresentation');\r\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nexports.ErrorCodes = vscode_jsonrpc_1.ErrorCodes;\r\nexports.ResponseError = vscode_jsonrpc_1.ResponseError;\r\nexports.CancellationToken = vscode_jsonrpc_1.CancellationToken;\r\nexports.CancellationTokenSource = vscode_jsonrpc_1.CancellationTokenSource;\r\nexports.Disposable = vscode_jsonrpc_1.Disposable;\r\nexports.Event = vscode_jsonrpc_1.Event;\r\nexports.Emitter = vscode_jsonrpc_1.Emitter;\r\nexports.Trace = vscode_jsonrpc_1.Trace;\r\nexports.SetTraceNotification = vscode_jsonrpc_1.SetTraceNotification;\r\nexports.LogTraceNotification = vscode_jsonrpc_1.LogTraceNotification;\r\nexports.RequestType = vscode_jsonrpc_1.RequestType;\r\nexports.RequestType0 = vscode_jsonrpc_1.RequestType0;\r\nexports.NotificationType = vscode_jsonrpc_1.NotificationType;\r\nexports.NotificationType0 = vscode_jsonrpc_1.NotificationType0;\r\nexports.MessageReader = vscode_jsonrpc_1.MessageReader;\r\nexports.MessageWriter = vscode_jsonrpc_1.MessageWriter;\r\nexports.ConnectionStrategy = vscode_jsonrpc_1.ConnectionStrategy;\r\nexports.StreamMessageReader = vscode_jsonrpc_1.StreamMessageReader;\r\nexports.StreamMessageWriter = vscode_jsonrpc_1.StreamMessageWriter;\r\nexports.IPCMessageReader = vscode_jsonrpc_1.IPCMessageReader;\r\nexports.IPCMessageWriter = vscode_jsonrpc_1.IPCMessageWriter;\r\nexports.createClientPipeTransport = vscode_jsonrpc_1.createClientPipeTransport;\r\nexports.createServerPipeTransport = vscode_jsonrpc_1.createServerPipeTransport;\r\nexports.generateRandomPipeName = vscode_jsonrpc_1.generateRandomPipeName;\r\nexports.createClientSocketTransport = vscode_jsonrpc_1.createClientSocketTransport;\r\nexports.createServerSocketTransport = vscode_jsonrpc_1.createServerSocketTransport;\r\n__export(require(\"vscode-languageserver-types\"));\r\n__export(require(\"./protocol\"));\r\nconst config = require(\"./protocol.configuration.proposed\");\r\nconst folders = require(\"./protocol.workspaceFolders.proposed\");\r\nconst color = require(\"./protocol.colorProvider.proposed\");\r\nvar Proposed;\r\n(function (Proposed) {\r\n    let ConfigurationRequest;\r\n    (function (ConfigurationRequest) {\r\n        ConfigurationRequest.type = config.ConfigurationRequest.type;\r\n    })(ConfigurationRequest = Proposed.ConfigurationRequest || (Proposed.ConfigurationRequest = {}));\r\n    ;\r\n    let WorkspaceFoldersRequest;\r\n    (function (WorkspaceFoldersRequest) {\r\n        WorkspaceFoldersRequest.type = folders.WorkspaceFoldersRequest.type;\r\n    })(WorkspaceFoldersRequest = Proposed.WorkspaceFoldersRequest || (Proposed.WorkspaceFoldersRequest = {}));\r\n    let DidChangeWorkspaceFoldersNotification;\r\n    (function (DidChangeWorkspaceFoldersNotification) {\r\n        DidChangeWorkspaceFoldersNotification.type = folders.DidChangeWorkspaceFoldersNotification.type;\r\n    })(DidChangeWorkspaceFoldersNotification = Proposed.DidChangeWorkspaceFoldersNotification || (Proposed.DidChangeWorkspaceFoldersNotification = {}));\r\n    Proposed.DocumentColorRequest = color.DocumentColorRequest;\r\n    Proposed.ColorPresentationRequest = color.ColorPresentationRequest;\r\n})(Proposed = exports.Proposed || (exports.Proposed = {}));\r\nfunction createProtocolConnection(reader, writer, logger, strategy) {\r\n    return vscode_jsonrpc_1.createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createProtocolConnection = createProtocolConnection;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst toString = Object.prototype.toString;\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return toString.call(value) === '[object String]';\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return toString.call(value) === '[object Number]';\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return toString.call(value) === '[object Error]';\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return toString.call(value) === '[object Function]';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction thenable(value) {\r\n    return value && func(value.then);\r\n}\r\nexports.thenable = thenable;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolCompletionItem extends code.CompletionItem {\r\n    constructor(label) {\r\n        super(label);\r\n    }\r\n}\r\nexports.default = ProtocolCompletionItem;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolCodeLens extends code.CodeLens {\r\n    constructor(range) {\r\n        super(range);\r\n    }\r\n}\r\nexports.default = ProtocolCodeLens;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nconst proto = require(\"vscode-languageserver-protocol\");\r\nconst is = require(\"./utils/is\");\r\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\r\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\r\nfunction createConverter(uriConverter) {\r\n    const nullConverter = (value) => value.toString();\r\n    const _uriConverter = uriConverter || nullConverter;\r\n    function asUri(value) {\r\n        return _uriConverter(value);\r\n    }\r\n    function asTextDocumentIdentifier(textDocument) {\r\n        return {\r\n            uri: _uriConverter(textDocument.uri)\r\n        };\r\n    }\r\n    function asVersionedTextDocumentIdentifier(textDocument) {\r\n        return {\r\n            uri: _uriConverter(textDocument.uri),\r\n            version: textDocument.version\r\n        };\r\n    }\r\n    function asOpenTextDocumentParams(textDocument) {\r\n        return {\r\n            textDocument: {\r\n                uri: _uriConverter(textDocument.uri),\r\n                languageId: textDocument.languageId,\r\n                version: textDocument.version,\r\n                text: textDocument.getText()\r\n            }\r\n        };\r\n    }\r\n    function isTextDocumentChangeEvent(value) {\r\n        let candidate = value;\r\n        return !!candidate.document && !!candidate.contentChanges;\r\n    }\r\n    function isTextDocument(value) {\r\n        let candidate = value;\r\n        return !!candidate.uri && !!candidate.version;\r\n    }\r\n    function asChangeTextDocumentParams(arg) {\r\n        if (isTextDocument(arg)) {\r\n            let result = {\r\n                textDocument: {\r\n                    uri: _uriConverter(arg.uri),\r\n                    version: arg.version\r\n                },\r\n                contentChanges: [{ text: arg.getText() }]\r\n            };\r\n            return result;\r\n        }\r\n        else if (isTextDocumentChangeEvent(arg)) {\r\n            let document = arg.document;\r\n            let result = {\r\n                textDocument: {\r\n                    uri: _uriConverter(document.uri),\r\n                    version: document.version\r\n                },\r\n                contentChanges: arg.contentChanges.map((change) => {\r\n                    let range = change.range;\r\n                    return {\r\n                        range: {\r\n                            start: { line: range.start.line, character: range.start.character },\r\n                            end: { line: range.end.line, character: range.end.character }\r\n                        },\r\n                        rangeLength: change.rangeLength,\r\n                        text: change.text\r\n                    };\r\n                })\r\n            };\r\n            return result;\r\n        }\r\n        else {\r\n            throw Error('Unsupported text document change parameter');\r\n        }\r\n    }\r\n    function asCloseTextDocumentParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asSaveTextDocumentParams(textDocument, includeContent = false) {\r\n        let result = {\r\n            textDocument: asVersionedTextDocumentIdentifier(textDocument)\r\n        };\r\n        if (includeContent) {\r\n            result.text = textDocument.getText();\r\n        }\r\n        return result;\r\n    }\r\n    function asTextDocumentSaveReason(reason) {\r\n        switch (reason) {\r\n            case code.TextDocumentSaveReason.Manual:\r\n                return proto.TextDocumentSaveReason.Manual;\r\n            case code.TextDocumentSaveReason.AfterDelay:\r\n                return proto.TextDocumentSaveReason.AfterDelay;\r\n            case code.TextDocumentSaveReason.FocusOut:\r\n                return proto.TextDocumentSaveReason.FocusOut;\r\n        }\r\n        return proto.TextDocumentSaveReason.Manual;\r\n    }\r\n    function asWillSaveTextDocumentParams(event) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(event.document),\r\n            reason: asTextDocumentSaveReason(event.reason)\r\n        };\r\n    }\r\n    function asTextDocumentPositionParams(textDocument, position) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position)\r\n        };\r\n    }\r\n    function asWorkerPosition(position) {\r\n        return { line: position.line, character: position.character };\r\n    }\r\n    function asPosition(value) {\r\n        if (value === void 0) {\r\n            return undefined;\r\n        }\r\n        else if (value === null) {\r\n            return null;\r\n        }\r\n        return { line: value.line, character: value.character };\r\n    }\r\n    function asRange(value) {\r\n        if (value === void 0 || value === null) {\r\n            return value;\r\n        }\r\n        return { start: asPosition(value.start), end: asPosition(value.end) };\r\n    }\r\n    function asDiagnosticSeverity(value) {\r\n        switch (value) {\r\n            case code.DiagnosticSeverity.Error:\r\n                return proto.DiagnosticSeverity.Error;\r\n            case code.DiagnosticSeverity.Warning:\r\n                return proto.DiagnosticSeverity.Warning;\r\n            case code.DiagnosticSeverity.Information:\r\n                return proto.DiagnosticSeverity.Information;\r\n            case code.DiagnosticSeverity.Hint:\r\n                return proto.DiagnosticSeverity.Hint;\r\n        }\r\n    }\r\n    function asDiagnostic(item) {\r\n        let result = proto.Diagnostic.create(asRange(item.range), item.message);\r\n        if (item.severity) {\r\n            result.severity = asDiagnosticSeverity(item.severity);\r\n        }\r\n        if (is.number(item.code) || is.string(item.code)) {\r\n            result.code = item.code;\r\n        }\r\n        if (item.source) {\r\n            result.source = item.source;\r\n        }\r\n        return result;\r\n    }\r\n    function asDiagnostics(items) {\r\n        if (items === void 0 || items === null) {\r\n            return items;\r\n        }\r\n        return items.map(asDiagnostic);\r\n    }\r\n    function asCompletionItem(item) {\r\n        let result = { label: item.label };\r\n        if (item.detail) {\r\n            result.detail = item.detail;\r\n        }\r\n        if (item.documentation) {\r\n            result.documentation = item.documentation;\r\n        }\r\n        if (item.filterText) {\r\n            result.filterText = item.filterText;\r\n        }\r\n        fillPrimaryInsertText(result, item);\r\n        // Protocol item kind is 1 based, codes item kind is zero based.\r\n        if (is.number(item.kind)) {\r\n            if (code.CompletionItemKind.Text <= item.kind && item.kind <= code.CompletionItemKind.Reference) {\r\n                result.kind = (item.kind + 1);\r\n            }\r\n            else {\r\n                result.kind = proto.CompletionItemKind.Text;\r\n            }\r\n        }\r\n        if (item.sortText) {\r\n            result.sortText = item.sortText;\r\n        }\r\n        if (item.additionalTextEdits) {\r\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\r\n        }\r\n        if (item.commitCharacters) {\r\n            result.commitCharacters = item.commitCharacters.slice();\r\n        }\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item instanceof protocolCompletionItem_1.default && item.data) {\r\n            result.data = item.data;\r\n        }\r\n        return result;\r\n    }\r\n    function fillPrimaryInsertText(target, source) {\r\n        let format = proto.InsertTextFormat.PlainText;\r\n        let text;\r\n        let range = undefined;\r\n        if (source.textEdit) {\r\n            text = source.textEdit.newText;\r\n            range = asRange(source.textEdit.range);\r\n        }\r\n        else if (source.insertText instanceof code.SnippetString) {\r\n            format = proto.InsertTextFormat.Snippet;\r\n            text = source.insertText.value;\r\n        }\r\n        else {\r\n            text = source.insertText;\r\n        }\r\n        if (source.range) {\r\n            range = asRange(source.range);\r\n        }\r\n        target.insertTextFormat = format;\r\n        if (source.fromEdit && text && range) {\r\n            target.textEdit = { newText: text, range: range };\r\n        }\r\n        else {\r\n            target.insertText = text;\r\n        }\r\n    }\r\n    function asTextEdit(edit) {\r\n        return { range: asRange(edit.range), newText: edit.newText };\r\n    }\r\n    function asTextEdits(edits) {\r\n        if (edits === void 0 || edits === null) {\r\n            return edits;\r\n        }\r\n        return edits.map(asTextEdit);\r\n    }\r\n    function asReferenceParams(textDocument, position, options) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position),\r\n            context: { includeDeclaration: options.includeDeclaration }\r\n        };\r\n    }\r\n    function asCodeActionContext(context) {\r\n        if (context === void 0 || context === null) {\r\n            return context;\r\n        }\r\n        return proto.CodeActionContext.create(asDiagnostics(context.diagnostics));\r\n    }\r\n    function asCommand(item) {\r\n        let result = proto.Command.create(item.title, item.command);\r\n        if (item.arguments) {\r\n            result.arguments = item.arguments;\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeLens(item) {\r\n        let result = proto.CodeLens.create(asRange(item.range));\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item instanceof protocolCodeLens_1.default) {\r\n            if (item.data) {\r\n                result.data = item.data;\r\n            }\r\n            ;\r\n        }\r\n        return result;\r\n    }\r\n    function asFormattingOptions(item) {\r\n        return { tabSize: item.tabSize, insertSpaces: item.insertSpaces };\r\n    }\r\n    function asDocumentSymbolParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asCodeLensParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asDocumentLink(item) {\r\n        let result = proto.DocumentLink.create(asRange(item.range));\r\n        if (item.target) {\r\n            result.target = asUri(item.target);\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentLinkParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    return {\r\n        asUri,\r\n        asTextDocumentIdentifier,\r\n        asOpenTextDocumentParams,\r\n        asChangeTextDocumentParams,\r\n        asCloseTextDocumentParams,\r\n        asSaveTextDocumentParams,\r\n        asWillSaveTextDocumentParams,\r\n        asTextDocumentPositionParams,\r\n        asWorkerPosition,\r\n        asRange,\r\n        asPosition,\r\n        asDiagnosticSeverity,\r\n        asDiagnostic,\r\n        asDiagnostics,\r\n        asCompletionItem,\r\n        asTextEdit,\r\n        asReferenceParams,\r\n        asCodeActionContext,\r\n        asCommand,\r\n        asCodeLens,\r\n        asFormattingOptions,\r\n        asDocumentSymbolParams,\r\n        asCodeLensParams,\r\n        asDocumentLink,\r\n        asDocumentLinkParams\r\n    };\r\n}\r\nexports.createConverter = createConverter;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nconst ls = require(\"vscode-languageserver-protocol\");\r\nconst is = require(\"./utils/is\");\r\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\r\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\r\nfunction createConverter(uriConverter) {\r\n    const nullConverter = (value) => code.Uri.parse(value);\r\n    const _uriConverter = uriConverter || nullConverter;\r\n    function asUri(value) {\r\n        return _uriConverter(value);\r\n    }\r\n    function asDiagnostics(diagnostics) {\r\n        return diagnostics.map(asDiagnostic);\r\n    }\r\n    function asDiagnostic(diagnostic) {\r\n        let result = new code.Diagnostic(asRange(diagnostic.range), diagnostic.message, asDiagnosticSeverity(diagnostic.severity));\r\n        if (is.number(diagnostic.code) || is.string(diagnostic.code)) {\r\n            result.code = diagnostic.code;\r\n        }\r\n        if (diagnostic.source) {\r\n            result.source = diagnostic.source;\r\n        }\r\n        return result;\r\n    }\r\n    function asPosition(value) {\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n        return new code.Position(value.line, value.character);\r\n    }\r\n    function asRange(value) {\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n        return new code.Range(asPosition(value.start), asPosition(value.end));\r\n    }\r\n    function asDiagnosticSeverity(value) {\r\n        if (value === void 0 || value === null) {\r\n            return code.DiagnosticSeverity.Error;\r\n        }\r\n        switch (value) {\r\n            case ls.DiagnosticSeverity.Error:\r\n                return code.DiagnosticSeverity.Error;\r\n            case ls.DiagnosticSeverity.Warning:\r\n                return code.DiagnosticSeverity.Warning;\r\n            case ls.DiagnosticSeverity.Information:\r\n                return code.DiagnosticSeverity.Information;\r\n            case ls.DiagnosticSeverity.Hint:\r\n                return code.DiagnosticSeverity.Hint;\r\n        }\r\n        return code.DiagnosticSeverity.Error;\r\n    }\r\n    function asHover(hover) {\r\n        if (!hover) {\r\n            return undefined;\r\n        }\r\n        return new code.Hover(hover.contents, asRange(hover.range));\r\n    }\r\n    function asCompletionResult(result) {\r\n        if (!result) {\r\n            return undefined;\r\n        }\r\n        if (Array.isArray(result)) {\r\n            let items = result;\r\n            return items.map(asCompletionItem);\r\n        }\r\n        let list = result;\r\n        return new code.CompletionList(list.items.map(asCompletionItem), list.isIncomplete);\r\n    }\r\n    function asCompletionItem(item) {\r\n        let result = new protocolCompletionItem_1.default(item.label);\r\n        if (item.detail) {\r\n            result.detail = item.detail;\r\n        }\r\n        if (item.documentation) {\r\n            result.documentation = item.documentation;\r\n        }\r\n        ;\r\n        if (item.filterText) {\r\n            result.filterText = item.filterText;\r\n        }\r\n        let insertText = asCompletionInsertText(item);\r\n        if (insertText) {\r\n            result.insertText = insertText.text;\r\n            result.range = insertText.range;\r\n            result.fromEdit = insertText.fromEdit;\r\n        }\r\n        // Protocol item kind is 1 based, codes item kind is zero based.\r\n        if (is.number(item.kind) && item.kind > 0) {\r\n            result.kind = item.kind - 1;\r\n        }\r\n        if (item.sortText) {\r\n            result.sortText = item.sortText;\r\n        }\r\n        if (item.additionalTextEdits) {\r\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\r\n        }\r\n        if (is.stringArray(item.commitCharacters)) {\r\n            result.commitCharacters = item.commitCharacters.slice();\r\n        }\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.data !== void 0 && item.data !== null) {\r\n            result.data = item.data;\r\n        }\r\n        return result;\r\n    }\r\n    function asCompletionInsertText(item) {\r\n        if (item.textEdit) {\r\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                return { text: new code.SnippetString(item.textEdit.newText), range: asRange(item.textEdit.range), fromEdit: true };\r\n            }\r\n            else {\r\n                return { text: item.textEdit.newText, range: asRange(item.textEdit.range), fromEdit: true };\r\n            }\r\n        }\r\n        else if (item.insertText) {\r\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                return { text: new code.SnippetString(item.insertText), fromEdit: false };\r\n            }\r\n            else {\r\n                return { text: item.insertText, fromEdit: false };\r\n            }\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    function asTextEdit(edit) {\r\n        if (!edit) {\r\n            return undefined;\r\n        }\r\n        return new code.TextEdit(asRange(edit.range), edit.newText);\r\n    }\r\n    function asTextEdits(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asTextEdit);\r\n    }\r\n    function asSignatureHelp(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new code.SignatureHelp();\r\n        if (is.number(item.activeSignature)) {\r\n            result.activeSignature = item.activeSignature;\r\n        }\r\n        else {\r\n            // activeSignature was optional in the past\r\n            result.activeSignature = 0;\r\n        }\r\n        if (is.number(item.activeParameter)) {\r\n            result.activeParameter = item.activeParameter;\r\n        }\r\n        else {\r\n            // activeParameter was optional in the past\r\n            result.activeParameter = 0;\r\n        }\r\n        if (item.signatures) {\r\n            result.signatures = asSignatureInformations(item.signatures);\r\n        }\r\n        return result;\r\n    }\r\n    function asSignatureInformations(items) {\r\n        return items.map(asSignatureInformation);\r\n    }\r\n    function asSignatureInformation(item) {\r\n        let result = new code.SignatureInformation(item.label);\r\n        if (item.documentation) {\r\n            result.documentation = item.documentation;\r\n        }\r\n        if (item.parameters) {\r\n            result.parameters = asParameterInformations(item.parameters);\r\n        }\r\n        return result;\r\n    }\r\n    function asParameterInformations(item) {\r\n        return item.map(asParameterInformation);\r\n    }\r\n    function asParameterInformation(item) {\r\n        let result = new code.ParameterInformation(item.label);\r\n        if (item.documentation) {\r\n            result.documentation = item.documentation;\r\n        }\r\n        ;\r\n        return result;\r\n    }\r\n    function asDefinitionResult(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        if (is.array(item)) {\r\n            return item.map((location) => asLocation(location));\r\n        }\r\n        else {\r\n            return asLocation(item);\r\n        }\r\n    }\r\n    function asLocation(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return new code.Location(_uriConverter(item.uri), asRange(item.range));\r\n    }\r\n    function asReferences(values) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(location => asLocation(location));\r\n    }\r\n    function asDocumentHighlights(values) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(asDocumentHighlight);\r\n    }\r\n    function asDocumentHighlight(item) {\r\n        let result = new code.DocumentHighlight(asRange(item.range));\r\n        if (is.number(item.kind)) {\r\n            result.kind = asDocumentHighlightKind(item.kind);\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentHighlightKind(item) {\r\n        switch (item) {\r\n            case ls.DocumentHighlightKind.Text:\r\n                return code.DocumentHighlightKind.Text;\r\n            case ls.DocumentHighlightKind.Read:\r\n                return code.DocumentHighlightKind.Read;\r\n            case ls.DocumentHighlightKind.Write:\r\n                return code.DocumentHighlightKind.Write;\r\n        }\r\n        return code.DocumentHighlightKind.Text;\r\n    }\r\n    function asSymbolInformations(values, uri) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(information => asSymbolInformation(information, uri));\r\n    }\r\n    function asSymbolInformation(item, uri) {\r\n        // Symbol kind is one based in the protocol and zero based in code.\r\n        let result = new code.SymbolInformation(item.name, item.kind - 1, asRange(item.location.range), item.location.uri ? _uriConverter(item.location.uri) : uri);\r\n        if (item.containerName) {\r\n            result.containerName = item.containerName;\r\n        }\r\n        return result;\r\n    }\r\n    function asCommand(item) {\r\n        let result = { title: item.title, command: item.command };\r\n        if (item.arguments) {\r\n            result.arguments = item.arguments;\r\n        }\r\n        return result;\r\n    }\r\n    function asCommands(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asCommand);\r\n    }\r\n    function asCodeLens(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new protocolCodeLens_1.default(asRange(item.range));\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.data !== void 0 && item.data !== null) {\r\n            result.data = item.data;\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeLenses(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map((codeLens) => asCodeLens(codeLens));\r\n    }\r\n    function asWorkspaceEdit(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new code.WorkspaceEdit();\r\n        if (item.documentChanges) {\r\n            item.documentChanges.forEach(change => {\r\n                result.set(_uriConverter(change.textDocument.uri), asTextEdits(change.edits));\r\n            });\r\n        }\r\n        else if (item.changes) {\r\n            Object.keys(item.changes).forEach(key => {\r\n                result.set(_uriConverter(key), asTextEdits(item.changes[key]));\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentLink(item) {\r\n        let range = asRange(item.range);\r\n        let target = item.target ? asUri(item.target) : undefined;\r\n        // target must be optional in DocumentLink\r\n        return new code.DocumentLink(range, target);\r\n    }\r\n    function asDocumentLinks(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asDocumentLink);\r\n    }\r\n    return {\r\n        asUri,\r\n        asDiagnostics,\r\n        asDiagnostic,\r\n        asRange,\r\n        asPosition,\r\n        asDiagnosticSeverity,\r\n        asHover,\r\n        asCompletionResult,\r\n        asCompletionItem,\r\n        asTextEdit,\r\n        asTextEdits,\r\n        asSignatureHelp,\r\n        asSignatureInformations,\r\n        asSignatureInformation,\r\n        asParameterInformations,\r\n        asParameterInformation,\r\n        asDefinitionResult,\r\n        asLocation,\r\n        asReferences,\r\n        asDocumentHighlights,\r\n        asDocumentHighlight,\r\n        asDocumentHighlightKind,\r\n        asSymbolInformations,\r\n        asSymbolInformation,\r\n        asCommand,\r\n        asCommands,\r\n        asCodeLens,\r\n        asCodeLenses,\r\n        asWorkspaceEdit,\r\n        asDocumentLink,\r\n        asDocumentLinks\r\n    };\r\n}\r\nexports.createConverter = createConverter;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Delayer {\r\n    constructor(defaultDelay) {\r\n        this.defaultDelay = defaultDelay;\r\n        this.timeout = undefined;\r\n        this.completionPromise = undefined;\r\n        this.onSuccess = undefined;\r\n        this.task = undefined;\r\n    }\r\n    trigger(task, delay = this.defaultDelay) {\r\n        this.task = task;\r\n        if (delay >= 0) {\r\n            this.cancelTimeout();\r\n        }\r\n        if (!this.completionPromise) {\r\n            this.completionPromise = new Promise((resolve) => {\r\n                this.onSuccess = resolve;\r\n            }).then(() => {\r\n                this.completionPromise = undefined;\r\n                this.onSuccess = undefined;\r\n                var result = this.task();\r\n                this.task = undefined;\r\n                return result;\r\n            });\r\n        }\r\n        if (delay >= 0 || this.timeout === void 0) {\r\n            this.timeout = setTimeout(() => {\r\n                this.timeout = undefined;\r\n                this.onSuccess(undefined);\r\n            }, delay >= 0 ? delay : this.defaultDelay);\r\n        }\r\n        return this.completionPromise;\r\n    }\r\n    forceDelivery() {\r\n        if (!this.completionPromise) {\r\n            return undefined;\r\n        }\r\n        this.cancelTimeout();\r\n        let result = this.task();\r\n        this.completionPromise = undefined;\r\n        this.onSuccess = undefined;\r\n        this.task = undefined;\r\n        return result;\r\n    }\r\n    isTriggered() {\r\n        return this.timeout !== void 0;\r\n    }\r\n    cancel() {\r\n        this.cancelTimeout();\r\n        this.completionPromise = undefined;\r\n    }\r\n    cancelTimeout() {\r\n        if (this.timeout !== void 0) {\r\n            clearTimeout(this.timeout);\r\n            this.timeout = undefined;\r\n        }\r\n    }\r\n}\r\nexports.Delayer = Delayer;\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass ValueUUID {\r\n    constructor(_value) {\r\n        this._value = _value;\r\n        // empty\r\n    }\r\n    asHex() {\r\n        return this._value;\r\n    }\r\n    equals(other) {\r\n        return this.asHex() === other.asHex();\r\n    }\r\n}\r\nclass V4UUID extends ValueUUID {\r\n    constructor() {\r\n        super([\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            '4',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._oneOf(V4UUID._timeHighBits),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n        ].join(''));\r\n    }\r\n    static _oneOf(array) {\r\n        return array[Math.floor(array.length * Math.random())];\r\n    }\r\n    static _randomHex() {\r\n        return V4UUID._oneOf(V4UUID._chars);\r\n    }\r\n}\r\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\r\n/**\r\n * An empty UUID that contains only zeros.\r\n */\r\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\r\nfunction v4() {\r\n    return new V4UUID();\r\n}\r\nexports.v4 = v4;\r\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\r\nfunction isUUID(value) {\r\n    return _UUIDPattern.test(value);\r\n}\r\nexports.isUUID = isUUID;\r\n/**\r\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\r\n * @param value A uuid string.\r\n */\r\nfunction parse(value) {\r\n    if (!isUUID(value)) {\r\n        throw new Error('invalid uuid');\r\n    }\r\n    return new ValueUUID(value);\r\n}\r\nexports.parse = parse;\r\nfunction generateUuid() {\r\n    return v4().asHex();\r\n}\r\nexports.generateUuid = generateUuid;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst c2p = require(\"./codeConverter\");\r\nconst p2c = require(\"./protocolConverter\");\r\nconst Is = require(\"./utils/is\");\r\nconst async_1 = require(\"./utils/async\");\r\nconst UUID = require(\"./utils/uuid\");\r\n__export(require(\"vscode-languageserver-protocol\"));\r\nclass ConsoleLogger {\r\n    error(message) {\r\n        console.error(message);\r\n    }\r\n    warn(message) {\r\n        console.warn(message);\r\n    }\r\n    info(message) {\r\n        console.info(message);\r\n    }\r\n    log(message) {\r\n        console.log(message);\r\n    }\r\n}\r\nfunction createConnection(input, output, errorHandler, closeHandler) {\r\n    let logger = new ConsoleLogger();\r\n    let connection = vscode_languageserver_protocol_1.createProtocolConnection(input, output, logger);\r\n    connection.onError((data) => { errorHandler(data[0], data[1], data[2]); });\r\n    connection.onClose(closeHandler);\r\n    let result = {\r\n        listen: () => connection.listen(),\r\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\r\n        onRequest: (type, handler) => connection.onRequest(Is.string(type) ? type : type.method, handler),\r\n        sendNotification: (type, params) => connection.sendNotification(Is.string(type) ? type : type.method, params),\r\n        onNotification: (type, handler) => connection.onNotification(Is.string(type) ? type : type.method, handler),\r\n        trace: (value, tracer, sendNotification = false) => connection.trace(value, tracer, sendNotification),\r\n        initialize: (params) => connection.sendRequest(vscode_languageserver_protocol_1.InitializeRequest.type, params),\r\n        shutdown: () => connection.sendRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, undefined),\r\n        exit: () => connection.sendNotification(vscode_languageserver_protocol_1.ExitNotification.type),\r\n        onLogMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, handler),\r\n        onShowMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.ShowMessageNotification.type, handler),\r\n        onTelemetry: (handler) => connection.onNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, handler),\r\n        didChangeConfiguration: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, params),\r\n        didChangeWatchedFiles: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, params),\r\n        didOpenTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, params),\r\n        didChangeTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params),\r\n        didCloseTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, params),\r\n        didSaveTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, params),\r\n        onDiagnostics: (handler) => connection.onNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, handler),\r\n        dispose: () => connection.dispose()\r\n    };\r\n    return result;\r\n}\r\nvar TransportKind;\r\n(function (TransportKind) {\r\n    TransportKind[TransportKind[\"stdio\"] = 0] = \"stdio\";\r\n    TransportKind[TransportKind[\"ipc\"] = 1] = \"ipc\";\r\n    TransportKind[TransportKind[\"pipe\"] = 2] = \"pipe\";\r\n})(TransportKind = exports.TransportKind || (exports.TransportKind = {}));\r\n/**\r\n * An action to be performed when the connection is producing errors.\r\n */\r\nvar ErrorAction;\r\n(function (ErrorAction) {\r\n    /**\r\n     * Continue running the server.\r\n     */\r\n    ErrorAction[ErrorAction[\"Continue\"] = 1] = \"Continue\";\r\n    /**\r\n     * Shutdown the server.\r\n     */\r\n    ErrorAction[ErrorAction[\"Shutdown\"] = 2] = \"Shutdown\";\r\n})(ErrorAction = exports.ErrorAction || (exports.ErrorAction = {}));\r\n/**\r\n * An action to be performed when the connection to a server got closed.\r\n */\r\nvar CloseAction;\r\n(function (CloseAction) {\r\n    /**\r\n     * Don't restart the server. The connection stays closed.\r\n     */\r\n    CloseAction[CloseAction[\"DoNotRestart\"] = 1] = \"DoNotRestart\";\r\n    /**\r\n     * Restart the server.\r\n     */\r\n    CloseAction[CloseAction[\"Restart\"] = 2] = \"Restart\";\r\n})(CloseAction = exports.CloseAction || (exports.CloseAction = {}));\r\nclass DefaultErrorHandler {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.restarts = [];\r\n    }\r\n    error(_error, _message, count) {\r\n        if (count && count <= 3) {\r\n            return ErrorAction.Continue;\r\n        }\r\n        return ErrorAction.Shutdown;\r\n    }\r\n    closed() {\r\n        this.restarts.push(Date.now());\r\n        if (this.restarts.length < 5) {\r\n            return CloseAction.Restart;\r\n        }\r\n        else {\r\n            let diff = this.restarts[this.restarts.length - 1] - this.restarts[0];\r\n            if (diff <= 3 * 60 * 1000) {\r\n                vscode_1.window.showErrorMessage(`The ${this.name} server crashed 5 times in the last 3 minutes. The server will not be restarted.`);\r\n                return CloseAction.DoNotRestart;\r\n            }\r\n            else {\r\n                this.restarts.shift();\r\n                return CloseAction.Restart;\r\n            }\r\n        }\r\n    }\r\n}\r\nvar RevealOutputChannelOn;\r\n(function (RevealOutputChannelOn) {\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Info\"] = 1] = \"Info\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Warn\"] = 2] = \"Warn\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Error\"] = 3] = \"Error\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Never\"] = 4] = \"Never\";\r\n})(RevealOutputChannelOn = exports.RevealOutputChannelOn || (exports.RevealOutputChannelOn = {}));\r\nvar State;\r\n(function (State) {\r\n    State[State[\"Stopped\"] = 1] = \"Stopped\";\r\n    State[State[\"Running\"] = 2] = \"Running\";\r\n})(State = exports.State || (exports.State = {}));\r\nvar ClientState;\r\n(function (ClientState) {\r\n    ClientState[ClientState[\"Initial\"] = 0] = \"Initial\";\r\n    ClientState[ClientState[\"Starting\"] = 1] = \"Starting\";\r\n    ClientState[ClientState[\"StartFailed\"] = 2] = \"StartFailed\";\r\n    ClientState[ClientState[\"Running\"] = 3] = \"Running\";\r\n    ClientState[ClientState[\"Stopping\"] = 4] = \"Stopping\";\r\n    ClientState[ClientState[\"Stopped\"] = 5] = \"Stopped\";\r\n})(ClientState || (ClientState = {}));\r\nvar DynamicFeature;\r\n(function (DynamicFeature) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.register) && Is.func(candidate.unregister) && Is.func(candidate.dispose) && candidate.messages !== void 0;\r\n    }\r\n    DynamicFeature.is = is;\r\n})(DynamicFeature || (DynamicFeature = {}));\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass DocumentNotifiactions {\r\n    constructor(_client, _event, _type, _middleware, _createParams, _selectorFilter) {\r\n        this._client = _client;\r\n        this._event = _event;\r\n        this._type = _type;\r\n        this._middleware = _middleware;\r\n        this._createParams = _createParams;\r\n        this._selectorFilter = _selectorFilter;\r\n        this._selectors = new Map();\r\n    }\r\n    static textDocumentFilter(selectors, textDocument) {\r\n        for (const selector of selectors) {\r\n            if (vscode_1.languages.match(selector, textDocument)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = this._event(this.callback, this);\r\n        }\r\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\r\n    }\r\n    callback(data) {\r\n        if (!this._selectorFilter || this._selectorFilter(this._selectors.values(), data)) {\r\n            if (this._middleware) {\r\n                this._middleware(data, (data) => this._client.sendNotification(this._type, this._createParams(data)));\r\n            }\r\n            else {\r\n                this._client.sendNotification(this._type, this._createParams(data));\r\n            }\r\n            this.notificationSent(data);\r\n        }\r\n    }\r\n    notificationSent(_data) {\r\n    }\r\n    unregister(id) {\r\n        this._selectors.delete(id);\r\n        if (this._selectors.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n        }\r\n    }\r\n}\r\nclass DidOpenTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client, _syncedDocuments) {\r\n        super(client, vscode_1.workspace.onDidOpenTextDocument, vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, client.clientOptions.middleware.didOpen, (textDocument) => client.code2ProtocolConverter.asOpenTextDocumentParams(textDocument), DocumentNotifiactions.textDocumentFilter);\r\n        this._syncedDocuments = _syncedDocuments;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\r\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\r\n        }\r\n    }\r\n    register(message, data) {\r\n        super.register(message, data);\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        let documentSelector = data.registerOptions.documentSelector;\r\n        vscode_1.workspace.textDocuments.forEach((textDocument) => {\r\n            let uri = textDocument.uri.toString();\r\n            if (this._syncedDocuments.has(uri)) {\r\n                return;\r\n            }\r\n            if (vscode_1.languages.match(documentSelector, textDocument)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                let didOpen = (textDocument) => {\r\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\r\n                };\r\n                if (middleware.didOpen) {\r\n                    middleware.didOpen(textDocument, didOpen);\r\n                }\r\n                else {\r\n                    didOpen(textDocument);\r\n                }\r\n                this._syncedDocuments.set(uri, textDocument);\r\n            }\r\n        });\r\n    }\r\n    notificationSent(textDocument) {\r\n        super.notificationSent(textDocument);\r\n        this._syncedDocuments.set(textDocument.uri.toString(), textDocument);\r\n    }\r\n}\r\nclass DidCloseTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client, _syncedDocuments) {\r\n        super(client, vscode_1.workspace.onDidCloseTextDocument, vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, client.clientOptions.middleware.didClose, (textDocument) => client.code2ProtocolConverter.asCloseTextDocumentParams(textDocument), DocumentNotifiactions.textDocumentFilter);\r\n        this._syncedDocuments = _syncedDocuments;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\r\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\r\n        }\r\n    }\r\n    notificationSent(textDocument) {\r\n        super.notificationSent(textDocument);\r\n        this._syncedDocuments.delete(textDocument.uri.toString());\r\n    }\r\n    unregister(id) {\r\n        let selector = this._selectors.get(id);\r\n        // The super call removed the selector from the map\r\n        // of selectors.\r\n        super.unregister(id);\r\n        let selectors = this._selectors.values();\r\n        this._syncedDocuments.forEach((textDocument) => {\r\n            if (vscode_1.languages.match(selector, textDocument) && !this._selectorFilter(selectors, textDocument)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                let didClose = (textDocument) => {\r\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\r\n                };\r\n                this._syncedDocuments.delete(textDocument.uri.toString());\r\n                if (middleware.didClose) {\r\n                    middleware.didClose(textDocument, didClose);\r\n                }\r\n                else {\r\n                    didClose(textDocument);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DidChangeTextDocumentFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._changeData = new Map();\r\n        this._forcingDelivery = false;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.change !== void 0 && textDocumentSyncOptions.change !== vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { syncKind: textDocumentSyncOptions.change })\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = vscode_1.workspace.onDidChangeTextDocument(this.callback, this);\r\n        }\r\n        this._changeData.set(data.id, {\r\n            documentSelector: data.registerOptions.documentSelector,\r\n            syncKind: data.registerOptions.syncKind\r\n        });\r\n    }\r\n    callback(event) {\r\n        for (const changeData of this._changeData.values()) {\r\n            if (vscode_1.languages.match(changeData.documentSelector, event.document)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Incremental) {\r\n                    let params = this._client.code2ProtocolConverter.asChangeTextDocumentParams(event);\r\n                    if (middleware.didChange) {\r\n                        middleware.didChange(event, () => this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params));\r\n                    }\r\n                    else {\r\n                        this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params);\r\n                    }\r\n                }\r\n                else if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Full) {\r\n                    let didChange = (event) => {\r\n                        if (this._changeDelayer) {\r\n                            if (this._changeDelayer.uri !== event.document.uri.toString()) {\r\n                                // Use this force delivery to track boolean state. Otherwise we might call two times.\r\n                                this.forceDelivery();\r\n                                this._changeDelayer.uri = event.document.uri.toString();\r\n                            }\r\n                            this._changeDelayer.delayer.trigger(() => {\r\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\r\n                            });\r\n                        }\r\n                        else {\r\n                            this._changeDelayer = {\r\n                                uri: event.document.uri.toString(),\r\n                                delayer: new async_1.Delayer(200)\r\n                            };\r\n                            this._changeDelayer.delayer.trigger(() => {\r\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\r\n                            }, -1);\r\n                        }\r\n                    };\r\n                    if (middleware.didChange) {\r\n                        middleware.didChange(event, didChange);\r\n                    }\r\n                    else {\r\n                        didChange(event);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    unregister(id) {\r\n        this._changeData.delete(id);\r\n        if (this._changeData.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    forceDelivery() {\r\n        if (this._forcingDelivery || !this._changeDelayer) {\r\n            return;\r\n        }\r\n        try {\r\n            this._forcingDelivery = true;\r\n            this._changeDelayer.delayer.forceDelivery();\r\n        }\r\n        finally {\r\n            this._forcingDelivery = false;\r\n        }\r\n    }\r\n}\r\nclass WillSaveFeature extends DocumentNotifiactions {\r\n    constructor(client) {\r\n        super(client, vscode_1.workspace.onWillSaveTextDocument, vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, client.clientOptions.middleware.willSave, (willSaveEvent) => client.code2ProtocolConverter.asWillSaveTextDocumentParams(willSaveEvent), (selectors, willSaveEvent) => DocumentNotifiactions.textDocumentFilter(selectors, willSaveEvent.document));\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\r\n        value.willSave = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSave) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: { documentSelector: documentSelector }\r\n            });\r\n        }\r\n    }\r\n}\r\nclass WillSaveWaitUntilFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._selectors = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\r\n        value.willSaveWaitUntil = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSaveWaitUntil) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: { documentSelector: documentSelector }\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = vscode_1.workspace.onWillSaveTextDocument(this.callback, this);\r\n        }\r\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\r\n    }\r\n    callback(event) {\r\n        if (DocumentNotifiactions.textDocumentFilter(this._selectors.values(), event.document)) {\r\n            let middleware = this._client.clientOptions.middleware;\r\n            let willSaveWaitUntil = (event) => {\r\n                return this._client.sendRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, this._client.code2ProtocolConverter.asWillSaveTextDocumentParams(event)).then((edits) => {\r\n                    return this._client.protocol2CodeConverter.asTextEdits(edits);\r\n                });\r\n            };\r\n            event.waitUntil(middleware.willSaveWaitUntil\r\n                ? middleware.willSaveWaitUntil(event, willSaveWaitUntil)\r\n                : willSaveWaitUntil(event));\r\n        }\r\n    }\r\n    unregister(id) {\r\n        this._selectors.delete(id);\r\n        if (this._selectors.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n}\r\nclass DidSaveTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client) {\r\n        super(client, vscode_1.workspace.onDidSaveTextDocument, vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, client.clientOptions.middleware.didSave, (textDocument) => client.code2ProtocolConverter.asSaveTextDocumentParams(textDocument, this._includeText), DocumentNotifiactions.textDocumentFilter);\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').didSave = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.save) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { includeText: !!textDocumentSyncOptions.save.includeText })\r\n            });\r\n        }\r\n    }\r\n    register(method, data) {\r\n        this._includeText = !!data.registerOptions.includeText;\r\n        super.register(method, data);\r\n    }\r\n}\r\nclass FileSystemWatcherFeature {\r\n    constructor(_client, _notifyFileEvent) {\r\n        this._client = _client;\r\n        this._notifyFileEvent = _notifyFileEvent;\r\n        this._watchers = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'didChangeWatchedFiles').dynamicRegistration = true;\r\n    }\r\n    initialize(_capabilities, _documentSelector) {\r\n    }\r\n    register(_method, data) {\r\n        if (!Array.isArray(data.registerOptions.watchers)) {\r\n            return;\r\n        }\r\n        let disposeables = [];\r\n        for (let watcher of data.registerOptions.watchers) {\r\n            if (!Is.string(watcher.globPattern)) {\r\n                continue;\r\n            }\r\n            let watchCreate = true, watchChange = true, watchDelete = true;\r\n            if (watcher.kind !== void 0 && watcher.kind !== null) {\r\n                watchCreate = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Create) !== 0;\r\n                watchChange = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Change) != 0;\r\n                watchDelete = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Delete) != 0;\r\n            }\r\n            let fileSystemWatcher = vscode_1.workspace.createFileSystemWatcher(watcher.globPattern, !watchCreate, !watchChange, !watchDelete);\r\n            this.hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete);\r\n            disposeables.push(fileSystemWatcher);\r\n        }\r\n        this._watchers.set(data.id, disposeables);\r\n    }\r\n    registerRaw(id, fileSystemWatchers) {\r\n        let disposeables = [];\r\n        for (let fileSystemWatcher of fileSystemWatchers) {\r\n            this.hookListeners(fileSystemWatcher, true, true, true, disposeables);\r\n        }\r\n        this._watchers.set(id, disposeables);\r\n    }\r\n    hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete, listeners) {\r\n        if (watchCreate) {\r\n            fileSystemWatcher.onDidCreate((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Created\r\n            }), null, listeners);\r\n        }\r\n        if (watchChange) {\r\n            fileSystemWatcher.onDidChange((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Changed\r\n            }), null, listeners);\r\n        }\r\n        if (watchDelete) {\r\n            fileSystemWatcher.onDidDelete((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Deleted\r\n            }), null, listeners);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposeables = this._watchers.get(id);\r\n        if (disposeables) {\r\n            for (let disposable of disposeables) {\r\n                disposable.dispose();\r\n            }\r\n        }\r\n    }\r\n    dispose() {\r\n        this._watchers.forEach((disposeables) => {\r\n            for (let disposable of disposeables) {\r\n                disposable.dispose();\r\n            }\r\n        });\r\n    }\r\n}\r\nclass TextDocumentFeature {\r\n    constructor(_client, _message) {\r\n        this._client = _client;\r\n        this._message = _message;\r\n        this._providers = new Map();\r\n    }\r\n    get messages() {\r\n        return this._message;\r\n    }\r\n    register(message, data) {\r\n        if (message.method !== this.messages.method) {\r\n            throw new Error(`Register called on wron feature. Requested ${message.method} but reached feature ${this.messages.method}`);\r\n        }\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        let provider = this.registerLanguageProvider(data.registerOptions);\r\n        if (provider) {\r\n            this._providers.set(data.id, provider);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let provider = this._providers.get(id);\r\n        if (provider) {\r\n            provider.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        this._providers.forEach((value) => {\r\n            value.dispose();\r\n        });\r\n    }\r\n}\r\nclass WorkspaceFeature {\r\n    constructor(_client, _message) {\r\n        this._client = _client;\r\n        this._message = _message;\r\n        this._providers = new Map();\r\n    }\r\n    get messages() {\r\n        return this._message;\r\n    }\r\n    register(message, data) {\r\n        if (message.method !== this.messages.method) {\r\n            throw new Error(`Register called on wron feature. Requested ${message.method} but reached feature ${this.messages.method}`);\r\n        }\r\n        let provider = this.registerLanguageProvider(data.registerOptions);\r\n        if (provider) {\r\n            this._providers.set(data.id, provider);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let provider = this._providers.get(id);\r\n        if (provider) {\r\n            provider.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        this._providers.forEach((value) => {\r\n            value.dispose();\r\n        });\r\n    }\r\n}\r\nclass CompletionItemFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CompletionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let completion = ensure(ensure(capabilites, 'textDocument'), 'completion');\r\n        completion.dynamicRegistration = true;\r\n        completion.completionItem = { snippetSupport: true, commitCharactersSupport: true };\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.completionProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.completionProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let triggerCharacters = options.triggerCharacters || [];\r\n        let client = this._client;\r\n        let provideCompletionItems = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CompletionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asCompletionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CompletionRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let resolveCompletionItem = (item, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, client.code2ProtocolConverter.asCompletionItem(item), token).then(client.protocol2CodeConverter.asCompletionItem, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, error);\r\n                return Promise.resolve(item);\r\n            });\r\n        };\r\n        let middleware = this._client.clientOptions.middleware;\r\n        return vscode_1.languages.registerCompletionItemProvider(options.documentSelector, {\r\n            provideCompletionItems: (document, position, token) => {\r\n                return middleware.provideCompletionItem\r\n                    ? middleware.provideCompletionItem(document, position, token, provideCompletionItems)\r\n                    : provideCompletionItems(document, position, token);\r\n            },\r\n            resolveCompletionItem: options.resolveProvider\r\n                ? (item, token) => {\r\n                    return middleware.resolveCompletionItem\r\n                        ? middleware.resolveCompletionItem(item, token, resolveCompletionItem)\r\n                        : resolveCompletionItem(item, token);\r\n                }\r\n                : undefined\r\n        }, ...triggerCharacters);\r\n    }\r\n}\r\nclass HoverFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.HoverRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'hover').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.hoverProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideHover = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.HoverRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asHover, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.HoverRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerHoverProvider(options.documentSelector, {\r\n            provideHover: (document, position, token) => {\r\n                return middleware.provideHover\r\n                    ? middleware.provideHover(document, position, token, provideHover)\r\n                    : provideHover(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass SignatureHelpFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.SignatureHelpRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'signatureHelp').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.signatureHelpProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.signatureHelpProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let providerSignatureHelp = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asSignatureHelp, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        let triggerCharacters = options.triggerCharacters || [];\r\n        return vscode_1.languages.registerSignatureHelpProvider(options.documentSelector, {\r\n            provideSignatureHelp: (document, position, token) => {\r\n                return middleware.provideSignatureHelp\r\n                    ? middleware.provideSignatureHelp(document, position, token, providerSignatureHelp)\r\n                    : providerSignatureHelp(document, position, token);\r\n            }\r\n        }, ...triggerCharacters);\r\n    }\r\n}\r\nclass DefinitionFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DefinitionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'definition').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.definitionProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDefinition = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDefinitionProvider(options.documentSelector, {\r\n            provideDefinition: (document, position, token) => {\r\n                return middleware.provideDefinition\r\n                    ? middleware.provideDefinition(document, position, token, provideDefinition)\r\n                    : provideDefinition(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass ReferencesFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.ReferencesRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'references').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.referencesProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let providerReferences = (document, position, options, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, client.code2ProtocolConverter.asReferenceParams(document, position, options), token).then(client.protocol2CodeConverter.asReferences, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerReferenceProvider(options.documentSelector, {\r\n            provideReferences: (document, position, options, token) => {\r\n                return middleware.provideReferences\r\n                    ? middleware.provideReferences(document, position, options, token, providerReferences)\r\n                    : providerReferences(document, position, options, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentHighlightFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentHighlightRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'documentHighlight').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentHighlightProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentHighlights = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDocumentHighlights, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentHighlightProvider(options.documentSelector, {\r\n            provideDocumentHighlights: (document, position, token) => {\r\n                return middleware.provideDocumentHighlights\r\n                    ? middleware.provideDocumentHighlights(document, position, token, provideDocumentHighlights)\r\n                    : provideDocumentHighlights(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentSymbolFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentSymbolRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'documentSymbol').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentSymbolProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentSymbols = (document, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, client.code2ProtocolConverter.asDocumentSymbolParams(document), token).then(client.protocol2CodeConverter.asSymbolInformations, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentSymbolProvider(options.documentSelector, {\r\n            provideDocumentSymbols: (document, token) => {\r\n                return middleware.provideDocumentSymbols\r\n                    ? middleware.provideDocumentSymbols(document, token, provideDocumentSymbols)\r\n                    : provideDocumentSymbols(document, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass WorkspaceSymbolFeature extends WorkspaceFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'workspace'), 'symbol').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities) {\r\n        if (!capabilities.workspaceSymbolProvider) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: undefined\r\n        });\r\n    }\r\n    registerLanguageProvider(_options) {\r\n        let client = this._client;\r\n        let provideWorkspaceSymbols = (query, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, { query }, token).then(client.protocol2CodeConverter.asSymbolInformations, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerWorkspaceSymbolProvider({\r\n            provideWorkspaceSymbols: (query, token) => {\r\n                return middleware.provideWorkspaceSymbols\r\n                    ? middleware.provideWorkspaceSymbols(query, token, provideWorkspaceSymbols)\r\n                    : provideWorkspaceSymbols(query, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass CodeActionFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CodeActionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'codeAction').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.codeActionProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideCodeActions = (document, range, context, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                range: client.code2ProtocolConverter.asRange(range),\r\n                context: client.code2ProtocolConverter.asCodeActionContext(context)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, params, token).then(client.protocol2CodeConverter.asCommands, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerCodeActionsProvider(options.documentSelector, {\r\n            provideCodeActions: (document, range, context, token) => {\r\n                return middleware.provideCodeActions\r\n                    ? middleware.provideCodeActions(document, range, context, token, provideCodeActions)\r\n                    : provideCodeActions(document, range, context, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass CodeLensFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CodeLensRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'codeLens').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.codeLensProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.codeLensProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideCodeLenses = (document, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, client.code2ProtocolConverter.asCodeLensParams(document), token).then(client.protocol2CodeConverter.asCodeLenses, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let resolveCodeLens = (codeLens, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, client.code2ProtocolConverter.asCodeLens(codeLens), token).then(client.protocol2CodeConverter.asCodeLens, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, error);\r\n                return codeLens;\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerCodeLensProvider(options.documentSelector, {\r\n            provideCodeLenses: (document, token) => {\r\n                return middleware.provideCodeLenses\r\n                    ? middleware.provideCodeLenses(document, token, provideCodeLenses)\r\n                    : provideCodeLenses(document, token);\r\n            },\r\n            resolveCodeLens: (options.resolveProvider)\r\n                ? (codeLens, token) => {\r\n                    return middleware.resolveCodeLens\r\n                        ? middleware.resolveCodeLens(codeLens, token, resolveCodeLens)\r\n                        : resolveCodeLens(codeLens, token);\r\n                }\r\n                : undefined\r\n        });\r\n    }\r\n}\r\nclass DocumentFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'formatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentFormattingProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentFormattingEdits = (document, options, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentFormattingEditProvider(options.documentSelector, {\r\n            provideDocumentFormattingEdits: (document, options, token) => {\r\n                return middleware.provideDocumentFormattingEdits\r\n                    ? middleware.provideDocumentFormattingEdits(document, options, token, provideDocumentFormattingEdits)\r\n                    : provideDocumentFormattingEdits(document, options, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentRangeFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'rangeFormatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentRangeFormattingProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentRangeFormattingEdits = (document, range, options, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                range: client.code2ProtocolConverter.asRange(range),\r\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentRangeFormattingEditProvider(options.documentSelector, {\r\n            provideDocumentRangeFormattingEdits: (document, range, options, token) => {\r\n                return middleware.provideDocumentRangeFormattingEdits\r\n                    ? middleware.provideDocumentRangeFormattingEdits(document, range, options, token, provideDocumentRangeFormattingEdits)\r\n                    : provideDocumentRangeFormattingEdits(document, range, options, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentOnTypeFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'onTypeFormatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentOnTypeFormattingProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.documentOnTypeFormattingProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let moreTriggerCharacter = options.moreTriggerCharacter || [];\r\n        let provideOnTypeFormattingEdits = (document, position, ch, options, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                position: client.code2ProtocolConverter.asPosition(position),\r\n                ch: ch,\r\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerOnTypeFormattingEditProvider(options.documentSelector, {\r\n            provideOnTypeFormattingEdits: (document, position, ch, options, token) => {\r\n                return middleware.provideOnTypeFormattingEdits\r\n                    ? middleware.provideOnTypeFormattingEdits(document, position, ch, options, token, provideOnTypeFormattingEdits)\r\n                    : provideOnTypeFormattingEdits(document, position, ch, options, token);\r\n            }\r\n        }, options.firstTriggerCharacter, ...moreTriggerCharacter);\r\n    }\r\n}\r\nclass RenameFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.RenameRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'rename').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.renameProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideRenameEdits = (document, position, newName, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                position: client.code2ProtocolConverter.asPosition(position),\r\n                newName: newName\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.RenameRequest.type, params, token).then(client.protocol2CodeConverter.asWorkspaceEdit, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.RenameRequest.type, error);\r\n                Promise.reject(new Error(error.message));\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerRenameProvider(options.documentSelector, {\r\n            provideRenameEdits: (document, position, newName, token) => {\r\n                return middleware.provideRenameEdits\r\n                    ? middleware.provideRenameEdits(document, position, newName, token, provideRenameEdits)\r\n                    : provideRenameEdits(document, position, newName, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentLinkFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentLinkRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'documentLink').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentLinkProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.documentLinkProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentLinks = (document, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, client.code2ProtocolConverter.asDocumentLinkParams(document), token).then(client.protocol2CodeConverter.asDocumentLinks, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, error);\r\n                Promise.resolve(new Error(error.message));\r\n            });\r\n        };\r\n        let resolveDocumentLink = (link, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, client.code2ProtocolConverter.asDocumentLink(link), token).then(client.protocol2CodeConverter.asDocumentLink, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, error);\r\n                Promise.resolve(new Error(error.message));\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentLinkProvider(options.documentSelector, {\r\n            provideDocumentLinks: (document, token) => {\r\n                return middleware.provideDocumentLinks\r\n                    ? middleware.provideDocumentLinks(document, token, provideDocumentLinks)\r\n                    : provideDocumentLinks(document, token);\r\n            },\r\n            resolveDocumentLink: options.resolveProvider\r\n                ? (link, token) => {\r\n                    return middleware.resolveDocumentLink\r\n                        ? middleware.resolveDocumentLink(link, token, resolveDocumentLink)\r\n                        : resolveDocumentLink(link, token);\r\n                }\r\n                : undefined\r\n        });\r\n    }\r\n}\r\nclass ConfigurationFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._listeners = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'didChangeConfiguration').dynamicRegistration = true;\r\n    }\r\n    initialize() {\r\n        let section = this._client.clientOptions.synchronize.configurationSection;\r\n        if (section !== void 0) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: {\r\n                    section: section\r\n                }\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        let disposable = vscode_1.workspace.onDidChangeConfiguration(() => {\r\n            this.onDidChangeConfiguration(data.registerOptions.section);\r\n        });\r\n        this._listeners.set(data.id, disposable);\r\n        if (data.registerOptions.section !== void 0) {\r\n            this.onDidChangeConfiguration(data.registerOptions.section);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposable = this._listeners.get(id);\r\n        if (disposable) {\r\n            this._listeners.delete(id);\r\n            disposable.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        for (let disposable of this._listeners.values()) {\r\n            disposable.dispose();\r\n        }\r\n    }\r\n    onDidChangeConfiguration(configurationSection) {\r\n        let sections;\r\n        if (Is.string(configurationSection)) {\r\n            sections = [configurationSection];\r\n        }\r\n        else {\r\n            sections = configurationSection;\r\n        }\r\n        let didChangeConfiguration = (sections) => {\r\n            if (sections === void 0) {\r\n                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: null });\r\n                return;\r\n            }\r\n            this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: this.extractSettingsInformation(sections) });\r\n        };\r\n        let middleware = this.getMiddleware();\r\n        middleware\r\n            ? middleware(sections, didChangeConfiguration)\r\n            : didChangeConfiguration(sections);\r\n    }\r\n    extractSettingsInformation(keys) {\r\n        function ensurePath(config, path) {\r\n            let current = config;\r\n            for (let i = 0; i < path.length - 1; i++) {\r\n                let obj = current[path[i]];\r\n                if (!obj) {\r\n                    obj = Object.create(null);\r\n                    current[path[i]] = obj;\r\n                }\r\n                current = obj;\r\n            }\r\n            return current;\r\n        }\r\n        let resource = this._client.clientOptions.workspaceFolder\r\n            ? this._client.clientOptions.workspaceFolder.uri\r\n            : undefined;\r\n        let result = Object.create(null);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            let key = keys[i];\r\n            let index = key.indexOf('.');\r\n            let config = null;\r\n            if (index >= 0) {\r\n                config = vscode_1.workspace.getConfiguration(key.substr(0, index), resource).get(key.substr(index + 1));\r\n            }\r\n            else {\r\n                config = vscode_1.workspace.getConfiguration(key, resource);\r\n            }\r\n            if (config) {\r\n                let path = keys[i].split('.');\r\n                ensurePath(result, path)[path[path.length - 1]] = config;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    getMiddleware() {\r\n        let middleware = this._client.clientOptions.middleware;\r\n        if (middleware.workspace && middleware.workspace.didChangeConfiguration) {\r\n            return middleware.workspace.didChangeConfiguration;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nclass ExecuteCommandFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._commands = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.ExecuteCommandRequest.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'executeCommand').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities) {\r\n        if (!capabilities.executeCommandProvider) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, capabilities.executeCommandProvider)\r\n        });\r\n    }\r\n    register(_message, data) {\r\n        let client = this._client;\r\n        if (data.registerOptions.commands) {\r\n            let disposeables = [];\r\n            for (const command of data.registerOptions.commands) {\r\n                disposeables.push(vscode_1.commands.registerCommand(command, (...args) => {\r\n                    let params = {\r\n                        command,\r\n                        arguments: args\r\n                    };\r\n                    client.sendRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, params).then(undefined, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, error);\r\n                    });\r\n                }));\r\n            }\r\n            this._commands.set(data.id, disposeables);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposeables = this._commands.get(id);\r\n        if (disposeables) {\r\n            disposeables.forEach(disposable => disposable.dispose());\r\n        }\r\n    }\r\n    dispose() {\r\n        this._commands.forEach((value) => {\r\n            value.forEach(disposable => disposable.dispose());\r\n        });\r\n    }\r\n}\r\nvar MessageTransports;\r\n(function (MessageTransports) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && vscode_languageserver_protocol_1.MessageReader.is(value.reader) && vscode_languageserver_protocol_1.MessageWriter.is(value.writer);\r\n    }\r\n    MessageTransports.is = is;\r\n})(MessageTransports = exports.MessageTransports || (exports.MessageTransports = {}));\r\nclass BaseLanguageClient {\r\n    constructor(id, name, clientOptions) {\r\n        this._features = [];\r\n        this._method2Message = new Map();\r\n        this._dynamicFeatures = new Map();\r\n        this._id = id;\r\n        this._name = name;\r\n        clientOptions = clientOptions || {};\r\n        this._clientOptions = {\r\n            documentSelector: clientOptions.documentSelector || [],\r\n            synchronize: clientOptions.synchronize || {},\r\n            diagnosticCollectionName: clientOptions.diagnosticCollectionName,\r\n            outputChannelName: clientOptions.outputChannelName || this._name,\r\n            revealOutputChannelOn: clientOptions.revealOutputChannelOn || RevealOutputChannelOn.Error,\r\n            stdioEncoding: clientOptions.stdioEncoding || 'utf8',\r\n            initializationOptions: clientOptions.initializationOptions,\r\n            initializationFailedHandler: clientOptions.initializationFailedHandler,\r\n            errorHandler: clientOptions.errorHandler || new DefaultErrorHandler(this._name),\r\n            middleware: clientOptions.middleware || {},\r\n            uriConverters: clientOptions.uriConverters,\r\n            workspaceFolder: clientOptions.workspaceFolder\r\n        };\r\n        this._clientOptions.synchronize = this._clientOptions.synchronize || {};\r\n        this.state = ClientState.Initial;\r\n        this._connectionPromise = undefined;\r\n        this._resolvedConnection = undefined;\r\n        this._initializeResult = undefined;\r\n        if (clientOptions.outputChannel) {\r\n            this._outputChannel = clientOptions.outputChannel;\r\n            this._disposeOutputChannel = false;\r\n        }\r\n        else {\r\n            this._outputChannel = undefined;\r\n            this._disposeOutputChannel = true;\r\n        }\r\n        this._listeners = undefined;\r\n        this._providers = undefined;\r\n        this._diagnostics = undefined;\r\n        this._fileEvents = [];\r\n        this._fileEventDelayer = new async_1.Delayer(250);\r\n        this._onReady = new Promise((resolve, reject) => {\r\n            this._onReadyCallbacks = { resolve, reject };\r\n        });\r\n        this._telemetryEmitter = new vscode_languageserver_protocol_1.Emitter();\r\n        this._stateChangeEmitter = new vscode_languageserver_protocol_1.Emitter();\r\n        this._tracer = {\r\n            log: (message, data) => {\r\n                this.logTrace(message, data);\r\n            }\r\n        };\r\n        this._c2p = c2p.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.code2Protocol : undefined);\r\n        this._p2c = p2c.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.protocol2Code : undefined);\r\n        this.registerBuiltinFeatures();\r\n    }\r\n    get state() {\r\n        return this._state;\r\n    }\r\n    set state(value) {\r\n        let oldState = this.getPublicState();\r\n        this._state = value;\r\n        let newState = this.getPublicState();\r\n        if (newState !== oldState) {\r\n            this._stateChangeEmitter.fire({ oldState, newState });\r\n        }\r\n    }\r\n    getPublicState() {\r\n        if (this.state === ClientState.Running) {\r\n            return State.Running;\r\n        }\r\n        else {\r\n            return State.Stopped;\r\n        }\r\n    }\r\n    get initializeResult() {\r\n        return this._initializeResult;\r\n    }\r\n    sendRequest(type, ...params) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        this.forceDocumentSync();\r\n        try {\r\n            return this._resolvedConnection.sendRequest(type, ...params);\r\n        }\r\n        catch (error) {\r\n            this.error(`Sending request ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    onRequest(type, handler) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        try {\r\n            this._resolvedConnection.onRequest(type, handler);\r\n        }\r\n        catch (error) {\r\n            this.error(`Registering request handler ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    sendNotification(type, params) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        this.forceDocumentSync();\r\n        try {\r\n            this._resolvedConnection.sendNotification(type, params);\r\n        }\r\n        catch (error) {\r\n            this.error(`Sending notification ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    onNotification(type, handler) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        try {\r\n            this._resolvedConnection.onNotification(type, handler);\r\n        }\r\n        catch (error) {\r\n            this.error(`Registering notification handler ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    get clientOptions() {\r\n        return this._clientOptions;\r\n    }\r\n    get protocol2CodeConverter() {\r\n        return this._p2c;\r\n    }\r\n    get code2ProtocolConverter() {\r\n        return this._c2p;\r\n    }\r\n    get onTelemetry() {\r\n        return this._telemetryEmitter.event;\r\n    }\r\n    get onDidChangeState() {\r\n        return this._stateChangeEmitter.event;\r\n    }\r\n    get outputChannel() {\r\n        if (!this._outputChannel) {\r\n            this._outputChannel = vscode_1.window.createOutputChannel(this._clientOptions.outputChannelName ? this._clientOptions.outputChannelName : this._name);\r\n        }\r\n        return this._outputChannel;\r\n    }\r\n    get diagnostics() {\r\n        return this._diagnostics;\r\n    }\r\n    createDefaultErrorHandler() {\r\n        return new DefaultErrorHandler(this._name);\r\n    }\r\n    set trace(value) {\r\n        this._trace = value;\r\n        this.onReady().then(() => {\r\n            this.resolveConnection().then((connection) => {\r\n                connection.trace(value, this._tracer);\r\n            });\r\n        }, () => {\r\n        });\r\n    }\r\n    data2String(data) {\r\n        if (data instanceof vscode_languageserver_protocol_1.ResponseError) {\r\n            const responseError = data;\r\n            return `  Message: ${responseError.message}\\n  Code: ${responseError.code} ${responseError.data ? '\\n' + responseError.data.toString() : ''}`;\r\n        }\r\n        if (data instanceof Error) {\r\n            if (Is.string(data.stack)) {\r\n                return data.stack;\r\n            }\r\n            return data.message;\r\n        }\r\n        if (Is.string(data)) {\r\n            return data;\r\n        }\r\n        return data.toString();\r\n    }\r\n    info(message, data) {\r\n        this.outputChannel.appendLine(`[Info  - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Info) {\r\n            this.outputChannel.show(true);\r\n        }\r\n    }\r\n    warn(message, data) {\r\n        this.outputChannel.appendLine(`[Warn  - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Warn) {\r\n            this.outputChannel.show(true);\r\n        }\r\n    }\r\n    error(message, data) {\r\n        this.outputChannel.appendLine(`[Error - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Error) {\r\n            this.outputChannel.show(true);\r\n        }\r\n    }\r\n    logTrace(message, data) {\r\n        this.outputChannel.appendLine(`[Trace - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n    }\r\n    needsStart() {\r\n        return this.state === ClientState.Initial || this.state === ClientState.Stopping || this.state === ClientState.Stopped;\r\n    }\r\n    needsStop() {\r\n        return this.state === ClientState.Starting || this.state === ClientState.Running;\r\n    }\r\n    onReady() {\r\n        return this._onReady;\r\n    }\r\n    isConnectionActive() {\r\n        return this.state === ClientState.Running && !!this._resolvedConnection;\r\n    }\r\n    start() {\r\n        this._listeners = [];\r\n        this._providers = [];\r\n        // If we restart then the diagnostics collection is reused.\r\n        if (!this._diagnostics) {\r\n            this._diagnostics = this._clientOptions.diagnosticCollectionName\r\n                ? vscode_1.languages.createDiagnosticCollection(this._clientOptions.diagnosticCollectionName)\r\n                : vscode_1.languages.createDiagnosticCollection();\r\n        }\r\n        this.state = ClientState.Starting;\r\n        this.resolveConnection().then((connection) => {\r\n            connection.onLogMessage((message) => {\r\n                switch (message.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        this.error(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        this.warn(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        this.info(message.message);\r\n                        break;\r\n                    default:\r\n                        this.outputChannel.appendLine(message.message);\r\n                }\r\n            });\r\n            connection.onShowMessage((message) => {\r\n                switch (message.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        vscode_1.window.showErrorMessage(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        vscode_1.window.showWarningMessage(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        vscode_1.window.showInformationMessage(message.message);\r\n                        break;\r\n                    default:\r\n                        vscode_1.window.showInformationMessage(message.message);\r\n                }\r\n            });\r\n            connection.onRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, (params) => {\r\n                let messageFunc;\r\n                switch (params.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        messageFunc = vscode_1.window.showErrorMessage;\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        messageFunc = vscode_1.window.showWarningMessage;\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        messageFunc = vscode_1.window.showInformationMessage;\r\n                        break;\r\n                    default:\r\n                        messageFunc = vscode_1.window.showInformationMessage;\r\n                }\r\n                let actions = params.actions || [];\r\n                return messageFunc(params.message, ...actions);\r\n            });\r\n            connection.onTelemetry((data) => {\r\n                this._telemetryEmitter.fire(data);\r\n            });\r\n            connection.listen();\r\n            // Error is handled in the intialize call.\r\n            this.initialize(connection).then(undefined, () => { });\r\n        }, (error) => {\r\n            this.state = ClientState.StartFailed;\r\n            this._onReadyCallbacks.reject(error);\r\n            this.error('Starting client failed', error);\r\n            vscode_1.window.showErrorMessage(`Couldn't start client ${this._name}`);\r\n        });\r\n        return new vscode_1.Disposable(() => {\r\n            if (this.needsStop()) {\r\n                this.stop();\r\n            }\r\n        });\r\n    }\r\n    resolveConnection() {\r\n        if (!this._connectionPromise) {\r\n            this._connectionPromise = this.createConnection();\r\n        }\r\n        return this._connectionPromise;\r\n    }\r\n    initialize(connection) {\r\n        this.refreshTrace(connection, false);\r\n        let initOption = this._clientOptions.initializationOptions;\r\n        let rootPath = this._clientOptions.workspaceFolder\r\n            ? this._clientOptions.workspaceFolder.uri.fsPath\r\n            : vscode_1.workspace.rootPath;\r\n        let initParams = {\r\n            processId: process.pid,\r\n            rootPath: rootPath ? rootPath : null,\r\n            rootUri: rootPath ? this._c2p.asUri(vscode_1.Uri.file(rootPath)) : null,\r\n            capabilities: this.computeClientCapabilities(),\r\n            initializationOptions: Is.func(initOption) ? initOption() : initOption,\r\n            trace: vscode_languageserver_protocol_1.Trace.toString(this._trace)\r\n        };\r\n        this.fillInitializeParams(initParams);\r\n        return connection.initialize(initParams).then((result) => {\r\n            this._resolvedConnection = connection;\r\n            this._initializeResult = result;\r\n            this.state = ClientState.Running;\r\n            let textDocumentSyncOptions = undefined;\r\n            if (Is.number(result.capabilities.textDocumentSync) && result.capabilities.textDocumentSync !== vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\r\n                textDocumentSyncOptions = {\r\n                    openClose: true,\r\n                    change: result.capabilities.textDocumentSync,\r\n                    save: {\r\n                        includeText: false\r\n                    }\r\n                };\r\n            }\r\n            else if (result.capabilities.textDocumentSync !== void 0 && result.capabilities.textDocumentSync !== null) {\r\n                textDocumentSyncOptions = result.capabilities.textDocumentSync;\r\n            }\r\n            this._capabilities = Object.assign({}, result.capabilities, { resolvedTextDocumentSync: textDocumentSyncOptions });\r\n            connection.onDiagnostics(params => this.handleDiagnostics(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params => this.handleRegistrationRequest(params));\r\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\r\n            connection.onRequest('client/registerFeature', params => this.handleRegistrationRequest(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params => this.handleUnregistrationRequest(params));\r\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\r\n            connection.onRequest('client/unregisterFeature', params => this.handleUnregistrationRequest(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params => this.handleApplyWorkspaceEdit(params));\r\n            connection.sendNotification(vscode_languageserver_protocol_1.InitializedNotification.type, {});\r\n            this.hookFileEvents(connection);\r\n            this.hookConfigurationChanged(connection);\r\n            this.initializeFeatures(connection);\r\n            this._onReadyCallbacks.resolve();\r\n            return result;\r\n        }, (error) => {\r\n            if (this._clientOptions.initializationFailedHandler) {\r\n                if (this._clientOptions.initializationFailedHandler(error)) {\r\n                    this.initialize(connection);\r\n                }\r\n                else {\r\n                    this.stop();\r\n                    this._onReadyCallbacks.reject(error);\r\n                }\r\n            }\r\n            else if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.data && error.data.retry) {\r\n                vscode_1.window.showErrorMessage(error.message, { title: 'Retry', id: \"retry\" }).then(item => {\r\n                    if (item && item.id === 'retry') {\r\n                        this.initialize(connection);\r\n                    }\r\n                    else {\r\n                        this.stop();\r\n                        this._onReadyCallbacks.reject(error);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (error && error.message) {\r\n                    vscode_1.window.showErrorMessage(error.message);\r\n                }\r\n                this.error('Server initialization failed.', error);\r\n                this.stop();\r\n                this._onReadyCallbacks.reject(error);\r\n            }\r\n        });\r\n    }\r\n    stop() {\r\n        this._initializeResult = undefined;\r\n        if (!this._connectionPromise) {\r\n            this.state = ClientState.Stopped;\r\n            return Promise.resolve();\r\n        }\r\n        this.state = ClientState.Stopping;\r\n        this.cleanUp();\r\n        // unkook listeners\r\n        return this.resolveConnection().then(connection => {\r\n            return connection.shutdown().then(() => {\r\n                connection.exit();\r\n                connection.dispose();\r\n                this.state = ClientState.Stopped;\r\n                this._connectionPromise = undefined;\r\n                this._resolvedConnection = undefined;\r\n                if (this._outputChannel) {\r\n                    this._outputChannel.clear();\r\n                }\r\n            });\r\n        });\r\n    }\r\n    cleanUp(restart = false) {\r\n        if (this._listeners) {\r\n            this._listeners.forEach(listener => listener.dispose());\r\n            this._listeners = undefined;\r\n        }\r\n        if (this._providers) {\r\n            this._providers.forEach(provider => provider.dispose());\r\n            this._providers = undefined;\r\n        }\r\n        for (let handler of this._dynamicFeatures.values()) {\r\n            handler.dispose();\r\n        }\r\n        if (this._outputChannel && this._disposeOutputChannel) {\r\n            this._outputChannel.dispose();\r\n        }\r\n        if (!restart && this._diagnostics) {\r\n            this._diagnostics.dispose();\r\n            this._diagnostics = undefined;\r\n        }\r\n    }\r\n    notifyFileEvent(event) {\r\n        this._fileEvents.push(event);\r\n        this._fileEventDelayer.trigger(() => {\r\n            this.onReady().then(() => {\r\n                this.resolveConnection().then(connection => {\r\n                    if (this.isConnectionActive()) {\r\n                        connection.didChangeWatchedFiles({ changes: this._fileEvents });\r\n                    }\r\n                    this._fileEvents = [];\r\n                });\r\n            }, (error) => {\r\n                this.error(`Notify file events failed.`, error);\r\n            });\r\n        });\r\n    }\r\n    forceDocumentSync() {\r\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type.method).forceDelivery();\r\n    }\r\n    handleDiagnostics(params) {\r\n        if (!this._diagnostics) {\r\n            return;\r\n        }\r\n        let uri = this._p2c.asUri(params.uri);\r\n        let diagnostics = this._p2c.asDiagnostics(params.diagnostics);\r\n        this._diagnostics.set(uri, diagnostics);\r\n    }\r\n    createConnection() {\r\n        let errorHandler = (error, message, count) => {\r\n            this.handleConnectionError(error, message, count);\r\n        };\r\n        let closeHandler = () => {\r\n            this.handleConnectionClosed();\r\n        };\r\n        return this.createMessageTransports(this._clientOptions.stdioEncoding || 'utf8').then((transports) => {\r\n            return createConnection(transports.reader, transports.writer, errorHandler, closeHandler);\r\n        });\r\n    }\r\n    handleConnectionClosed() {\r\n        // Check whether this is a normal shutdown in progress or the client stopped normally.\r\n        if (this.state === ClientState.Stopping || this.state === ClientState.Stopped) {\r\n            return;\r\n        }\r\n        if (this._resolvedConnection) {\r\n            this._resolvedConnection.dispose();\r\n        }\r\n        this._connectionPromise = undefined;\r\n        this._resolvedConnection = undefined;\r\n        let action = this._clientOptions.errorHandler.closed();\r\n        if (action === CloseAction.DoNotRestart) {\r\n            this.error('Connection to server got closed. Server will not be restarted.');\r\n            this.state = ClientState.Stopped;\r\n            this.cleanUp(false);\r\n        }\r\n        else if (action === CloseAction.Restart) {\r\n            this.info('Connection to server got closed. Server will restart.');\r\n            this.cleanUp(true);\r\n            this.state = ClientState.Initial;\r\n            this.start();\r\n        }\r\n    }\r\n    handleConnectionError(error, message, count) {\r\n        let action = this._clientOptions.errorHandler.error(error, message, count);\r\n        if (action === ErrorAction.Shutdown) {\r\n            this.error('Connection to server is erroring. Shutting down server.');\r\n            this.stop();\r\n        }\r\n    }\r\n    hookConfigurationChanged(connection) {\r\n        vscode_1.workspace.onDidChangeConfiguration(() => {\r\n            this.refreshTrace(connection, true);\r\n        });\r\n    }\r\n    refreshTrace(connection, sendNotification = false) {\r\n        let config = vscode_1.workspace.getConfiguration(this._id);\r\n        let trace = vscode_languageserver_protocol_1.Trace.Off;\r\n        if (config) {\r\n            trace = vscode_languageserver_protocol_1.Trace.fromString(config.get('trace.server', 'off'));\r\n        }\r\n        this._trace = trace;\r\n        connection.trace(this._trace, this._tracer, sendNotification);\r\n    }\r\n    hookFileEvents(_connection) {\r\n        let fileEvents = this._clientOptions.synchronize.fileEvents;\r\n        if (!fileEvents) {\r\n            return;\r\n        }\r\n        let watchers;\r\n        if (Is.array(fileEvents)) {\r\n            watchers = fileEvents;\r\n        }\r\n        else {\r\n            watchers = [fileEvents];\r\n        }\r\n        if (!watchers) {\r\n            return;\r\n        }\r\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type.method).registerRaw(UUID.generateUuid(), watchers);\r\n    }\r\n    registerFeatures(features) {\r\n        for (let feature of features) {\r\n            this.registerFeature(feature);\r\n        }\r\n    }\r\n    registerFeature(feature) {\r\n        this._features.push(feature);\r\n        if (DynamicFeature.is(feature)) {\r\n            let messages = feature.messages;\r\n            if (Array.isArray(messages)) {\r\n                for (let message of messages) {\r\n                    this._method2Message.set(message.method, message);\r\n                    this._dynamicFeatures.set(message.method, feature);\r\n                }\r\n            }\r\n            else {\r\n                this._method2Message.set(messages.method, messages);\r\n                this._dynamicFeatures.set(messages.method, feature);\r\n            }\r\n        }\r\n    }\r\n    registerBuiltinFeatures() {\r\n        const syncedDocuments = new Map();\r\n        this.registerFeature(new ConfigurationFeature(this));\r\n        this.registerFeature(new DidOpenTextDocumentFeature(this, syncedDocuments));\r\n        this.registerFeature(new DidChangeTextDocumentFeature(this));\r\n        this.registerFeature(new WillSaveFeature(this));\r\n        this.registerFeature(new WillSaveWaitUntilFeature(this));\r\n        this.registerFeature(new DidSaveTextDocumentFeature(this));\r\n        this.registerFeature(new DidCloseTextDocumentFeature(this, syncedDocuments));\r\n        this.registerFeature(new FileSystemWatcherFeature(this, (event) => this.notifyFileEvent(event)));\r\n        this.registerFeature(new CompletionItemFeature(this));\r\n        this.registerFeature(new HoverFeature(this));\r\n        this.registerFeature(new SignatureHelpFeature(this));\r\n        this.registerFeature(new DefinitionFeature(this));\r\n        this.registerFeature(new ReferencesFeature(this));\r\n        this.registerFeature(new DocumentHighlightFeature(this));\r\n        this.registerFeature(new DocumentSymbolFeature(this));\r\n        this.registerFeature(new WorkspaceSymbolFeature(this));\r\n        this.registerFeature(new CodeActionFeature(this));\r\n        this.registerFeature(new CodeLensFeature(this));\r\n        this.registerFeature(new DocumentFormattingFeature(this));\r\n        this.registerFeature(new DocumentRangeFormattingFeature(this));\r\n        this.registerFeature(new DocumentOnTypeFormattingFeature(this));\r\n        this.registerFeature(new RenameFeature(this));\r\n        this.registerFeature(new DocumentLinkFeature(this));\r\n        this.registerFeature(new ExecuteCommandFeature(this));\r\n    }\r\n    fillInitializeParams(params) {\r\n        for (let feature of this._features) {\r\n            if (Is.func(feature.fillInitializeParams)) {\r\n                feature.fillInitializeParams(params);\r\n            }\r\n        }\r\n    }\r\n    computeClientCapabilities() {\r\n        let result = {};\r\n        ensure(result, 'workspace').applyEdit = true;\r\n        for (let feature of this._features) {\r\n            feature.fillClientCapabilities(result);\r\n        }\r\n        return result;\r\n    }\r\n    initializeFeatures(_connection) {\r\n        let documentSelector = this._clientOptions.documentSelector;\r\n        for (let feature of this._features) {\r\n            feature.initialize(this._capabilities, documentSelector);\r\n        }\r\n    }\r\n    handleRegistrationRequest(params) {\r\n        return new Promise((resolve, reject) => {\r\n            for (let registration of params.registrations) {\r\n                const feature = this._dynamicFeatures.get(registration.method);\r\n                if (!feature) {\r\n                    reject(new Error(`No feature implementation for ${registration.method} found. Registration failed.`));\r\n                    return;\r\n                }\r\n                const options = registration.registerOptions || {};\r\n                options.documentSelector = options.documentSelector || this._clientOptions.documentSelector;\r\n                const data = {\r\n                    id: registration.id,\r\n                    registerOptions: options\r\n                };\r\n                feature.register(this._method2Message.get(registration.method), data);\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n    handleUnregistrationRequest(params) {\r\n        return new Promise((resolve, reject) => {\r\n            for (let unregistration of params.unregisterations) {\r\n                const feature = this._dynamicFeatures.get(unregistration.method);\r\n                if (!feature) {\r\n                    reject(new Error(`No feature implementation for ${unregistration.method} found. Unregistration failed.`));\r\n                    return;\r\n                }\r\n                feature.unregister(unregistration.id);\r\n            }\r\n            ;\r\n            resolve();\r\n        });\r\n    }\r\n    handleApplyWorkspaceEdit(params) {\r\n        // This is some sort of workaround since the version check should be done by VS Code in the Workspace.applyEdit.\r\n        // However doing it here adds some safety since the server can lag more behind then an extension.\r\n        let workspaceEdit = params.edit;\r\n        let openTextDocuments = new Map();\r\n        vscode_1.workspace.textDocuments.forEach((document) => openTextDocuments.set(document.uri.toString(), document));\r\n        let versionMismatch = false;\r\n        if (workspaceEdit.documentChanges) {\r\n            for (const change of workspaceEdit.documentChanges) {\r\n                if (change.textDocument.version && change.textDocument.version >= 0) {\r\n                    let textDocument = openTextDocuments.get(change.textDocument.uri);\r\n                    if (textDocument && textDocument.version !== change.textDocument.version) {\r\n                        versionMismatch = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (versionMismatch) {\r\n            return Promise.resolve({ applied: false });\r\n        }\r\n        return vscode_1.workspace.applyEdit(this._p2c.asWorkspaceEdit(params.edit)).then((value) => { return { applied: value }; });\r\n    }\r\n    ;\r\n    logFailedRequest(type, error) {\r\n        // If we get a request cancel don't log anything.\r\n        if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.code === vscode_languageserver_protocol_1.ErrorCodes.RequestCancelled) {\r\n            return;\r\n        }\r\n        this.error(`Request ${type.method} failed.`, error);\r\n    }\r\n}\r\nexports.BaseLanguageClient = BaseLanguageClient;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path = require(\"path\");\r\nconst os = require(\"os\");\r\nconst net = require(\"net\");\r\nconst cp = require(\"child_process\");\r\nfunction makeRandomHexString(length) {\r\n    let chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\n    let result = '';\r\n    for (let i = 0; i < length; i++) {\r\n        let idx = Math.floor(chars.length * Math.random());\r\n        result += chars[idx];\r\n    }\r\n    return result;\r\n}\r\nfunction generatePipeName() {\r\n    var randomName = 'vscode-' + makeRandomHexString(40);\r\n    if (process.platform === 'win32') {\r\n        return '\\\\\\\\.\\\\pipe\\\\' + randomName + '-sock';\r\n    }\r\n    // Mac/Unix: use socket file\r\n    return path.join(os.tmpdir(), randomName + '.sock');\r\n}\r\nfunction generatePatchedEnv(env, stdInPipeName, stdOutPipeName) {\r\n    // Set the two unique pipe names and the electron flag as process env\r\n    var newEnv = {};\r\n    for (var key in env) {\r\n        newEnv[key] = env[key];\r\n    }\r\n    newEnv['STDIN_PIPE_NAME'] = stdInPipeName;\r\n    newEnv['STDOUT_PIPE_NAME'] = stdOutPipeName;\r\n    newEnv['ATOM_SHELL_INTERNAL_RUN_AS_NODE'] = '1';\r\n    newEnv['ELECTRON_RUN_AS_NODE'] = '1';\r\n    return newEnv;\r\n}\r\nfunction fork(modulePath, args, options, callback) {\r\n    var callbackCalled = false;\r\n    var resolve = (result) => {\r\n        if (callbackCalled) {\r\n            return;\r\n        }\r\n        callbackCalled = true;\r\n        callback(undefined, result);\r\n    };\r\n    var reject = (err) => {\r\n        if (callbackCalled) {\r\n            return;\r\n        }\r\n        callbackCalled = true;\r\n        callback(err, undefined);\r\n    };\r\n    // Generate two unique pipe names\r\n    var stdInPipeName = generatePipeName();\r\n    var stdOutPipeName = generatePipeName();\r\n    var newEnv = generatePatchedEnv(options.env || process.env, stdInPipeName, stdOutPipeName);\r\n    var childProcess;\r\n    // Begin listening to stdout pipe\r\n    var server = net.createServer((stream) => {\r\n        // The child process will write exactly one chunk with content `ready` when it has installed a listener to the stdin pipe\r\n        stream.once('data', (_chunk) => {\r\n            // The child process is sending me the `ready` chunk, time to connect to the stdin pipe\r\n            childProcess.stdin = net.connect(stdInPipeName);\r\n            // From now on the childProcess.stdout is available for reading\r\n            childProcess.stdout = stream;\r\n            resolve(childProcess);\r\n        });\r\n    });\r\n    server.listen(stdOutPipeName);\r\n    var serverClosed = false;\r\n    var closeServer = () => {\r\n        if (serverClosed) {\r\n            return;\r\n        }\r\n        serverClosed = true;\r\n        server.close();\r\n    };\r\n    // Create the process\r\n    let bootstrapperPath = path.join(__dirname, 'electronForkStart');\r\n    childProcess = cp.fork(bootstrapperPath, [modulePath].concat(args), {\r\n        silent: true,\r\n        cwd: options.cwd,\r\n        env: newEnv,\r\n        execArgv: options.execArgv\r\n    });\r\n    childProcess.once('error', (err) => {\r\n        closeServer();\r\n        reject(err);\r\n    });\r\n    childProcess.once('exit', (err) => {\r\n        closeServer();\r\n        reject(err);\r\n    });\r\n}\r\nexports.fork = fork;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst cp = require(\"child_process\");\r\nconst path_1 = require(\"path\");\r\nconst isWindows = (process.platform === 'win32');\r\nconst isMacintosh = (process.platform === 'darwin');\r\nconst isLinux = (process.platform === 'linux');\r\nfunction terminate(process, cwd) {\r\n    if (isWindows) {\r\n        try {\r\n            // This we run in Atom execFileSync is available.\r\n            // Ignore stderr since this is otherwise piped to parent.stderr\r\n            // which might be already closed.\r\n            let options = {\r\n                stdio: ['pipe', 'pipe', 'ignore']\r\n            };\r\n            if (cwd) {\r\n                options.cwd = cwd;\r\n            }\r\n            cp.execFileSync('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    else if (isLinux || isMacintosh) {\r\n        try {\r\n            var cmd = path_1.join(__dirname, 'terminateProcess.sh');\r\n            var result = cp.spawnSync(cmd, [process.pid.toString()]);\r\n            return result.error ? false : true;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        process.kill('SIGKILL');\r\n        return true;\r\n    }\r\n}\r\nexports.terminate = terminate;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nclass ConfigurationFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        capabilities.workspace = capabilities.workspace || {};\r\n        let configCapabilities = capabilities;\r\n        configCapabilities.workspace.configuration = true;\r\n    }\r\n    initialize() {\r\n        let client = this._client;\r\n        client.onRequest(vscode_languageserver_protocol_1.Proposed.ConfigurationRequest.type, (params, token) => {\r\n            let configuration = (params) => {\r\n                let result = [];\r\n                for (let item of params.items) {\r\n                    let resource = item.scopeUri !== void 0 && item.scopeUri !== null ? this._client.protocol2CodeConverter.asUri(item.scopeUri) : undefined;\r\n                    result.push(this.getConfiguration(resource, item.section !== null ? item.section : undefined));\r\n                }\r\n                return result;\r\n            };\r\n            let middleware = this.getConfigurationMiddleware();\r\n            return middleware.configuration\r\n                ? middleware.configuration(params, token, configuration)\r\n                : configuration(params, token);\r\n        });\r\n    }\r\n    getConfiguration(resource, section) {\r\n        let result = null;\r\n        if (section) {\r\n            let index = section.lastIndexOf('.');\r\n            if (index === -1) {\r\n                result = vscode_1.workspace.getConfiguration(undefined, resource).get(section);\r\n            }\r\n            else {\r\n                let config = vscode_1.workspace.getConfiguration(section.substr(0, index));\r\n                if (config) {\r\n                    result = config.get(section.substr(index + 1));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            let config = vscode_1.workspace.getConfiguration(undefined, resource);\r\n            result = {};\r\n            for (let key of Object.keys(config)) {\r\n                if (config.has(key)) {\r\n                    result[key] = config.get(key);\r\n                }\r\n            }\r\n        }\r\n        if (!result) {\r\n            return null;\r\n        }\r\n        return result;\r\n    }\r\n    getConfigurationMiddleware() {\r\n        let middleware = this._client.clientOptions.middleware;\r\n        return middleware && middleware.workspace\r\n            ? middleware.workspace\r\n            : {};\r\n    }\r\n}\r\nexports.ConfigurationFeature = ConfigurationFeature;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nclass WorkspaceFoldersFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._listeners = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.Proposed.DidChangeWorkspaceFoldersNotification.type;\r\n    }\r\n    fillInitializeParams(params) {\r\n        let proposedParams = params;\r\n        let folders = vscode_1.workspace.workspaceFolders;\r\n        if (folders === void 0) {\r\n            proposedParams.workspaceFolders = null;\r\n        }\r\n        else {\r\n            proposedParams.workspaceFolders = folders.map(folder => this.asProtocol(folder));\r\n        }\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        capabilities.workspace = capabilities.workspace || {};\r\n        let workspaceCapabilities = capabilities;\r\n        workspaceCapabilities.workspace.workspaceFolders = true;\r\n    }\r\n    initialize() {\r\n        let client = this._client;\r\n        client.onRequest(vscode_languageserver_protocol_1.Proposed.WorkspaceFoldersRequest.type, (token) => {\r\n            let workspaceFolders = () => {\r\n                let folders = vscode_1.workspace.workspaceFolders;\r\n                if (folders === void 0) {\r\n                    return null;\r\n                }\r\n                let result = folders.map((folder) => {\r\n                    return this.asProtocol(folder);\r\n                });\r\n                return result;\r\n            };\r\n            let middleware = this.getWorkspaceFolderMiddleware();\r\n            return middleware.workspaceFolders\r\n                ? middleware.workspaceFolders(token, workspaceFolders)\r\n                : workspaceFolders(token);\r\n        });\r\n    }\r\n    register(_message, data) {\r\n        let id = data.id;\r\n        let disposable = vscode_1.workspace.onDidChangeWorkspaceFolders((event) => {\r\n            let didChangeWorkspaceFolders = (event) => {\r\n                let params = {\r\n                    event: {\r\n                        added: event.added.map(folder => this.asProtocol(folder)),\r\n                        removed: event.removed.map(folder => this.asProtocol(folder))\r\n                    }\r\n                };\r\n                this._client.sendNotification(vscode_languageserver_protocol_1.Proposed.DidChangeWorkspaceFoldersNotification.type, params);\r\n            };\r\n            let middleware = this.getWorkspaceFolderMiddleware();\r\n            middleware.didChangeWorkspaceFolders\r\n                ? middleware.didChangeWorkspaceFolders(event, didChangeWorkspaceFolders)\r\n                : didChangeWorkspaceFolders(event);\r\n        });\r\n        this._listeners.set(id, disposable);\r\n    }\r\n    unregister(id) {\r\n        let disposable = this._listeners.get(id);\r\n        if (disposable === void 0) {\r\n            return;\r\n        }\r\n        this._listeners.delete(id);\r\n        disposable.dispose();\r\n    }\r\n    dispose() {\r\n        for (let disposable of this._listeners.values()) {\r\n            disposable.dispose();\r\n        }\r\n        this._listeners.clear();\r\n    }\r\n    asProtocol(workspaceFolder) {\r\n        if (workspaceFolder === void 0) {\r\n            return null;\r\n        }\r\n        return { uri: this._client.code2ProtocolConverter.asUri(workspaceFolder.uri), name: workspaceFolder.name };\r\n    }\r\n    getWorkspaceFolderMiddleware() {\r\n        let middleware = this._client.clientOptions.middleware;\r\n        return middleware && middleware.workspace\r\n            ? middleware.workspace\r\n            : {};\r\n    }\r\n}\r\nexports.WorkspaceFoldersFeature = WorkspaceFoldersFeature;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst cp = require(\"child_process\");\r\nconst client_1 = require(\"./client\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst Is = require(\"./utils/is\");\r\nconst electron = require(\"./utils/electron\");\r\nconst processes_1 = require(\"./utils/processes\");\r\n__export(require(\"./client\"));\r\nvar TransportKind;\r\n(function (TransportKind) {\r\n    TransportKind[TransportKind[\"stdio\"] = 0] = \"stdio\";\r\n    TransportKind[TransportKind[\"ipc\"] = 1] = \"ipc\";\r\n    TransportKind[TransportKind[\"pipe\"] = 2] = \"pipe\";\r\n    TransportKind[TransportKind[\"socket\"] = 3] = \"socket\";\r\n})(TransportKind = exports.TransportKind || (exports.TransportKind = {}));\r\nvar Transport;\r\n(function (Transport) {\r\n    function isSocket(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.kind === TransportKind.socket && Is.number(candidate.port);\r\n    }\r\n    Transport.isSocket = isSocket;\r\n})(Transport || (Transport = {}));\r\nvar StreamInfo;\r\n(function (StreamInfo) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.writer !== void 0 && candidate.reader !== void 0;\r\n    }\r\n    StreamInfo.is = is;\r\n})(StreamInfo || (StreamInfo = {}));\r\nvar ChildProcessInfo;\r\n(function (ChildProcessInfo) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.process !== void 0 && typeof candidate.detached === 'boolean';\r\n    }\r\n    ChildProcessInfo.is = is;\r\n})(ChildProcessInfo || (ChildProcessInfo = {}));\r\nclass LanguageClient extends client_1.BaseLanguageClient {\r\n    constructor(arg1, arg2, arg3, arg4, arg5) {\r\n        let id;\r\n        let name;\r\n        let serverOptions;\r\n        let clientOptions;\r\n        let forceDebug;\r\n        if (Is.string(arg2)) {\r\n            id = arg1;\r\n            name = arg2;\r\n            serverOptions = arg3;\r\n            clientOptions = arg4;\r\n            forceDebug = !!arg5;\r\n        }\r\n        else {\r\n            id = arg1.toLowerCase();\r\n            name = arg1;\r\n            serverOptions = arg2;\r\n            clientOptions = arg3;\r\n            forceDebug = arg4;\r\n        }\r\n        if (forceDebug === void 0) {\r\n            forceDebug = false;\r\n        }\r\n        super(id, name, clientOptions);\r\n        this._serverOptions = serverOptions;\r\n        this._forceDebug = forceDebug;\r\n    }\r\n    stop() {\r\n        return super.stop().then(() => {\r\n            if (this._serverProcess) {\r\n                let toCheck = this._serverProcess;\r\n                this._serverProcess = undefined;\r\n                if (this._isDetached === void 0 || !this._isDetached) {\r\n                    this.checkProcessDied(toCheck);\r\n                }\r\n                this._isDetached = undefined;\r\n            }\r\n        });\r\n    }\r\n    checkProcessDied(childProcess) {\r\n        if (!childProcess) {\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            // Test if the process is still alive. Throws an exception if not\r\n            try {\r\n                process.kill(childProcess.pid, 0);\r\n                processes_1.terminate(childProcess);\r\n            }\r\n            catch (error) {\r\n                // All is fine.\r\n            }\r\n        }, 2000);\r\n    }\r\n    handleConnectionClosed() {\r\n        this._serverProcess = undefined;\r\n        super.handleConnectionClosed();\r\n    }\r\n    createMessageTransports(encoding) {\r\n        let rootPath = this.clientOptions.workspaceFolder\r\n            ? this.clientOptions.workspaceFolder.uri.fsPath\r\n            : vscode_1.workspace.rootPath;\r\n        function getEnvironment(env) {\r\n            if (!env) {\r\n                return process.env;\r\n            }\r\n            let result = Object.create(null);\r\n            Object.keys(process.env).forEach(key => result[key] = process.env[key]);\r\n            Object.keys(env).forEach(key => result[key] = env[key]);\r\n            return result;\r\n        }\r\n        function startedInDebugMode() {\r\n            let args = process.execArgv;\r\n            if (args) {\r\n                return args.some((arg) => /^--debug=?/.test(arg) || /^--debug-brk=?/.test(arg) || /^--inspect=?/.test(arg) || /^--inspect-brk=?/.test(arg));\r\n            }\r\n            ;\r\n            return false;\r\n        }\r\n        let server = this._serverOptions;\r\n        // We got a function.\r\n        if (Is.func(server)) {\r\n            return server().then((result) => {\r\n                if (client_1.MessageTransports.is(result)) {\r\n                    this._isDetached = !!result.detached;\r\n                    return result;\r\n                }\r\n                else if (StreamInfo.is(result)) {\r\n                    this._isDetached = !!result.detached;\r\n                    return { reader: new vscode_languageserver_protocol_1.StreamMessageReader(result.reader), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(result.writer) };\r\n                }\r\n                else {\r\n                    let cp;\r\n                    if (ChildProcessInfo.is(result)) {\r\n                        cp = result.process;\r\n                        this._isDetached = result.detached;\r\n                    }\r\n                    else {\r\n                        cp = result;\r\n                        this._isDetached = false;\r\n                    }\r\n                    cp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                    return { reader: new vscode_languageserver_protocol_1.StreamMessageReader(cp.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(cp.stdin) };\r\n                }\r\n            });\r\n        }\r\n        let json;\r\n        let runDebug = server;\r\n        if (runDebug.run || runDebug.debug) {\r\n            // We are under debugging. So use debug as well.\r\n            if (typeof v8debug === 'object' || this._forceDebug || startedInDebugMode()) {\r\n                json = runDebug.debug;\r\n            }\r\n            else {\r\n                json = runDebug.run;\r\n            }\r\n        }\r\n        else {\r\n            json = server;\r\n        }\r\n        if (json.module) {\r\n            let node = json;\r\n            let transport = node.transport || TransportKind.stdio;\r\n            if (node.runtime) {\r\n                let args = [];\r\n                let options = node.options || Object.create(null);\r\n                if (options.execArgv) {\r\n                    options.execArgv.forEach(element => args.push(element));\r\n                }\r\n                args.push(node.module);\r\n                if (node.args) {\r\n                    node.args.forEach(element => args.push(element));\r\n                }\r\n                let execOptions = Object.create(null);\r\n                execOptions.cwd = options.cwd || rootPath;\r\n                execOptions.env = getEnvironment(options.env);\r\n                let pipeName = undefined;\r\n                if (transport === TransportKind.ipc) {\r\n                    // exec options not correctly typed in lib\r\n                    execOptions.stdio = [null, null, null, 'ipc'];\r\n                    args.push('--node-ipc');\r\n                }\r\n                else if (transport === TransportKind.stdio) {\r\n                    args.push('--stdio');\r\n                }\r\n                else if (transport === TransportKind.pipe) {\r\n                    pipeName = vscode_languageserver_protocol_1.generateRandomPipeName();\r\n                    args.push(`--pipe=${pipeName}`);\r\n                }\r\n                else if (Transport.isSocket(transport)) {\r\n                    args.push(`--socket=${transport.port}`);\r\n                }\r\n                args.push(`--clientProcessId=${process.pid.toString()}`);\r\n                if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\r\n                    let serverProcess = cp.spawn(node.runtime, args, execOptions);\r\n                    if (!serverProcess || !serverProcess.pid) {\r\n                        return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                    }\r\n                    this._serverProcess = serverProcess;\r\n                    serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                    if (transport === TransportKind.ipc) {\r\n                        serverProcess.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                        return Promise.resolve({ reader: new vscode_languageserver_protocol_1.IPCMessageReader(serverProcess), writer: new vscode_languageserver_protocol_1.IPCMessageWriter(serverProcess) });\r\n                    }\r\n                    else {\r\n                        return Promise.resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\r\n                    }\r\n                }\r\n                else if (transport == TransportKind.pipe) {\r\n                    return vscode_languageserver_protocol_1.createClientPipeTransport(pipeName).then((transport) => {\r\n                        let process = cp.spawn(node.runtime, args, execOptions);\r\n                        if (!process || !process.pid) {\r\n                            return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                        }\r\n                        this._serverProcess = process;\r\n                        process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                        process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                        return transport.onConnected().then((protocol) => {\r\n                            return { reader: protocol[0], writer: protocol[1] };\r\n                        });\r\n                    });\r\n                }\r\n                else if (Transport.isSocket(transport)) {\r\n                    return vscode_languageserver_protocol_1.createClientSocketTransport(transport.port).then((transport) => {\r\n                        let process = cp.spawn(node.runtime, args, execOptions);\r\n                        if (!process || !process.pid) {\r\n                            return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                        }\r\n                        this._serverProcess = process;\r\n                        process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                        process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                        return transport.onConnected().then((protocol) => {\r\n                            return { reader: protocol[0], writer: protocol[1] };\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                let pipeName = undefined;\r\n                return new Promise((resolve, reject) => {\r\n                    let args = node.args && node.args.slice() || [];\r\n                    if (transport === TransportKind.ipc) {\r\n                        args.push('--node-ipc');\r\n                    }\r\n                    else if (transport === TransportKind.stdio) {\r\n                        args.push('--stdio');\r\n                    }\r\n                    else if (transport === TransportKind.pipe) {\r\n                        pipeName = vscode_languageserver_protocol_1.generateRandomPipeName();\r\n                        args.push(`--pipe=${pipeName}`);\r\n                    }\r\n                    else if (Transport.isSocket(transport)) {\r\n                        args.push(`--socket=${transport.port}`);\r\n                    }\r\n                    args.push(`--clientProcessId=${process.pid.toString()}`);\r\n                    let options = node.options || Object.create(null);\r\n                    options.execArgv = options.execArgv || [];\r\n                    options.cwd = options.cwd || rootPath;\r\n                    if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\r\n                        electron.fork(node.module, args || [], options, (error, serverProcess) => {\r\n                            if (error || !serverProcess) {\r\n                                reject(error);\r\n                            }\r\n                            else {\r\n                                this._serverProcess = serverProcess;\r\n                                serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                if (transport === TransportKind.ipc) {\r\n                                    serverProcess.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                    resolve({ reader: new vscode_languageserver_protocol_1.IPCMessageReader(this._serverProcess), writer: new vscode_languageserver_protocol_1.IPCMessageWriter(this._serverProcess) });\r\n                                }\r\n                                else {\r\n                                    resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (transport === TransportKind.pipe) {\r\n                        vscode_languageserver_protocol_1.createClientPipeTransport(pipeName).then((transport) => {\r\n                            electron.fork(node.module, args || [], options, (error, cp) => {\r\n                                if (error || !cp) {\r\n                                    reject(error);\r\n                                }\r\n                                else {\r\n                                    this._serverProcess = cp;\r\n                                    cp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                    cp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                    transport.onConnected().then((protocol) => {\r\n                                        resolve({ reader: protocol[0], writer: protocol[1] });\r\n                                    });\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                    else if (Transport.isSocket(transport)) {\r\n                        vscode_languageserver_protocol_1.createClientSocketTransport(transport.port).then((transport) => {\r\n                            electron.fork(node.module, args || [], options, (error, cp) => {\r\n                                if (error || !cp) {\r\n                                    reject(error);\r\n                                }\r\n                                else {\r\n                                    this._serverProcess = cp;\r\n                                    cp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                    cp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                    transport.onConnected().then((protocol) => {\r\n                                        resolve({ reader: protocol[0], writer: protocol[1] });\r\n                                    });\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        else if (json.command) {\r\n            let command = json;\r\n            let args = command.args || [];\r\n            let options = command.options || {};\r\n            options.cwd = options.cwd || rootPath;\r\n            let serverProcess = cp.spawn(command.command, args, options);\r\n            if (!serverProcess || !serverProcess.pid) {\r\n                return Promise.reject(`Launching server using command ${command.command} failed.`);\r\n            }\r\n            serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n            this._serverProcess = serverProcess;\r\n            this._isDetached = !!options.detached;\r\n            return Promise.resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\r\n        }\r\n        return Promise.reject(new Error(`Unsupported server configuration ` + JSON.stringify(server, null, 4)));\r\n    }\r\n    registerProposedFeatures() {\r\n        this.registerFeatures(ProposedFeatures.createAll(this));\r\n    }\r\n}\r\nexports.LanguageClient = LanguageClient;\r\nclass SettingMonitor {\r\n    constructor(_client, _setting) {\r\n        this._client = _client;\r\n        this._setting = _setting;\r\n        this._listeners = [];\r\n    }\r\n    start() {\r\n        vscode_1.workspace.onDidChangeConfiguration(this.onDidChangeConfiguration, this, this._listeners);\r\n        this.onDidChangeConfiguration();\r\n        return new vscode_1.Disposable(() => {\r\n            if (this._client.needsStop()) {\r\n                this._client.stop();\r\n            }\r\n        });\r\n    }\r\n    onDidChangeConfiguration() {\r\n        let index = this._setting.indexOf('.');\r\n        let primary = index >= 0 ? this._setting.substr(0, index) : this._setting;\r\n        let rest = index >= 0 ? this._setting.substr(index + 1) : undefined;\r\n        let enabled = rest ? vscode_1.workspace.getConfiguration(primary).get(rest, false) : vscode_1.workspace.getConfiguration(primary);\r\n        if (enabled && this._client.needsStart()) {\r\n            this._client.start();\r\n        }\r\n        else if (!enabled && this._client.needsStop()) {\r\n            this._client.stop();\r\n        }\r\n    }\r\n}\r\nexports.SettingMonitor = SettingMonitor;\r\n// Exporting proposed protocol.\r\nconst config = require(\"./configuration.proposed\");\r\nconst folders = require(\"./workspaceFolders.proposed\");\r\nvar ProposedFeatures;\r\n(function (ProposedFeatures) {\r\n    ProposedFeatures.ConfigurationFeature = config.ConfigurationFeature;\r\n    ProposedFeatures.WorkspaceFoldersFeature = folders.WorkspaceFoldersFeature;\r\n    function createAll(client) {\r\n        let result = [];\r\n        result.push(new ProposedFeatures.WorkspaceFoldersFeature(client));\r\n        result.push(new ProposedFeatures.ConfigurationFeature(client));\r\n        return result;\r\n    }\r\n    ProposedFeatures.createAll = createAll;\r\n})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));\r\n", "import * as path from \"path\";\nimport { workspace, ExtensionContext } from \"vscode\";\nimport {\n  LanguageClient,\n  LanguageClientOptions,\n  ServerOptions,\n  TransportKind,\n} from \"vscode-languageclient\";\n\nexport function activate(context: ExtensionContext) {\n  // We need to go one level up since an extension compile the js code into\n  // the output folder.\n  let serverModulePath = path.join(__dirname, \"..\", \"server\", \"server.js\");\n  let debugOptions = {\n    execArgv: [\"--nolazy\", \"--inspect=6010\"],\n    cwd: process.cwd(),\n  };\n  let serverOptions: ServerOptions = {\n    run: { module: serverModulePath, transport: TransportKind.ipc },\n    debug: {\n      module: serverModulePath,\n      transport: TransportKind.ipc,\n      options: debugOptions,\n    },\n  };\n\n  // Get file types to lint from user settings\n  let config = workspace.getConfiguration(\"htmlhint\");\n  let languages: string[] = config.get(\"documentSelector\");\n  let documentSelector = languages.map((language) => ({\n    language,\n    scheme: \"file\",\n  }));\n\n  // Set options\n  let clientOptions: LanguageClientOptions = {\n    documentSelector,\n    diagnosticCollectionName: \"htmlhint\",\n    synchronize: {\n      configurationSection: \"htmlhint\",\n      fileEvents: workspace.createFileSystemWatcher(\"**/.htmlhintrc\"),\n    },\n  };\n\n  // Create the language client and start it\n  let client = new LanguageClient(\n    \"HTML-hint\",\n    serverOptions,\n    clientOptions\n  );\n\n  // Start the client and add it to the subscriptions\n  let disposable = client.start();\n  context.subscriptions.push(disposable);\n}\n"],
  "mappings": "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",
  "names": ["exports", "exports", "ErrorCodes", "ResponseError", "AbstractMessageType", "RequestType0", "RequestType", "RequestType1", "RequestType2", "RequestType3", "RequestType4", "RequestType5", "RequestType6", "RequestType7", "RequestType8", "RequestType9", "NotificationType", "NotificationType0", "NotificationType1", "NotificationType2", "NotificationType3", "NotificationType4", "NotificationType5", "NotificationType6", "NotificationType7", "NotificationType8", "NotificationType9", "exports", "Disposable", "Event", "CallbackList", "Emitter", "exports", "MessageBuffer", "MessageReader", "AbstractMessageReader", "StreamMessageReader", "IPCMessageReader", "process", "SocketMessageReader", "exports", "MessageWriter", "AbstractMessageWriter", "StreamMessageWriter", "IPCMessageWriter", "process", "SocketMessageWriter", "error", "exports", "CancellationToken", "MutableToken", "CancellationTokenSource", "exports", "Touch", "LinkedMap", "exports", "exports", "exports", "__export", "CancelNotification", "Trace", "SetTraceNotification", "LogTraceNotification", "ConnectionErrors", "ConnectionError", "ConnectionStrategy", "ConnectionState", "startTime", "error", "require_main", "exports", "module", "require", "Position", "Range", "Location", "DiagnosticSeverity", "Diagnostic", "Command", "TextEdit", "TextDocumentEdit", "TextEditChangeImpl", "WorkspaceChange", "TextDocumentIdentifier", "VersionedTextDocumentIdentifier", "TextDocumentItem", "CompletionItemKind", "InsertTextFormat", "CompletionItem", "CompletionList", "MarkedString", "ParameterInformation", "SignatureInformation", "DocumentHighlightKind", "DocumentHighlight", "SymbolKind", "SymbolInformation", "CodeActionContext", "CodeLens", "FormattingOptions", "DocumentLink", "TextDocument", "TextDocumentSaveReason", "FullTextDocument", "Is", "undefined", "require_is", "exports", "exports", "DocumentFilter", "RegistrationRequest", "UnregistrationRequest", "TextDocumentSyncKind", "InitializeRequest", "InitializeError", "InitializedNotification", "ShutdownRequest", "ExitNotification", "DidChangeConfigurationNotification", "MessageType", "ShowMessageNotification", "ShowMessageRequest", "LogMessageNotification", "TelemetryEventNotification", "DidOpenTextDocumentNotification", "DidChangeTextDocumentNotification", "DidCloseTextDocumentNotification", "DidSaveTextDocumentNotification", "WillSaveTextDocumentNotification", "WillSaveTextDocumentWaitUntilRequest", "DidChangeWatchedFilesNotification", "FileChangeType", "WatchKind", "PublishDiagnosticsNotification", "CompletionRequest", "CompletionResolveRequest", "HoverRequest", "SignatureHelpRequest", "DefinitionRequest", "ReferencesRequest", "DocumentHighlightRequest", "DocumentSymbolRequest", "WorkspaceSymbolRequest", "CodeActionRequest", "CodeLensRequest", "CodeLensResolveRequest", "DocumentFormattingRequest", "DocumentRangeFormattingRequest", "DocumentOnTypeFormattingRequest", "RenameRequest", "DocumentLinkRequest", "DocumentLinkResolveRequest", "ExecuteCommandRequest", "ApplyWorkspaceEditRequest", "exports", "ConfigurationRequest", "exports", "WorkspaceFoldersRequest", "DidChangeWorkspaceFoldersNotification", "exports", "DocumentColorRequest", "ColorPresentationRequest", "require_main", "exports", "__export", "Proposed", "ConfigurationRequest", "WorkspaceFoldersRequest", "DidChangeWorkspaceFoldersNotification", "require_is", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "__export", "TransportKind", "ErrorAction", "CloseAction", "RevealOutputChannelOn", "State", "ClientState", "DynamicFeature", "data", "textDocument", "event", "options", "sections", "path", "MessageTransports", "exports", "path", "exports", "process", "exports", "params", "exports", "event", "require_main", "exports", "__export", "TransportKind", "Transport", "StreamInfo", "ChildProcessInfo", "LanguageClient", "cp", "transport", "process", "ProposedFeatures"]
}
